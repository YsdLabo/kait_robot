
LPC1768/rosserial_encoder.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00003d0d


Disassembly of section .text:

00000000 <__isr_vector>:
       0:	10008000 	.word	0x10008000
       4:	00003d0d 	.word	0x00003d0d
       8:	00003d3d 	.word	0x00003d3d
       c:	00003d3f 	.word	0x00003d3f
      10:	00003d41 	.word	0x00003d41
      14:	00003d43 	.word	0x00003d43
      18:	00003d45 	.word	0x00003d45
	...
      2c:	00003c41 	.word	0x00003c41
      30:	00003d49 	.word	0x00003d49
      34:	00000000 	.word	0x00000000
      38:	00003cab 	.word	0x00003cab
      3c:	00003ce1 	.word	0x00003ce1
      40:	00003d4f 	.word	0x00003d4f
      44:	00003d4f 	.word	0x00003d4f
      48:	00003d4f 	.word	0x00003d4f
      4c:	00003d4f 	.word	0x00003d4f
      50:	00003d4f 	.word	0x00003d4f
      54:	00003d4f 	.word	0x00003d4f
      58:	00003d4f 	.word	0x00003d4f
      5c:	00003d4f 	.word	0x00003d4f
      60:	00003d4f 	.word	0x00003d4f
      64:	00003d4f 	.word	0x00003d4f
      68:	00003d4f 	.word	0x00003d4f
      6c:	00003d4f 	.word	0x00003d4f
      70:	00003d4f 	.word	0x00003d4f
      74:	00003d4f 	.word	0x00003d4f
      78:	00003d4f 	.word	0x00003d4f
      7c:	00003d4f 	.word	0x00003d4f
      80:	00003d4f 	.word	0x00003d4f
      84:	00003d4f 	.word	0x00003d4f
      88:	00003d4f 	.word	0x00003d4f
      8c:	00003d4f 	.word	0x00003d4f
      90:	00003d4f 	.word	0x00003d4f
      94:	00003d4f 	.word	0x00003d4f
      98:	00003d4f 	.word	0x00003d4f
      9c:	00003d4f 	.word	0x00003d4f
      a0:	00003d4f 	.word	0x00003d4f
      a4:	00003d4f 	.word	0x00003d4f
      a8:	00003d4f 	.word	0x00003d4f
      ac:	00003d4f 	.word	0x00003d4f
      b0:	00003d4f 	.word	0x00003d4f
      b4:	00003d4f 	.word	0x00003d4f
      b8:	00003d4f 	.word	0x00003d4f
      bc:	00003d4f 	.word	0x00003d4f
      c0:	00003d4f 	.word	0x00003d4f
      c4:	00003d4f 	.word	0x00003d4f
      c8:	00003d4f 	.word	0x00003d4f

000000cc <__do_global_dtors_aux>:
      cc:	b510      	push	{r4, lr}
      ce:	4c05      	ldr	r4, [pc, #20]	; (e4 <__do_global_dtors_aux+0x18>)
      d0:	7823      	ldrb	r3, [r4, #0]
      d2:	b933      	cbnz	r3, e2 <__do_global_dtors_aux+0x16>
      d4:	4b04      	ldr	r3, [pc, #16]	; (e8 <__do_global_dtors_aux+0x1c>)
      d6:	b113      	cbz	r3, de <__do_global_dtors_aux+0x12>
      d8:	4804      	ldr	r0, [pc, #16]	; (ec <__do_global_dtors_aux+0x20>)
      da:	f3af 8000 	nop.w
      de:	2301      	movs	r3, #1
      e0:	7023      	strb	r3, [r4, #0]
      e2:	bd10      	pop	{r4, pc}
      e4:	10000160 	.word	0x10000160
      e8:	00000000 	.word	0x00000000
      ec:	000050ec 	.word	0x000050ec

000000f0 <frame_dummy>:
      f0:	4b0c      	ldr	r3, [pc, #48]	; (124 <frame_dummy+0x34>)
      f2:	b143      	cbz	r3, 106 <frame_dummy+0x16>
      f4:	480c      	ldr	r0, [pc, #48]	; (128 <frame_dummy+0x38>)
      f6:	b510      	push	{r4, lr}
      f8:	490c      	ldr	r1, [pc, #48]	; (12c <frame_dummy+0x3c>)
      fa:	f3af 8000 	nop.w
      fe:	480c      	ldr	r0, [pc, #48]	; (130 <frame_dummy+0x40>)
     100:	6803      	ldr	r3, [r0, #0]
     102:	b923      	cbnz	r3, 10e <frame_dummy+0x1e>
     104:	bd10      	pop	{r4, pc}
     106:	480a      	ldr	r0, [pc, #40]	; (130 <frame_dummy+0x40>)
     108:	6803      	ldr	r3, [r0, #0]
     10a:	b933      	cbnz	r3, 11a <frame_dummy+0x2a>
     10c:	4770      	bx	lr
     10e:	4b09      	ldr	r3, [pc, #36]	; (134 <frame_dummy+0x44>)
     110:	2b00      	cmp	r3, #0
     112:	d0f7      	beq.n	104 <frame_dummy+0x14>
     114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     118:	4718      	bx	r3
     11a:	4b06      	ldr	r3, [pc, #24]	; (134 <frame_dummy+0x44>)
     11c:	2b00      	cmp	r3, #0
     11e:	d0f5      	beq.n	10c <frame_dummy+0x1c>
     120:	4718      	bx	r3
     122:	bf00      	nop
     124:	00000000 	.word	0x00000000
     128:	000050ec 	.word	0x000050ec
     12c:	10000164 	.word	0x10000164
     130:	1000015c 	.word	0x1000015c
     134:	00000000 	.word	0x00000000

00000138 <std_msgs::Time::serialize(unsigned char*) const>:
     138:	6843      	ldr	r3, [r0, #4]
     13a:	700b      	strb	r3, [r1, #0]
     13c:	6843      	ldr	r3, [r0, #4]
     13e:	0a1b      	lsrs	r3, r3, #8
     140:	704b      	strb	r3, [r1, #1]
     142:	88c3      	ldrh	r3, [r0, #6]
     144:	708b      	strb	r3, [r1, #2]
     146:	79c3      	ldrb	r3, [r0, #7]
     148:	70cb      	strb	r3, [r1, #3]
     14a:	6883      	ldr	r3, [r0, #8]
     14c:	710b      	strb	r3, [r1, #4]
     14e:	6883      	ldr	r3, [r0, #8]
     150:	0a1b      	lsrs	r3, r3, #8
     152:	714b      	strb	r3, [r1, #5]
     154:	8943      	ldrh	r3, [r0, #10]
     156:	718b      	strb	r3, [r1, #6]
     158:	7ac3      	ldrb	r3, [r0, #11]
     15a:	2008      	movs	r0, #8
     15c:	71cb      	strb	r3, [r1, #7]
     15e:	4770      	bx	lr

00000160 <std_msgs::Time::deserialize(unsigned char*)>:
     160:	780b      	ldrb	r3, [r1, #0]
     162:	6043      	str	r3, [r0, #4]
     164:	784a      	ldrb	r2, [r1, #1]
     166:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
     16a:	6043      	str	r3, [r0, #4]
     16c:	788a      	ldrb	r2, [r1, #2]
     16e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
     172:	6043      	str	r3, [r0, #4]
     174:	78ca      	ldrb	r2, [r1, #3]
     176:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
     17a:	6043      	str	r3, [r0, #4]
     17c:	790b      	ldrb	r3, [r1, #4]
     17e:	6083      	str	r3, [r0, #8]
     180:	794a      	ldrb	r2, [r1, #5]
     182:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
     186:	6083      	str	r3, [r0, #8]
     188:	798a      	ldrb	r2, [r1, #6]
     18a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
     18e:	6083      	str	r3, [r0, #8]
     190:	79ca      	ldrb	r2, [r1, #7]
     192:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
     196:	6083      	str	r3, [r0, #8]
     198:	2008      	movs	r0, #8
     19a:	4770      	bx	lr

0000019c <std_msgs::Time::getType()>:
     19c:	4800      	ldr	r0, [pc, #0]	; (1a0 <std_msgs::Time::getType()+0x4>)
     19e:	4770      	bx	lr
     1a0:	00004d22 	.word	0x00004d22

000001a4 <std_msgs::Time::getMD5()>:
     1a4:	4800      	ldr	r0, [pc, #0]	; (1a8 <std_msgs::Time::getMD5()+0x4>)
     1a6:	4770      	bx	lr
     1a8:	00004d01 	.word	0x00004d01

000001ac <rosserial_msgs::TopicInfo::getType()>:
     1ac:	4800      	ldr	r0, [pc, #0]	; (1b0 <rosserial_msgs::TopicInfo::getType()+0x4>)
     1ae:	4770      	bx	lr
     1b0:	00004be0 	.word	0x00004be0

000001b4 <rosserial_msgs::TopicInfo::getMD5()>:
     1b4:	4800      	ldr	r0, [pc, #0]	; (1b8 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
     1b6:	4770      	bx	lr
     1b8:	00004bbf 	.word	0x00004bbf

000001bc <rosserial_msgs::Log::getType()>:
     1bc:	4800      	ldr	r0, [pc, #0]	; (1c0 <rosserial_msgs::Log::getType()+0x4>)
     1be:	4770      	bx	lr
     1c0:	00004bac 	.word	0x00004bac

000001c4 <rosserial_msgs::Log::getMD5()>:
     1c4:	4800      	ldr	r0, [pc, #0]	; (1c8 <rosserial_msgs::Log::getMD5()+0x4>)
     1c6:	4770      	bx	lr
     1c8:	00004b8b 	.word	0x00004b8b

000001cc <rosserial_msgs::RequestParamResponse::getType()>:
     1cc:	4800      	ldr	r0, [pc, #0]	; (1d0 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
     1ce:	4770      	bx	lr
     1d0:	00004bf9 	.word	0x00004bf9

000001d4 <rosserial_msgs::RequestParamResponse::getMD5()>:
     1d4:	4800      	ldr	r0, [pc, #0]	; (1d8 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
     1d6:	4770      	bx	lr
     1d8:	00004b6a 	.word	0x00004b6a

000001dc <std_msgs::MultiArrayDimension::getType()>:
     1dc:	4800      	ldr	r0, [pc, #0]	; (1e0 <std_msgs::MultiArrayDimension::getType()+0x4>)
     1de:	4770      	bx	lr
     1e0:	00004ce4 	.word	0x00004ce4

000001e4 <std_msgs::MultiArrayDimension::getMD5()>:
     1e4:	4800      	ldr	r0, [pc, #0]	; (1e8 <std_msgs::MultiArrayDimension::getMD5()+0x4>)
     1e6:	4770      	bx	lr
     1e8:	00004cc3 	.word	0x00004cc3

000001ec <std_msgs::MultiArrayLayout::serialize(unsigned char*) const>:
     1ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     1ee:	4604      	mov	r4, r0
     1f0:	460d      	mov	r5, r1
     1f2:	2700      	movs	r7, #0
     1f4:	2604      	movs	r6, #4
     1f6:	6843      	ldr	r3, [r0, #4]
     1f8:	700b      	strb	r3, [r1, #0]
     1fa:	6843      	ldr	r3, [r0, #4]
     1fc:	0a1b      	lsrs	r3, r3, #8
     1fe:	704b      	strb	r3, [r1, #1]
     200:	88c3      	ldrh	r3, [r0, #6]
     202:	708b      	strb	r3, [r1, #2]
     204:	79c3      	ldrb	r3, [r0, #7]
     206:	70cb      	strb	r3, [r1, #3]
     208:	6863      	ldr	r3, [r4, #4]
     20a:	19a9      	adds	r1, r5, r6
     20c:	429f      	cmp	r7, r3
     20e:	d208      	bcs.n	222 <std_msgs::MultiArrayLayout::serialize(unsigned char*) const+0x36>
     210:	69a0      	ldr	r0, [r4, #24]
     212:	013b      	lsls	r3, r7, #4
     214:	58c2      	ldr	r2, [r0, r3]
     216:	4418      	add	r0, r3
     218:	6812      	ldr	r2, [r2, #0]
     21a:	4790      	blx	r2
     21c:	3701      	adds	r7, #1
     21e:	4406      	add	r6, r0
     220:	e7f2      	b.n	208 <std_msgs::MultiArrayLayout::serialize(unsigned char*) const+0x1c>
     222:	69e3      	ldr	r3, [r4, #28]
     224:	1d30      	adds	r0, r6, #4
     226:	55ab      	strb	r3, [r5, r6]
     228:	69e3      	ldr	r3, [r4, #28]
     22a:	0a1b      	lsrs	r3, r3, #8
     22c:	704b      	strb	r3, [r1, #1]
     22e:	8be3      	ldrh	r3, [r4, #30]
     230:	708b      	strb	r3, [r1, #2]
     232:	7fe3      	ldrb	r3, [r4, #31]
     234:	70cb      	strb	r3, [r1, #3]
     236:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00000238 <std_msgs::MultiArrayLayout::getType()>:
     238:	4800      	ldr	r0, [pc, #0]	; (23c <std_msgs::MultiArrayLayout::getType()+0x4>)
     23a:	4770      	bx	lr
     23c:	00004ca9 	.word	0x00004ca9

00000240 <std_msgs::MultiArrayLayout::getMD5()>:
     240:	4800      	ldr	r0, [pc, #0]	; (244 <std_msgs::MultiArrayLayout::getMD5()+0x4>)
     242:	4770      	bx	lr
     244:	00004c88 	.word	0x00004c88

00000248 <std_msgs::Int32MultiArray::serialize(unsigned char*) const>:
     248:	b538      	push	{r3, r4, r5, lr}
     24a:	4604      	mov	r4, r0
     24c:	3004      	adds	r0, #4
     24e:	460d      	mov	r5, r1
     250:	f7ff ffcc 	bl	1ec <std_msgs::MultiArrayLayout::serialize(unsigned char*) const>
     254:	2100      	movs	r1, #0
     256:	6a63      	ldr	r3, [r4, #36]	; 0x24
     258:	542b      	strb	r3, [r5, r0]
     25a:	6a62      	ldr	r2, [r4, #36]	; 0x24
     25c:	182b      	adds	r3, r5, r0
     25e:	0a12      	lsrs	r2, r2, #8
     260:	705a      	strb	r2, [r3, #1]
     262:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
     264:	3004      	adds	r0, #4
     266:	709a      	strb	r2, [r3, #2]
     268:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
     26c:	70da      	strb	r2, [r3, #3]
     26e:	182b      	adds	r3, r5, r0
     270:	6a62      	ldr	r2, [r4, #36]	; 0x24
     272:	1b58      	subs	r0, r3, r5
     274:	4291      	cmp	r1, r2
     276:	f103 0304 	add.w	r3, r3, #4
     27a:	d20f      	bcs.n	29c <std_msgs::Int32MultiArray::serialize(unsigned char*) const+0x54>
     27c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     27e:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
     282:	3101      	adds	r1, #1
     284:	0a10      	lsrs	r0, r2, #8
     286:	f803 2c04 	strb.w	r2, [r3, #-4]
     28a:	f803 0c03 	strb.w	r0, [r3, #-3]
     28e:	0c10      	lsrs	r0, r2, #16
     290:	0e12      	lsrs	r2, r2, #24
     292:	f803 0c02 	strb.w	r0, [r3, #-2]
     296:	f803 2c01 	strb.w	r2, [r3, #-1]
     29a:	e7e9      	b.n	270 <std_msgs::Int32MultiArray::serialize(unsigned char*) const+0x28>
     29c:	bd38      	pop	{r3, r4, r5, pc}
	...

000002a0 <std_msgs::Int32MultiArray::getType()>:
     2a0:	4800      	ldr	r0, [pc, #0]	; (2a4 <std_msgs::Int32MultiArray::getType()+0x4>)
     2a2:	4770      	bx	lr
     2a4:	00004c6f 	.word	0x00004c6f

000002a8 <std_msgs::Int32MultiArray::getMD5()>:
     2a8:	4800      	ldr	r0, [pc, #0]	; (2ac <std_msgs::Int32MultiArray::getMD5()+0x4>)
     2aa:	4770      	bx	lr
     2ac:	00004c4e 	.word	0x00004c4e

000002b0 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
     2b0:	6803      	ldr	r3, [r0, #0]
     2b2:	4718      	bx	r3

000002b4 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
     2b4:	b108      	cbz	r0, 2ba <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
     2b6:	680b      	ldr	r3, [r1, #0]
     2b8:	6003      	str	r3, [r0, #0]
     2ba:	4770      	bx	lr

000002bc <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
     2bc:	4770      	bx	lr

000002be <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
     2be:	f890 055c 	ldrb.w	r0, [r0, #1372]	; 0x55c
     2c2:	4770      	bx	lr

000002c4 <enc_loop()>:
     2c4:	b5f0      	push	{r4, r5, r6, r7, lr}
     2c6:	4e17      	ldr	r6, [pc, #92]	; (324 <enc_loop()+0x60>)
     2c8:	2400      	movs	r4, #0
     2ca:	46b6      	mov	lr, r6
     2cc:	4916      	ldr	r1, [pc, #88]	; (328 <enc_loop()+0x64>)
     2ce:	4d17      	ldr	r5, [pc, #92]	; (32c <enc_loop()+0x68>)
     2d0:	4a17      	ldr	r2, [pc, #92]	; (330 <enc_loop()+0x6c>)
     2d2:	6acb      	ldr	r3, [r1, #44]	; 0x2c
     2d4:	684f      	ldr	r7, [r1, #4]
     2d6:	6818      	ldr	r0, [r3, #0]
     2d8:	69cb      	ldr	r3, [r1, #28]
     2da:	4218      	tst	r0, r3
     2dc:	bf14      	ite	ne
     2de:	2302      	movne	r3, #2
     2e0:	2300      	moveq	r3, #0
     2e2:	6948      	ldr	r0, [r1, #20]
     2e4:	706b      	strb	r3, [r5, #1]
     2e6:	6800      	ldr	r0, [r0, #0]
     2e8:	4238      	tst	r0, r7
     2ea:	bf18      	it	ne
     2ec:	f043 0301 	orrne.w	r3, r3, #1
     2f0:	5da0      	ldrb	r0, [r4, r6]
     2f2:	f805 3f01 	strb.w	r3, [r5, #1]!
     2f6:	4283      	cmp	r3, r0
     2f8:	d00c      	beq.n	314 <enc_loop()+0x50>
     2fa:	eb03 0040 	add.w	r0, r3, r0, lsl #1
     2fe:	f000 0003 	and.w	r0, r0, #3
     302:	2801      	cmp	r0, #1
     304:	6810      	ldr	r0, [r2, #0]
     306:	bf8c      	ite	hi
     308:	3001      	addhi	r0, #1
     30a:	f100 30ff 	addls.w	r0, r0, #4294967295	; 0xffffffff
     30e:	6010      	str	r0, [r2, #0]
     310:	f80e 3004 	strb.w	r3, [lr, r4]
     314:	3401      	adds	r4, #1
     316:	2c08      	cmp	r4, #8
     318:	f101 0130 	add.w	r1, r1, #48	; 0x30
     31c:	f102 0204 	add.w	r2, r2, #4
     320:	d1d7      	bne.n	2d2 <enc_loop()+0xe>
     322:	bdf0      	pop	{r4, r5, r6, r7, pc}
     324:	1000032c 	.word	0x1000032c
     328:	100001a4 	.word	0x100001a4
     32c:	10000323 	.word	0x10000323
     330:	10000334 	.word	0x10000334

00000334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>:
     334:	b570      	push	{r4, r5, r6, lr}
     336:	4604      	mov	r4, r0
     338:	460d      	mov	r5, r1
     33a:	4616      	mov	r6, r2
     33c:	2100      	movs	r1, #0
     33e:	2218      	movs	r2, #24
     340:	f003 ff01 	bl	4146 <memset>
     344:	4620      	mov	r0, r4
     346:	4632      	mov	r2, r6
     348:	4629      	mov	r1, r5
     34a:	f001 f90a 	bl	1562 <gpio_init_in_ex>
     34e:	4620      	mov	r0, r4
     350:	bd70      	pop	{r4, r5, r6, pc}

00000352 <mbed::Callback<void ()>::~Callback()>:
     352:	68c3      	ldr	r3, [r0, #12]
     354:	b510      	push	{r4, lr}
     356:	4604      	mov	r4, r0
     358:	b10b      	cbz	r3, 35e <mbed::Callback<void ()>::~Callback()+0xc>
     35a:	689b      	ldr	r3, [r3, #8]
     35c:	4798      	blx	r3
     35e:	4620      	mov	r0, r4
     360:	bd10      	pop	{r4, pc}
	...

00000364 <mbed::Ticker::~Ticker()>:
     364:	b538      	push	{r3, r4, r5, lr}
     366:	4605      	mov	r5, r0
     368:	4604      	mov	r4, r0
     36a:	4b06      	ldr	r3, [pc, #24]	; (384 <mbed::Ticker::~Ticker()+0x20>)
     36c:	f845 3b18 	str.w	r3, [r5], #24
     370:	f003 f984 	bl	367c <mbed::Ticker::detach()>
     374:	4628      	mov	r0, r5
     376:	f7ff ffec 	bl	352 <mbed::Callback<void ()>::~Callback()>
     37a:	4620      	mov	r0, r4
     37c:	f003 fad4 	bl	3928 <mbed::TimerEvent::~TimerEvent()>
     380:	4620      	mov	r0, r4
     382:	bd38      	pop	{r3, r4, r5, pc}
     384:	00004fe4 	.word	0x00004fe4

00000388 <mbed::Ticker::~Ticker()>:
     388:	b510      	push	{r4, lr}
     38a:	4604      	mov	r4, r0
     38c:	f7ff ffea 	bl	364 <mbed::Ticker::~Ticker()>
     390:	4620      	mov	r0, r4
     392:	f003 fc1b 	bl	3bcc <operator delete(void*)>
     396:	4620      	mov	r0, r4
     398:	bd10      	pop	{r4, pc}

0000039a <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>:
     39a:	b538      	push	{r3, r4, r5, lr}
     39c:	68cb      	ldr	r3, [r1, #12]
     39e:	4604      	mov	r4, r0
     3a0:	460d      	mov	r5, r1
     3a2:	b10b      	cbz	r3, 3a8 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)+0xe>
     3a4:	685b      	ldr	r3, [r3, #4]
     3a6:	4798      	blx	r3
     3a8:	68eb      	ldr	r3, [r5, #12]
     3aa:	4620      	mov	r0, r4
     3ac:	60e3      	str	r3, [r4, #12]
     3ae:	bd38      	pop	{r3, r4, r5, pc}

000003b0 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
     3b0:	2300      	movs	r3, #0
     3b2:	3801      	subs	r0, #1
     3b4:	fa21 f203 	lsr.w	r2, r1, r3
     3b8:	3308      	adds	r3, #8
     3ba:	2b20      	cmp	r3, #32
     3bc:	f800 2f01 	strb.w	r2, [r0, #1]!
     3c0:	d1f8      	bne.n	3b4 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
     3c2:	4770      	bx	lr

000003c4 <std_msgs::MultiArrayDimension::serialize(unsigned char*) const>:
     3c4:	b570      	push	{r4, r5, r6, lr}
     3c6:	4605      	mov	r5, r0
     3c8:	6840      	ldr	r0, [r0, #4]
     3ca:	460c      	mov	r4, r1
     3cc:	f004 f987 	bl	46de <strlen>
     3d0:	4606      	mov	r6, r0
     3d2:	4601      	mov	r1, r0
     3d4:	4620      	mov	r0, r4
     3d6:	f7ff ffeb 	bl	3b0 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     3da:	6869      	ldr	r1, [r5, #4]
     3dc:	4632      	mov	r2, r6
     3de:	1d20      	adds	r0, r4, #4
     3e0:	f003 fe8c 	bl	40fc <memcpy>
     3e4:	68ab      	ldr	r3, [r5, #8]
     3e6:	19a1      	adds	r1, r4, r6
     3e8:	710b      	strb	r3, [r1, #4]
     3ea:	68ab      	ldr	r3, [r5, #8]
     3ec:	f106 000c 	add.w	r0, r6, #12
     3f0:	0a1b      	lsrs	r3, r3, #8
     3f2:	714b      	strb	r3, [r1, #5]
     3f4:	896b      	ldrh	r3, [r5, #10]
     3f6:	718b      	strb	r3, [r1, #6]
     3f8:	7aeb      	ldrb	r3, [r5, #11]
     3fa:	71cb      	strb	r3, [r1, #7]
     3fc:	68eb      	ldr	r3, [r5, #12]
     3fe:	720b      	strb	r3, [r1, #8]
     400:	68eb      	ldr	r3, [r5, #12]
     402:	0a1b      	lsrs	r3, r3, #8
     404:	724b      	strb	r3, [r1, #9]
     406:	89eb      	ldrh	r3, [r5, #14]
     408:	728b      	strb	r3, [r1, #10]
     40a:	7beb      	ldrb	r3, [r5, #15]
     40c:	72cb      	strb	r3, [r1, #11]
     40e:	bd70      	pop	{r4, r5, r6, pc}

00000410 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
     410:	6843      	ldr	r3, [r0, #4]
     412:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     416:	700b      	strb	r3, [r1, #0]
     418:	6843      	ldr	r3, [r0, #4]
     41a:	460d      	mov	r5, r1
     41c:	0a1b      	lsrs	r3, r3, #8
     41e:	704b      	strb	r3, [r1, #1]
     420:	88c3      	ldrh	r3, [r0, #6]
     422:	1d0a      	adds	r2, r1, #4
     424:	708b      	strb	r3, [r1, #2]
     426:	79c3      	ldrb	r3, [r0, #7]
     428:	4604      	mov	r4, r0
     42a:	70cb      	strb	r3, [r1, #3]
     42c:	2100      	movs	r1, #0
     42e:	6860      	ldr	r0, [r4, #4]
     430:	1b53      	subs	r3, r2, r5
     432:	4281      	cmp	r1, r0
     434:	f102 0204 	add.w	r2, r2, #4
     438:	d20f      	bcs.n	45a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4a>
     43a:	68e3      	ldr	r3, [r4, #12]
     43c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
     440:	3101      	adds	r1, #1
     442:	0a18      	lsrs	r0, r3, #8
     444:	f802 3c04 	strb.w	r3, [r2, #-4]
     448:	f802 0c03 	strb.w	r0, [r2, #-3]
     44c:	0c18      	lsrs	r0, r3, #16
     44e:	0e1b      	lsrs	r3, r3, #24
     450:	f802 0c02 	strb.w	r0, [r2, #-2]
     454:	f802 3c01 	strb.w	r3, [r2, #-1]
     458:	e7e9      	b.n	42e <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
     45a:	6922      	ldr	r2, [r4, #16]
     45c:	54ea      	strb	r2, [r5, r3]
     45e:	6921      	ldr	r1, [r4, #16]
     460:	18ea      	adds	r2, r5, r3
     462:	0a09      	lsrs	r1, r1, #8
     464:	7051      	strb	r1, [r2, #1]
     466:	8a61      	ldrh	r1, [r4, #18]
     468:	3304      	adds	r3, #4
     46a:	7091      	strb	r1, [r2, #2]
     46c:	7ce1      	ldrb	r1, [r4, #19]
     46e:	442b      	add	r3, r5
     470:	70d1      	strb	r1, [r2, #3]
     472:	2100      	movs	r1, #0
     474:	6922      	ldr	r2, [r4, #16]
     476:	1b5e      	subs	r6, r3, r5
     478:	4291      	cmp	r1, r2
     47a:	f103 0304 	add.w	r3, r3, #4
     47e:	d20f      	bcs.n	4a0 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x90>
     480:	69a2      	ldr	r2, [r4, #24]
     482:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
     486:	3101      	adds	r1, #1
     488:	0a10      	lsrs	r0, r2, #8
     48a:	f803 2c04 	strb.w	r2, [r3, #-4]
     48e:	f803 0c03 	strb.w	r0, [r3, #-3]
     492:	0c10      	lsrs	r0, r2, #16
     494:	0e12      	lsrs	r2, r2, #24
     496:	f803 0c02 	strb.w	r0, [r3, #-2]
     49a:	f803 2c01 	strb.w	r2, [r3, #-1]
     49e:	e7e9      	b.n	474 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x64>
     4a0:	2700      	movs	r7, #0
     4a2:	69e3      	ldr	r3, [r4, #28]
     4a4:	55ab      	strb	r3, [r5, r6]
     4a6:	69e2      	ldr	r2, [r4, #28]
     4a8:	19ab      	adds	r3, r5, r6
     4aa:	0a12      	lsrs	r2, r2, #8
     4ac:	705a      	strb	r2, [r3, #1]
     4ae:	8be2      	ldrh	r2, [r4, #30]
     4b0:	3604      	adds	r6, #4
     4b2:	709a      	strb	r2, [r3, #2]
     4b4:	7fe2      	ldrb	r2, [r4, #31]
     4b6:	70da      	strb	r2, [r3, #3]
     4b8:	69e3      	ldr	r3, [r4, #28]
     4ba:	429f      	cmp	r7, r3
     4bc:	d214      	bcs.n	4e8 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xd8>
     4be:	6a63      	ldr	r3, [r4, #36]	; 0x24
     4c0:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
     4c4:	f004 f90b 	bl	46de <strlen>
     4c8:	4680      	mov	r8, r0
     4ca:	4601      	mov	r1, r0
     4cc:	19a8      	adds	r0, r5, r6
     4ce:	f7ff ff6f 	bl	3b0 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     4d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
     4d4:	3604      	adds	r6, #4
     4d6:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
     4da:	19a8      	adds	r0, r5, r6
     4dc:	4642      	mov	r2, r8
     4de:	f003 fe0d 	bl	40fc <memcpy>
     4e2:	4446      	add	r6, r8
     4e4:	3701      	adds	r7, #1
     4e6:	e7e7      	b.n	4b8 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xa8>
     4e8:	4630      	mov	r0, r6
     4ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000004ee <rosserial_msgs::Log::serialize(unsigned char*) const>:
     4ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     4f0:	460e      	mov	r6, r1
     4f2:	7903      	ldrb	r3, [r0, #4]
     4f4:	4605      	mov	r5, r0
     4f6:	f806 3b01 	strb.w	r3, [r6], #1
     4fa:	6880      	ldr	r0, [r0, #8]
     4fc:	460f      	mov	r7, r1
     4fe:	f004 f8ee 	bl	46de <strlen>
     502:	4604      	mov	r4, r0
     504:	4601      	mov	r1, r0
     506:	4630      	mov	r0, r6
     508:	f7ff ff52 	bl	3b0 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     50c:	4622      	mov	r2, r4
     50e:	68a9      	ldr	r1, [r5, #8]
     510:	1d78      	adds	r0, r7, #5
     512:	f003 fdf3 	bl	40fc <memcpy>
     516:	1d60      	adds	r0, r4, #5
     518:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000051a <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
     51a:	8883      	ldrh	r3, [r0, #4]
     51c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     520:	700b      	strb	r3, [r1, #0]
     522:	8883      	ldrh	r3, [r0, #4]
     524:	4605      	mov	r5, r0
     526:	0a1b      	lsrs	r3, r3, #8
     528:	704b      	strb	r3, [r1, #1]
     52a:	6880      	ldr	r0, [r0, #8]
     52c:	460c      	mov	r4, r1
     52e:	f004 f8d6 	bl	46de <strlen>
     532:	4607      	mov	r7, r0
     534:	4601      	mov	r1, r0
     536:	1ca0      	adds	r0, r4, #2
     538:	f7ff ff3a 	bl	3b0 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     53c:	463a      	mov	r2, r7
     53e:	68a9      	ldr	r1, [r5, #8]
     540:	1da0      	adds	r0, r4, #6
     542:	f003 fddb 	bl	40fc <memcpy>
     546:	68e8      	ldr	r0, [r5, #12]
     548:	f004 f8c9 	bl	46de <strlen>
     54c:	4606      	mov	r6, r0
     54e:	f107 0806 	add.w	r8, r7, #6
     552:	4601      	mov	r1, r0
     554:	370a      	adds	r7, #10
     556:	eb04 0008 	add.w	r0, r4, r8
     55a:	f7ff ff29 	bl	3b0 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     55e:	4632      	mov	r2, r6
     560:	68e9      	ldr	r1, [r5, #12]
     562:	19e0      	adds	r0, r4, r7
     564:	f003 fdca 	bl	40fc <memcpy>
     568:	6928      	ldr	r0, [r5, #16]
     56a:	f004 f8b8 	bl	46de <strlen>
     56e:	443e      	add	r6, r7
     570:	4607      	mov	r7, r0
     572:	4601      	mov	r1, r0
     574:	19a0      	adds	r0, r4, r6
     576:	3604      	adds	r6, #4
     578:	f7ff ff1a 	bl	3b0 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     57c:	463a      	mov	r2, r7
     57e:	19a0      	adds	r0, r4, r6
     580:	6929      	ldr	r1, [r5, #16]
     582:	f003 fdbb 	bl	40fc <memcpy>
     586:	696b      	ldr	r3, [r5, #20]
     588:	443e      	add	r6, r7
     58a:	55a3      	strb	r3, [r4, r6]
     58c:	0a1a      	lsrs	r2, r3, #8
     58e:	4434      	add	r4, r6
     590:	7062      	strb	r2, [r4, #1]
     592:	0c1a      	lsrs	r2, r3, #16
     594:	0e1b      	lsrs	r3, r3, #24
     596:	70a2      	strb	r2, [r4, #2]
     598:	70e3      	strb	r3, [r4, #3]
     59a:	1d30      	adds	r0, r6, #4
     59c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000005a0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
     5a0:	2300      	movs	r3, #0
     5a2:	b510      	push	{r4, lr}
     5a4:	6003      	str	r3, [r0, #0]
     5a6:	3901      	subs	r1, #1
     5a8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
     5ac:	fa02 f403 	lsl.w	r4, r2, r3
     5b0:	6802      	ldr	r2, [r0, #0]
     5b2:	3308      	adds	r3, #8
     5b4:	4322      	orrs	r2, r4
     5b6:	2b20      	cmp	r3, #32
     5b8:	6002      	str	r2, [r0, #0]
     5ba:	d1f5      	bne.n	5a8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
     5bc:	bd10      	pop	{r4, pc}

000005be <rosserial_msgs::Log::deserialize(unsigned char*)>:
     5be:	b537      	push	{r0, r1, r2, r4, r5, lr}
     5c0:	460c      	mov	r4, r1
     5c2:	f811 3b01 	ldrb.w	r3, [r1], #1
     5c6:	4605      	mov	r5, r0
     5c8:	7103      	strb	r3, [r0, #4]
     5ca:	a801      	add	r0, sp, #4
     5cc:	f7ff ffe8 	bl	5a0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     5d0:	9b01      	ldr	r3, [sp, #4]
     5d2:	1d62      	adds	r2, r4, #5
     5d4:	1d58      	adds	r0, r3, #5
     5d6:	1b11      	subs	r1, r2, r4
     5d8:	4288      	cmp	r0, r1
     5da:	d904      	bls.n	5e6 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
     5dc:	f812 1b01 	ldrb.w	r1, [r2], #1
     5e0:	f802 1c02 	strb.w	r1, [r2, #-2]
     5e4:	e7f7      	b.n	5d6 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
     5e6:	2200      	movs	r2, #0
     5e8:	4423      	add	r3, r4
     5ea:	3404      	adds	r4, #4
     5ec:	711a      	strb	r2, [r3, #4]
     5ee:	60ac      	str	r4, [r5, #8]
     5f0:	b003      	add	sp, #12
     5f2:	bd30      	pop	{r4, r5, pc}

000005f4 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
     5f4:	b5f0      	push	{r4, r5, r6, r7, lr}
     5f6:	460c      	mov	r4, r1
     5f8:	780b      	ldrb	r3, [r1, #0]
     5fa:	b085      	sub	sp, #20
     5fc:	8083      	strh	r3, [r0, #4]
     5fe:	784a      	ldrb	r2, [r1, #1]
     600:	4606      	mov	r6, r0
     602:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
     606:	8083      	strh	r3, [r0, #4]
     608:	3102      	adds	r1, #2
     60a:	a801      	add	r0, sp, #4
     60c:	f7ff ffc8 	bl	5a0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     610:	9f01      	ldr	r7, [sp, #4]
     612:	1da3      	adds	r3, r4, #6
     614:	1dbd      	adds	r5, r7, #6
     616:	1b1a      	subs	r2, r3, r4
     618:	4295      	cmp	r5, r2
     61a:	d904      	bls.n	626 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
     61c:	f813 2b01 	ldrb.w	r2, [r3], #1
     620:	f803 2c02 	strb.w	r2, [r3, #-2]
     624:	e7f7      	b.n	616 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
     626:	2200      	movs	r2, #0
     628:	19e3      	adds	r3, r4, r7
     62a:	715a      	strb	r2, [r3, #5]
     62c:	1d63      	adds	r3, r4, #5
     62e:	60b3      	str	r3, [r6, #8]
     630:	1961      	adds	r1, r4, r5
     632:	a802      	add	r0, sp, #8
     634:	f7ff ffb4 	bl	5a0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     638:	1d2b      	adds	r3, r5, #4
     63a:	9d02      	ldr	r5, [sp, #8]
     63c:	f107 020a 	add.w	r2, r7, #10
     640:	441d      	add	r5, r3
     642:	4422      	add	r2, r4
     644:	1b11      	subs	r1, r2, r4
     646:	428d      	cmp	r5, r1
     648:	d904      	bls.n	654 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
     64a:	f812 1b01 	ldrb.w	r1, [r2], #1
     64e:	f802 1c02 	strb.w	r1, [r2, #-2]
     652:	e7f7      	b.n	644 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
     654:	2200      	movs	r2, #0
     656:	3b01      	subs	r3, #1
     658:	1961      	adds	r1, r4, r5
     65a:	4423      	add	r3, r4
     65c:	f801 2c01 	strb.w	r2, [r1, #-1]
     660:	a803      	add	r0, sp, #12
     662:	60f3      	str	r3, [r6, #12]
     664:	f7ff ff9c 	bl	5a0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     668:	9803      	ldr	r0, [sp, #12]
     66a:	3504      	adds	r5, #4
     66c:	4428      	add	r0, r5
     66e:	1963      	adds	r3, r4, r5
     670:	1b1a      	subs	r2, r3, r4
     672:	4290      	cmp	r0, r2
     674:	d904      	bls.n	680 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
     676:	f813 2b01 	ldrb.w	r2, [r3], #1
     67a:	f803 2c02 	strb.w	r2, [r3, #-2]
     67e:	e7f7      	b.n	670 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
     680:	2300      	movs	r3, #0
     682:	3d01      	subs	r5, #1
     684:	1822      	adds	r2, r4, r0
     686:	4425      	add	r5, r4
     688:	f802 3c01 	strb.w	r3, [r2, #-1]
     68c:	6135      	str	r5, [r6, #16]
     68e:	7893      	ldrb	r3, [r2, #2]
     690:	7851      	ldrb	r1, [r2, #1]
     692:	041b      	lsls	r3, r3, #16
     694:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
     698:	5c21      	ldrb	r1, [r4, r0]
     69a:	78d2      	ldrb	r2, [r2, #3]
     69c:	430b      	orrs	r3, r1
     69e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
     6a2:	3004      	adds	r0, #4
     6a4:	6173      	str	r3, [r6, #20]
     6a6:	b005      	add	sp, #20
     6a8:	bdf0      	pop	{r4, r5, r6, r7, pc}

000006aa <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
     6aa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
     6ae:	6843      	ldr	r3, [r0, #4]
     6b0:	680d      	ldr	r5, [r1, #0]
     6b2:	4604      	mov	r4, r0
     6b4:	429d      	cmp	r5, r3
     6b6:	460e      	mov	r6, r1
     6b8:	d904      	bls.n	6c4 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
     6ba:	00a9      	lsls	r1, r5, #2
     6bc:	68c0      	ldr	r0, [r0, #12]
     6be:	f003 ffb3 	bl	4628 <realloc>
     6c2:	60e0      	str	r0, [r4, #12]
     6c4:	2100      	movs	r1, #0
     6c6:	6065      	str	r5, [r4, #4]
     6c8:	1d32      	adds	r2, r6, #4
     6ca:	6860      	ldr	r0, [r4, #4]
     6cc:	1b93      	subs	r3, r2, r6
     6ce:	4281      	cmp	r1, r0
     6d0:	f102 0204 	add.w	r2, r2, #4
     6d4:	d213      	bcs.n	6fe <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x54>
     6d6:	f812 3c02 	ldrb.w	r3, [r2, #-2]
     6da:	f812 0c03 	ldrb.w	r0, [r2, #-3]
     6de:	041b      	lsls	r3, r3, #16
     6e0:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
     6e4:	f812 0c04 	ldrb.w	r0, [r2, #-4]
     6e8:	4303      	orrs	r3, r0
     6ea:	f812 0c01 	ldrb.w	r0, [r2, #-1]
     6ee:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
     6f2:	68e0      	ldr	r0, [r4, #12]
     6f4:	60a3      	str	r3, [r4, #8]
     6f6:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
     6fa:	3101      	adds	r1, #1
     6fc:	e7e5      	b.n	6ca <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
     6fe:	18f2      	adds	r2, r6, r3
     700:	7895      	ldrb	r5, [r2, #2]
     702:	7850      	ldrb	r0, [r2, #1]
     704:	5cf1      	ldrb	r1, [r6, r3]
     706:	042d      	lsls	r5, r5, #16
     708:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
     70c:	78d2      	ldrb	r2, [r2, #3]
     70e:	430d      	orrs	r5, r1
     710:	1d1f      	adds	r7, r3, #4
     712:	6923      	ldr	r3, [r4, #16]
     714:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
     718:	429d      	cmp	r5, r3
     71a:	d904      	bls.n	726 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7c>
     71c:	00a9      	lsls	r1, r5, #2
     71e:	69a0      	ldr	r0, [r4, #24]
     720:	f003 ff82 	bl	4628 <realloc>
     724:	61a0      	str	r0, [r4, #24]
     726:	2100      	movs	r1, #0
     728:	6125      	str	r5, [r4, #16]
     72a:	19f3      	adds	r3, r6, r7
     72c:	6922      	ldr	r2, [r4, #16]
     72e:	1b9d      	subs	r5, r3, r6
     730:	4291      	cmp	r1, r2
     732:	f103 0304 	add.w	r3, r3, #4
     736:	d213      	bcs.n	760 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xb6>
     738:	f813 2c02 	ldrb.w	r2, [r3, #-2]
     73c:	f813 0c03 	ldrb.w	r0, [r3, #-3]
     740:	0412      	lsls	r2, r2, #16
     742:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
     746:	f813 0c04 	ldrb.w	r0, [r3, #-4]
     74a:	4302      	orrs	r2, r0
     74c:	f813 0c01 	ldrb.w	r0, [r3, #-1]
     750:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
     754:	69a0      	ldr	r0, [r4, #24]
     756:	6162      	str	r2, [r4, #20]
     758:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
     75c:	3101      	adds	r1, #1
     75e:	e7e5      	b.n	72c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x82>
     760:	1973      	adds	r3, r6, r5
     762:	789f      	ldrb	r7, [r3, #2]
     764:	7859      	ldrb	r1, [r3, #1]
     766:	5d72      	ldrb	r2, [r6, r5]
     768:	043f      	lsls	r7, r7, #16
     76a:	78db      	ldrb	r3, [r3, #3]
     76c:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
     770:	4317      	orrs	r7, r2
     772:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
     776:	69e3      	ldr	r3, [r4, #28]
     778:	3504      	adds	r5, #4
     77a:	429f      	cmp	r7, r3
     77c:	d904      	bls.n	788 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xde>
     77e:	00b9      	lsls	r1, r7, #2
     780:	6a60      	ldr	r0, [r4, #36]	; 0x24
     782:	f003 ff51 	bl	4628 <realloc>
     786:	6260      	str	r0, [r4, #36]	; 0x24
     788:	61e7      	str	r7, [r4, #28]
     78a:	2700      	movs	r7, #0
     78c:	46b8      	mov	r8, r7
     78e:	69e3      	ldr	r3, [r4, #28]
     790:	429f      	cmp	r7, r3
     792:	d21a      	bcs.n	7ca <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x120>
     794:	1971      	adds	r1, r6, r5
     796:	a801      	add	r0, sp, #4
     798:	f7ff ff02 	bl	5a0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     79c:	1d2b      	adds	r3, r5, #4
     79e:	9d01      	ldr	r5, [sp, #4]
     7a0:	18f2      	adds	r2, r6, r3
     7a2:	441d      	add	r5, r3
     7a4:	1b91      	subs	r1, r2, r6
     7a6:	42a9      	cmp	r1, r5
     7a8:	d204      	bcs.n	7b4 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x10a>
     7aa:	f812 1b01 	ldrb.w	r1, [r2], #1
     7ae:	f802 1c02 	strb.w	r1, [r2, #-2]
     7b2:	e7f7      	b.n	7a4 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xfa>
     7b4:	1972      	adds	r2, r6, r5
     7b6:	f802 8c01 	strb.w	r8, [r2, #-1]
     7ba:	3b01      	subs	r3, #1
     7bc:	6a62      	ldr	r2, [r4, #36]	; 0x24
     7be:	4433      	add	r3, r6
     7c0:	6223      	str	r3, [r4, #32]
     7c2:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
     7c6:	3701      	adds	r7, #1
     7c8:	e7e1      	b.n	78e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
     7ca:	4628      	mov	r0, r5
     7cc:	b002      	add	sp, #8
     7ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000007d2 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)>:
     7d2:	b537      	push	{r0, r1, r2, r4, r5, lr}
     7d4:	460d      	mov	r5, r1
     7d6:	4604      	mov	r4, r0
     7d8:	a801      	add	r0, sp, #4
     7da:	f7ff fee1 	bl	5a0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     7de:	9801      	ldr	r0, [sp, #4]
     7e0:	1d2b      	adds	r3, r5, #4
     7e2:	1d01      	adds	r1, r0, #4
     7e4:	1b5a      	subs	r2, r3, r5
     7e6:	4291      	cmp	r1, r2
     7e8:	d904      	bls.n	7f4 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)+0x22>
     7ea:	f813 2b01 	ldrb.w	r2, [r3], #1
     7ee:	f803 2c02 	strb.w	r2, [r3, #-2]
     7f2:	e7f7      	b.n	7e4 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)+0x12>
     7f4:	2300      	movs	r3, #0
     7f6:	182a      	adds	r2, r5, r0
     7f8:	70d3      	strb	r3, [r2, #3]
     7fa:	1ceb      	adds	r3, r5, #3
     7fc:	6063      	str	r3, [r4, #4]
     7fe:	5c6b      	ldrb	r3, [r5, r1]
     800:	300c      	adds	r0, #12
     802:	60a3      	str	r3, [r4, #8]
     804:	7951      	ldrb	r1, [r2, #5]
     806:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
     80a:	60a3      	str	r3, [r4, #8]
     80c:	7991      	ldrb	r1, [r2, #6]
     80e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
     812:	60a3      	str	r3, [r4, #8]
     814:	79d1      	ldrb	r1, [r2, #7]
     816:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
     81a:	60a3      	str	r3, [r4, #8]
     81c:	7a13      	ldrb	r3, [r2, #8]
     81e:	60e3      	str	r3, [r4, #12]
     820:	7a51      	ldrb	r1, [r2, #9]
     822:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
     826:	60e3      	str	r3, [r4, #12]
     828:	7a91      	ldrb	r1, [r2, #10]
     82a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
     82e:	60e3      	str	r3, [r4, #12]
     830:	7ad2      	ldrb	r2, [r2, #11]
     832:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
     836:	60e3      	str	r3, [r4, #12]
     838:	b003      	add	sp, #12
     83a:	bd30      	pop	{r4, r5, pc}

0000083c <std_msgs::MultiArrayLayout::deserialize(unsigned char*)>:
     83c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
     840:	6843      	ldr	r3, [r0, #4]
     842:	680d      	ldr	r5, [r1, #0]
     844:	4604      	mov	r4, r0
     846:	429d      	cmp	r5, r3
     848:	460f      	mov	r7, r1
     84a:	d904      	bls.n	856 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x1a>
     84c:	0129      	lsls	r1, r5, #4
     84e:	6980      	ldr	r0, [r0, #24]
     850:	f003 feea 	bl	4628 <realloc>
     854:	61a0      	str	r0, [r4, #24]
     856:	6065      	str	r5, [r4, #4]
     858:	2600      	movs	r6, #0
     85a:	2504      	movs	r5, #4
     85c:	f104 0808 	add.w	r8, r4, #8
     860:	f104 0918 	add.w	r9, r4, #24
     864:	6863      	ldr	r3, [r4, #4]
     866:	1979      	adds	r1, r7, r5
     868:	429e      	cmp	r6, r3
     86a:	d20f      	bcs.n	88c <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x50>
     86c:	4640      	mov	r0, r8
     86e:	f7ff ffb0 	bl	7d2 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)>
     872:	4642      	mov	r2, r8
     874:	69a3      	ldr	r3, [r4, #24]
     876:	4405      	add	r5, r0
     878:	eb03 1306 	add.w	r3, r3, r6, lsl #4
     87c:	f852 1b04 	ldr.w	r1, [r2], #4
     880:	454a      	cmp	r2, r9
     882:	f843 1b04 	str.w	r1, [r3], #4
     886:	d1f9      	bne.n	87c <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x40>
     888:	3601      	adds	r6, #1
     88a:	e7eb      	b.n	864 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x28>
     88c:	5d7b      	ldrb	r3, [r7, r5]
     88e:	1d28      	adds	r0, r5, #4
     890:	61e3      	str	r3, [r4, #28]
     892:	784a      	ldrb	r2, [r1, #1]
     894:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
     898:	61e3      	str	r3, [r4, #28]
     89a:	788a      	ldrb	r2, [r1, #2]
     89c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
     8a0:	61e3      	str	r3, [r4, #28]
     8a2:	78ca      	ldrb	r2, [r1, #3]
     8a4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
     8a8:	61e3      	str	r3, [r4, #28]
     8aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000008ae <std_msgs::Int32MultiArray::deserialize(unsigned char*)>:
     8ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     8b0:	4605      	mov	r5, r0
     8b2:	3004      	adds	r0, #4
     8b4:	460e      	mov	r6, r1
     8b6:	f7ff ffc1 	bl	83c <std_msgs::MultiArrayLayout::deserialize(unsigned char*)>
     8ba:	1833      	adds	r3, r6, r0
     8bc:	789c      	ldrb	r4, [r3, #2]
     8be:	7859      	ldrb	r1, [r3, #1]
     8c0:	5c32      	ldrb	r2, [r6, r0]
     8c2:	0424      	lsls	r4, r4, #16
     8c4:	78db      	ldrb	r3, [r3, #3]
     8c6:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
     8ca:	4314      	orrs	r4, r2
     8cc:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
     8d0:	6a6b      	ldr	r3, [r5, #36]	; 0x24
     8d2:	1d07      	adds	r7, r0, #4
     8d4:	429c      	cmp	r4, r3
     8d6:	d904      	bls.n	8e2 <std_msgs::Int32MultiArray::deserialize(unsigned char*)+0x34>
     8d8:	00a1      	lsls	r1, r4, #2
     8da:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
     8dc:	f003 fea4 	bl	4628 <realloc>
     8e0:	62e8      	str	r0, [r5, #44]	; 0x2c
     8e2:	2100      	movs	r1, #0
     8e4:	626c      	str	r4, [r5, #36]	; 0x24
     8e6:	19f3      	adds	r3, r6, r7
     8e8:	6a6a      	ldr	r2, [r5, #36]	; 0x24
     8ea:	1b98      	subs	r0, r3, r6
     8ec:	4291      	cmp	r1, r2
     8ee:	f103 0304 	add.w	r3, r3, #4
     8f2:	d213      	bcs.n	91c <std_msgs::Int32MultiArray::deserialize(unsigned char*)+0x6e>
     8f4:	f813 2c02 	ldrb.w	r2, [r3, #-2]
     8f8:	f813 0c03 	ldrb.w	r0, [r3, #-3]
     8fc:	0412      	lsls	r2, r2, #16
     8fe:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
     902:	f813 0c04 	ldrb.w	r0, [r3, #-4]
     906:	4302      	orrs	r2, r0
     908:	f813 0c01 	ldrb.w	r0, [r3, #-1]
     90c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
     910:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
     912:	62aa      	str	r2, [r5, #40]	; 0x28
     914:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
     918:	3101      	adds	r1, #1
     91a:	e7e5      	b.n	8e8 <std_msgs::Int32MultiArray::deserialize(unsigned char*)+0x3a>
     91c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

00000920 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
     920:	b530      	push	{r4, r5, lr}
     922:	4b0a      	ldr	r3, [pc, #40]	; (94c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
     924:	b085      	sub	sp, #20
     926:	4604      	mov	r4, r0
     928:	9301      	str	r3, [sp, #4]
     92a:	2300      	movs	r3, #0
     92c:	9302      	str	r3, [sp, #8]
     92e:	9303      	str	r3, [sp, #12]
     930:	f854 3b60 	ldr.w	r3, [r4], #96
     934:	aa01      	add	r2, sp, #4
     936:	681b      	ldr	r3, [r3, #0]
     938:	210a      	movs	r1, #10
     93a:	4605      	mov	r5, r0
     93c:	4798      	blx	r3
     93e:	4620      	mov	r0, r4
     940:	f002 ff1a 	bl	3778 <mbed::Timer::read_ms()>
     944:	6728      	str	r0, [r5, #112]	; 0x70
     946:	b005      	add	sp, #20
     948:	bd30      	pop	{r4, r5, pc}
     94a:	bf00      	nop
     94c:	00004a90 	.word	0x00004a90

00000950 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
     950:	2200      	movs	r2, #0
     952:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     956:	4605      	mov	r5, r0
     958:	f44f 7700 	mov.w	r7, #512	; 0x200
     95c:	4b29      	ldr	r3, [pc, #164]	; (a04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
     95e:	b086      	sub	sp, #24
     960:	9300      	str	r3, [sp, #0]
     962:	4b29      	ldr	r3, [pc, #164]	; (a08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
     964:	f8ad 2004 	strh.w	r2, [sp, #4]
     968:	9302      	str	r3, [sp, #8]
     96a:	9303      	str	r3, [sp, #12]
     96c:	9304      	str	r3, [sp, #16]
     96e:	9205      	str	r2, [sp, #20]
     970:	f500 6490 	add.w	r4, r0, #1152	; 0x480
     974:	f200 46e4 	addw	r6, r0, #1252	; 0x4e4
     978:	6823      	ldr	r3, [r4, #0]
     97a:	b1bb      	cbz	r3, 9ac <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
     97c:	689a      	ldr	r2, [r3, #8]
     97e:	6858      	ldr	r0, [r3, #4]
     980:	f8ad 2004 	strh.w	r2, [sp, #4]
     984:	681a      	ldr	r2, [r3, #0]
     986:	6803      	ldr	r3, [r0, #0]
     988:	9202      	str	r2, [sp, #8]
     98a:	689b      	ldr	r3, [r3, #8]
     98c:	4798      	blx	r3
     98e:	6823      	ldr	r3, [r4, #0]
     990:	9003      	str	r0, [sp, #12]
     992:	6858      	ldr	r0, [r3, #4]
     994:	6803      	ldr	r3, [r0, #0]
     996:	68db      	ldr	r3, [r3, #12]
     998:	4798      	blx	r3
     99a:	6821      	ldr	r1, [r4, #0]
     99c:	682b      	ldr	r3, [r5, #0]
     99e:	9004      	str	r0, [sp, #16]
     9a0:	9705      	str	r7, [sp, #20]
     9a2:	681b      	ldr	r3, [r3, #0]
     9a4:	466a      	mov	r2, sp
     9a6:	6909      	ldr	r1, [r1, #16]
     9a8:	4628      	mov	r0, r5
     9aa:	4798      	blx	r3
     9ac:	3404      	adds	r4, #4
     9ae:	42b4      	cmp	r4, r6
     9b0:	d1e2      	bne.n	978 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
     9b2:	f44f 7700 	mov.w	r7, #512	; 0x200
     9b6:	f505 66a9 	add.w	r6, r5, #1352	; 0x548
     9ba:	6820      	ldr	r0, [r4, #0]
     9bc:	b1c8      	cbz	r0, 9f2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
     9be:	6843      	ldr	r3, [r0, #4]
     9c0:	f8ad 3004 	strh.w	r3, [sp, #4]
     9c4:	6883      	ldr	r3, [r0, #8]
     9c6:	9302      	str	r3, [sp, #8]
     9c8:	6803      	ldr	r3, [r0, #0]
     9ca:	689b      	ldr	r3, [r3, #8]
     9cc:	4798      	blx	r3
     9ce:	9003      	str	r0, [sp, #12]
     9d0:	6820      	ldr	r0, [r4, #0]
     9d2:	6803      	ldr	r3, [r0, #0]
     9d4:	68db      	ldr	r3, [r3, #12]
     9d6:	4798      	blx	r3
     9d8:	682b      	ldr	r3, [r5, #0]
     9da:	9004      	str	r0, [sp, #16]
     9dc:	6820      	ldr	r0, [r4, #0]
     9de:	f8d3 8000 	ldr.w	r8, [r3]
     9e2:	6803      	ldr	r3, [r0, #0]
     9e4:	9705      	str	r7, [sp, #20]
     9e6:	685b      	ldr	r3, [r3, #4]
     9e8:	4798      	blx	r3
     9ea:	466a      	mov	r2, sp
     9ec:	4601      	mov	r1, r0
     9ee:	4628      	mov	r0, r5
     9f0:	47c0      	blx	r8
     9f2:	3404      	adds	r4, #4
     9f4:	42a6      	cmp	r6, r4
     9f6:	d1e0      	bne.n	9ba <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
     9f8:	2301      	movs	r3, #1
     9fa:	f885 355c 	strb.w	r3, [r5, #1372]	; 0x55c
     9fe:	b006      	add	sp, #24
     a00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
     a04:	00004aa8 	.word	0x00004aa8
     a08:	00004db2 	.word	0x00004db2

00000a0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
     a0c:	b5f0      	push	{r4, r5, r6, r7, lr}
     a0e:	4b1f      	ldr	r3, [pc, #124]	; (a8c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x80>)
     a10:	b085      	sub	sp, #20
     a12:	9301      	str	r3, [sp, #4]
     a14:	2300      	movs	r3, #0
     a16:	460e      	mov	r6, r1
     a18:	4604      	mov	r4, r0
     a1a:	f100 0560 	add.w	r5, r0, #96	; 0x60
     a1e:	4628      	mov	r0, r5
     a20:	9302      	str	r3, [sp, #8]
     a22:	9303      	str	r3, [sp, #12]
     a24:	f002 fea8 	bl	3778 <mbed::Timer::read_ms()>
     a28:	4631      	mov	r1, r6
     a2a:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
     a2e:	6f22      	ldr	r2, [r4, #112]	; 0x70
     a30:	1a87      	subs	r7, r0, r2
     a32:	a801      	add	r0, sp, #4
     a34:	f7ff fb94 	bl	160 <std_msgs::Time::deserialize(unsigned char*)>
     a38:	fbb7 f2f6 	udiv	r2, r7, r6
     a3c:	9b02      	ldr	r3, [sp, #8]
     a3e:	4628      	mov	r0, r5
     a40:	4413      	add	r3, r2
     a42:	fb06 7212 	mls	r2, r6, r2, r7
     a46:	9302      	str	r3, [sp, #8]
     a48:	4f11      	ldr	r7, [pc, #68]	; (a90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x84>)
     a4a:	9b03      	ldr	r3, [sp, #12]
     a4c:	fb07 3202 	mla	r2, r7, r2, r3
     a50:	9203      	str	r2, [sp, #12]
     a52:	f002 fe91 	bl	3778 <mbed::Timer::read_ms()>
     a56:	fbb0 f3f6 	udiv	r3, r0, r6
     a5a:	9a02      	ldr	r2, [sp, #8]
     a5c:	9903      	ldr	r1, [sp, #12]
     a5e:	3a01      	subs	r2, #1
     a60:	1ad2      	subs	r2, r2, r3
     a62:	6762      	str	r2, [r4, #116]	; 0x74
     a64:	4a0b      	ldr	r2, [pc, #44]	; (a94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
     a66:	fb06 0313 	mls	r3, r6, r3, r0
     a6a:	440a      	add	r2, r1
     a6c:	4621      	mov	r1, r4
     a6e:	fb07 2313 	mls	r3, r7, r3, r2
     a72:	f104 0074 	add.w	r0, r4, #116	; 0x74
     a76:	f841 3f78 	str.w	r3, [r1, #120]!
     a7a:	f000 fb75 	bl	1168 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
     a7e:	4628      	mov	r0, r5
     a80:	f002 fe7a 	bl	3778 <mbed::Timer::read_ms()>
     a84:	f8c4 0564 	str.w	r0, [r4, #1380]	; 0x564
     a88:	b005      	add	sp, #20
     a8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     a8c:	00004a90 	.word	0x00004a90
     a90:	000f4240 	.word	0x000f4240
     a94:	3b9aca00 	.word	0x3b9aca00

00000a98 <_GLOBAL__sub_I_nh>:
     a98:	b573      	push	{r0, r1, r4, r5, r6, lr}
     a9a:	4d77      	ldr	r5, [pc, #476]	; (c78 <Stack_Size+0x78>)
     a9c:	4b77      	ldr	r3, [pc, #476]	; (c7c <Stack_Size+0x7c>)
     a9e:	4628      	mov	r0, r5
     aa0:	2400      	movs	r4, #0
     aa2:	f840 3b04 	str.w	r3, [r0], #4
     aa6:	2304      	movs	r3, #4
     aa8:	4a75      	ldr	r2, [pc, #468]	; (c80 <Stack_Size+0x80>)
     aaa:	4976      	ldr	r1, [pc, #472]	; (c84 <Stack_Size+0x84>)
     aac:	f105 0660 	add.w	r6, r5, #96	; 0x60
     ab0:	e88d 0018 	stmia.w	sp, {r3, r4}
     ab4:	f44f 7380 	mov.w	r3, #256	; 0x100
     ab8:	f000 fc22 	bl	1300 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
     abc:	4630      	mov	r0, r6
     abe:	f002 fe71 	bl	37a4 <mbed::Timer::Timer()>
     ac2:	f44f 4361 	mov.w	r3, #57600	; 0xe100
     ac6:	4630      	mov	r0, r6
     ac8:	f44f 7600 	mov.w	r6, #512	; 0x200
     acc:	65eb      	str	r3, [r5, #92]	; 0x5c
     ace:	f002 fe27 	bl	3720 <mbed::Timer::start()>
     ad2:	4632      	mov	r2, r6
     ad4:	4621      	mov	r1, r4
     ad6:	f105 0080 	add.w	r0, r5, #128	; 0x80
     ada:	672c      	str	r4, [r5, #112]	; 0x70
     adc:	676c      	str	r4, [r5, #116]	; 0x74
     ade:	67ac      	str	r4, [r5, #120]	; 0x78
     ae0:	67ec      	str	r4, [r5, #124]	; 0x7c
     ae2:	f003 fb30 	bl	4146 <memset>
     ae6:	4632      	mov	r2, r6
     ae8:	2664      	movs	r6, #100	; 0x64
     aea:	4621      	mov	r1, r4
     aec:	f505 7020 	add.w	r0, r5, #640	; 0x280
     af0:	f003 fb29 	bl	4146 <memset>
     af4:	4632      	mov	r2, r6
     af6:	4621      	mov	r1, r4
     af8:	f505 6090 	add.w	r0, r5, #1152	; 0x480
     afc:	f003 fb23 	bl	4146 <memset>
     b00:	4632      	mov	r2, r6
     b02:	4621      	mov	r1, r4
     b04:	f205 40e4 	addw	r0, r5, #1252	; 0x4e4
     b08:	f003 fb1d 	bl	4146 <memset>
     b0c:	4b5e      	ldr	r3, [pc, #376]	; (c88 <Stack_Size+0x88>)
     b0e:	4e5f      	ldr	r6, [pc, #380]	; (c8c <Stack_Size+0x8c>)
     b10:	f8c5 3570 	str.w	r3, [r5, #1392]	; 0x570
     b14:	2300      	movs	r3, #0
     b16:	f8c5 4574 	str.w	r4, [r5, #1396]	; 0x574
     b1a:	f8c5 4578 	str.w	r4, [r5, #1400]	; 0x578
     b1e:	f8c5 457c 	str.w	r4, [r5, #1404]	; 0x57c
     b22:	f8c5 4580 	str.w	r4, [r5, #1408]	; 0x580
     b26:	f8c5 3584 	str.w	r3, [r5, #1412]	; 0x584
     b2a:	f8c5 4588 	str.w	r4, [r5, #1416]	; 0x588
     b2e:	f8c5 458c 	str.w	r4, [r5, #1420]	; 0x58c
     b32:	f8c5 4590 	str.w	r4, [r5, #1424]	; 0x590
     b36:	f8c5 4594 	str.w	r4, [r5, #1428]	; 0x594
     b3a:	4632      	mov	r2, r6
     b3c:	4954      	ldr	r1, [pc, #336]	; (c90 <Stack_Size+0x90>)
     b3e:	4628      	mov	r0, r5
     b40:	f8c5 4548 	str.w	r4, [r5, #1352]	; 0x548
     b44:	f8c5 454c 	str.w	r4, [r5, #1356]	; 0x54c
     b48:	f8c5 4550 	str.w	r4, [r5, #1360]	; 0x550
     b4c:	f8c5 4554 	str.w	r4, [r5, #1364]	; 0x554
     b50:	f8c5 4558 	str.w	r4, [r5, #1368]	; 0x558
     b54:	f885 455c 	strb.w	r4, [r5, #1372]	; 0x55c
     b58:	f8c5 4560 	str.w	r4, [r5, #1376]	; 0x560
     b5c:	f8c5 4564 	str.w	r4, [r5, #1380]	; 0x564
     b60:	f8c5 4568 	str.w	r4, [r5, #1384]	; 0x568
     b64:	f885 456c 	strb.w	r4, [r5, #1388]	; 0x56c
     b68:	f003 f812 	bl	3b90 <__aeabi_atexit>
     b6c:	4b49      	ldr	r3, [pc, #292]	; (c94 <Stack_Size+0x94>)
     b6e:	4a4a      	ldr	r2, [pc, #296]	; (c98 <Stack_Size+0x98>)
     b70:	4d4a      	ldr	r5, [pc, #296]	; (c9c <Stack_Size+0x9c>)
     b72:	601a      	str	r2, [r3, #0]
     b74:	4a4a      	ldr	r2, [pc, #296]	; (ca0 <Stack_Size+0xa0>)
     b76:	494b      	ldr	r1, [pc, #300]	; (ca4 <Stack_Size+0xa4>)
     b78:	605a      	str	r2, [r3, #4]
     b7a:	4a4b      	ldr	r2, [pc, #300]	; (ca8 <Stack_Size+0xa8>)
     b7c:	609c      	str	r4, [r3, #8]
     b7e:	60da      	str	r2, [r3, #12]
     b80:	4a4a      	ldr	r2, [pc, #296]	; (cac <Stack_Size+0xac>)
     b82:	615c      	str	r4, [r3, #20]
     b84:	611a      	str	r2, [r3, #16]
     b86:	4a4a      	ldr	r2, [pc, #296]	; (cb0 <Stack_Size+0xb0>)
     b88:	619c      	str	r4, [r3, #24]
     b8a:	e882 000a 	stmia.w	r2, {r1, r3}
     b8e:	61dc      	str	r4, [r3, #28]
     b90:	621c      	str	r4, [r3, #32]
     b92:	6114      	str	r4, [r2, #16]
     b94:	4947      	ldr	r1, [pc, #284]	; (cb4 <Stack_Size+0xb4>)
     b96:	2202      	movs	r2, #2
     b98:	4628      	mov	r0, r5
     b9a:	625c      	str	r4, [r3, #36]	; 0x24
     b9c:	629c      	str	r4, [r3, #40]	; 0x28
     b9e:	62dc      	str	r4, [r3, #44]	; 0x2c
     ba0:	f7ff fbc8 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     ba4:	2202      	movs	r2, #2
     ba6:	4944      	ldr	r1, [pc, #272]	; (cb8 <Stack_Size+0xb8>)
     ba8:	f105 0018 	add.w	r0, r5, #24
     bac:	f7ff fbc2 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bb0:	2202      	movs	r2, #2
     bb2:	4942      	ldr	r1, [pc, #264]	; (cbc <Stack_Size+0xbc>)
     bb4:	f105 0030 	add.w	r0, r5, #48	; 0x30
     bb8:	f7ff fbbc 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bbc:	2202      	movs	r2, #2
     bbe:	4940      	ldr	r1, [pc, #256]	; (cc0 <Stack_Size+0xc0>)
     bc0:	f105 0048 	add.w	r0, r5, #72	; 0x48
     bc4:	f7ff fbb6 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bc8:	2202      	movs	r2, #2
     bca:	493e      	ldr	r1, [pc, #248]	; (cc4 <Stack_Size+0xc4>)
     bcc:	f105 0060 	add.w	r0, r5, #96	; 0x60
     bd0:	f7ff fbb0 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bd4:	2202      	movs	r2, #2
     bd6:	493c      	ldr	r1, [pc, #240]	; (cc8 <Stack_Size+0xc8>)
     bd8:	f105 0078 	add.w	r0, r5, #120	; 0x78
     bdc:	f7ff fbaa 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     be0:	2202      	movs	r2, #2
     be2:	493a      	ldr	r1, [pc, #232]	; (ccc <Stack_Size+0xcc>)
     be4:	f105 0090 	add.w	r0, r5, #144	; 0x90
     be8:	f7ff fba4 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bec:	2202      	movs	r2, #2
     bee:	4938      	ldr	r1, [pc, #224]	; (cd0 <Stack_Size+0xd0>)
     bf0:	f105 00a8 	add.w	r0, r5, #168	; 0xa8
     bf4:	f7ff fb9e 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bf8:	2202      	movs	r2, #2
     bfa:	4936      	ldr	r1, [pc, #216]	; (cd4 <Stack_Size+0xd4>)
     bfc:	f105 00c0 	add.w	r0, r5, #192	; 0xc0
     c00:	f7ff fb98 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c04:	2202      	movs	r2, #2
     c06:	4934      	ldr	r1, [pc, #208]	; (cd8 <Stack_Size+0xd8>)
     c08:	f105 00d8 	add.w	r0, r5, #216	; 0xd8
     c0c:	f7ff fb92 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c10:	2202      	movs	r2, #2
     c12:	4932      	ldr	r1, [pc, #200]	; (cdc <Stack_Size+0xdc>)
     c14:	f105 00f0 	add.w	r0, r5, #240	; 0xf0
     c18:	f7ff fb8c 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c1c:	2202      	movs	r2, #2
     c1e:	4930      	ldr	r1, [pc, #192]	; (ce0 <Stack_Size+0xe0>)
     c20:	f505 7084 	add.w	r0, r5, #264	; 0x108
     c24:	f7ff fb86 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c28:	2202      	movs	r2, #2
     c2a:	492e      	ldr	r1, [pc, #184]	; (ce4 <Stack_Size+0xe4>)
     c2c:	f505 7090 	add.w	r0, r5, #288	; 0x120
     c30:	f7ff fb80 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c34:	2202      	movs	r2, #2
     c36:	492c      	ldr	r1, [pc, #176]	; (ce8 <Stack_Size+0xe8>)
     c38:	f505 709c 	add.w	r0, r5, #312	; 0x138
     c3c:	f7ff fb7a 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c40:	2202      	movs	r2, #2
     c42:	492a      	ldr	r1, [pc, #168]	; (cec <Stack_Size+0xec>)
     c44:	f505 70a8 	add.w	r0, r5, #336	; 0x150
     c48:	f7ff fb74 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c4c:	f505 70b4 	add.w	r0, r5, #360	; 0x168
     c50:	4d27      	ldr	r5, [pc, #156]	; (cf0 <Stack_Size+0xf0>)
     c52:	2202      	movs	r2, #2
     c54:	4927      	ldr	r1, [pc, #156]	; (cf4 <Stack_Size+0xf4>)
     c56:	f7ff fb6d 	bl	334 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c5a:	4628      	mov	r0, r5
     c5c:	f002 fe46 	bl	38ec <mbed::TimerEvent::TimerEvent()>
     c60:	4632      	mov	r2, r6
     c62:	4628      	mov	r0, r5
     c64:	4b24      	ldr	r3, [pc, #144]	; (cf8 <Stack_Size+0xf8>)
     c66:	4925      	ldr	r1, [pc, #148]	; (cfc <Stack_Size+0xfc>)
     c68:	602b      	str	r3, [r5, #0]
     c6a:	626c      	str	r4, [r5, #36]	; 0x24
     c6c:	b002      	add	sp, #8
     c6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     c72:	f002 bf8d 	b.w	3b90 <__aeabi_atexit>
     c76:	bf00      	nop
     c78:	10000384 	.word	0x10000384
     c7c:	00004b38 	.word	0x00004b38
     c80:	2009c003 	.word	0x2009c003
     c84:	2009c002 	.word	0x2009c002
     c88:	00004ad8 	.word	0x00004ad8
     c8c:	100000c8 	.word	0x100000c8
     c90:	00001119 	.word	0x00001119
     c94:	10000354 	.word	0x10000354
     c98:	00004b20 	.word	0x00004b20
     c9c:	100001a4 	.word	0x100001a4
     ca0:	00004b08 	.word	0x00004b08
     ca4:	00004b50 	.word	0x00004b50
     ca8:	00004af0 	.word	0x00004af0
     cac:	00004db2 	.word	0x00004db2
     cb0:	1000091c 	.word	0x1000091c
     cb4:	2009c007 	.word	0x2009c007
     cb8:	2009c006 	.word	0x2009c006
     cbc:	2009c012 	.word	0x2009c012
     cc0:	2009c011 	.word	0x2009c011
     cc4:	2009c017 	.word	0x2009c017
     cc8:	2009c018 	.word	0x2009c018
     ccc:	2009c019 	.word	0x2009c019
     cd0:	2009c01a 	.word	0x2009c01a
     cd4:	2009c03e 	.word	0x2009c03e
     cd8:	2009c03f 	.word	0x2009c03f
     cdc:	2009c040 	.word	0x2009c040
     ce0:	2009c041 	.word	0x2009c041
     ce4:	2009c042 	.word	0x2009c042
     ce8:	2009c043 	.word	0x2009c043
     cec:	2009c044 	.word	0x2009c044
     cf0:	1000017c 	.word	0x1000017c
     cf4:	2009c045 	.word	0x2009c045
     cf8:	00004fe4 	.word	0x00004fe4
     cfc:	00000365 	.word	0x00000365

00000d00 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
     d00:	b5f0      	push	{r4, r5, r6, r7, lr}
     d02:	2963      	cmp	r1, #99	; 0x63
     d04:	b085      	sub	sp, #20
     d06:	4604      	mov	r4, r0
     d08:	460e      	mov	r6, r1
     d0a:	dd03      	ble.n	d14 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
     d0c:	f890 555c 	ldrb.w	r5, [r0, #1372]	; 0x55c
     d10:	2d00      	cmp	r5, #0
     d12:	d04d      	beq.n	db0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
     d14:	6813      	ldr	r3, [r2, #0]
     d16:	f204 2187 	addw	r1, r4, #647	; 0x287
     d1a:	681b      	ldr	r3, [r3, #0]
     d1c:	4610      	mov	r0, r2
     d1e:	4798      	blx	r3
     d20:	23ff      	movs	r3, #255	; 0xff
     d22:	f884 3280 	strb.w	r3, [r4, #640]	; 0x280
     d26:	23fe      	movs	r3, #254	; 0xfe
     d28:	f3c0 2207 	ubfx	r2, r0, #8, #8
     d2c:	f884 3281 	strb.w	r3, [r4, #641]	; 0x281
     d30:	b2c3      	uxtb	r3, r0
     d32:	f884 3282 	strb.w	r3, [r4, #642]	; 0x282
     d36:	4413      	add	r3, r2
     d38:	43db      	mvns	r3, r3
     d3a:	f884 2283 	strb.w	r2, [r4, #643]	; 0x283
     d3e:	f884 3284 	strb.w	r3, [r4, #644]	; 0x284
     d42:	2205      	movs	r2, #5
     d44:	2300      	movs	r3, #0
     d46:	f884 6285 	strb.w	r6, [r4, #645]	; 0x285
     d4a:	f346 2607 	sbfx	r6, r6, #8, #8
     d4e:	f884 6286 	strb.w	r6, [r4, #646]	; 0x286
     d52:	f204 2185 	addw	r1, r4, #645	; 0x285
     d56:	1d86      	adds	r6, r0, #6
     d58:	42b2      	cmp	r2, r6
     d5a:	dc04      	bgt.n	d66 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
     d5c:	f811 5b01 	ldrb.w	r5, [r1], #1
     d60:	3201      	adds	r2, #1
     d62:	442b      	add	r3, r5
     d64:	e7f8      	b.n	d58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
     d66:	43db      	mvns	r3, r3
     d68:	f100 0508 	add.w	r5, r0, #8
     d6c:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
     d70:	4420      	add	r0, r4
     d72:	f880 3287 	strb.w	r3, [r0, #647]	; 0x287
     d76:	dc0c      	bgt.n	d92 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
     d78:	f504 7720 	add.w	r7, r4, #640	; 0x280
     d7c:	463e      	mov	r6, r7
     d7e:	3404      	adds	r4, #4
     d80:	1bf3      	subs	r3, r6, r7
     d82:	429d      	cmp	r5, r3
     d84:	dd14      	ble.n	db0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
     d86:	f816 1b01 	ldrb.w	r1, [r6], #1
     d8a:	4620      	mov	r0, r4
     d8c:	f000 fb25 	bl	13da <BufferedSerial::putc(int)>
     d90:	e7f6      	b.n	d80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
     d92:	4b09      	ldr	r3, [pc, #36]	; (db8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
     d94:	aa01      	add	r2, sp, #4
     d96:	9301      	str	r3, [sp, #4]
     d98:	2303      	movs	r3, #3
     d9a:	f88d 3008 	strb.w	r3, [sp, #8]
     d9e:	4b07      	ldr	r3, [pc, #28]	; (dbc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
     da0:	2107      	movs	r1, #7
     da2:	9303      	str	r3, [sp, #12]
     da4:	6823      	ldr	r3, [r4, #0]
     da6:	4620      	mov	r0, r4
     da8:	681b      	ldr	r3, [r3, #0]
     daa:	4798      	blx	r3
     dac:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
     db0:	4628      	mov	r0, r5
     db2:	b005      	add	sp, #20
     db4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     db6:	bf00      	nop
     db8:	00004ac0 	.word	0x00004ac0
     dbc:	00004c15 	.word	0x00004c15

00000dc0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
     dc0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
     dc4:	4604      	mov	r4, r0
     dc6:	f100 0960 	add.w	r9, r0, #96	; 0x60
     dca:	4648      	mov	r0, r9
     dcc:	f002 fcd4 	bl	3778 <mbed::Timer::read_ms()>
     dd0:	f642 22f8 	movw	r2, #11000	; 0x2af8
     dd4:	f8d4 3564 	ldr.w	r3, [r4, #1380]	; 0x564
     dd8:	4605      	mov	r5, r0
     dda:	1ac3      	subs	r3, r0, r3
     ddc:	4293      	cmp	r3, r2
     dde:	bf84      	itt	hi
     de0:	2300      	movhi	r3, #0
     de2:	f884 355c 	strbhi.w	r3, [r4, #1372]	; 0x55c
     de6:	f8d4 3548 	ldr.w	r3, [r4, #1352]	; 0x548
     dea:	b133      	cbz	r3, dfa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
     dec:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
     df0:	4283      	cmp	r3, r0
     df2:	bf3c      	itt	cc
     df4:	2300      	movcc	r3, #0
     df6:	f8c4 3548 	strcc.w	r3, [r4, #1352]	; 0x548
     dfa:	2700      	movs	r7, #0
     dfc:	46ba      	mov	r10, r7
     dfe:	463e      	mov	r6, r7
     e00:	f104 0b04 	add.w	r11, r4, #4
     e04:	f104 0880 	add.w	r8, r4, #128	; 0x80
     e08:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
     e0a:	b9e3      	cbnz	r3, e46 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
     e0c:	4658      	mov	r0, r11
     e0e:	f000 f9b9 	bl	1184 <BufferedSerial::readable()>
     e12:	bb10      	cbnz	r0, e5a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x9a>
     e14:	f894 355c 	ldrb.w	r3, [r4, #1372]	; 0x55c
     e18:	b15b      	cbz	r3, e32 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
     e1a:	f640 12c4 	movw	r2, #2500	; 0x9c4
     e1e:	f8d4 3560 	ldr.w	r3, [r4, #1376]	; 0x560
     e22:	1aeb      	subs	r3, r5, r3
     e24:	4293      	cmp	r3, r2
     e26:	d904      	bls.n	e32 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
     e28:	4620      	mov	r0, r4
     e2a:	f7ff fd79 	bl	920 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
     e2e:	f8c4 5560 	str.w	r5, [r4, #1376]	; 0x560
     e32:	2f00      	cmp	r7, #0
     e34:	f040 80d7 	bne.w	fe6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x226>
     e38:	f1ba 0f00 	cmp.w	r10, #0
     e3c:	bf14      	ite	ne
     e3e:	f06f 0002 	mvnne.w	r0, #2
     e42:	2000      	moveq	r0, #0
     e44:	e0a6      	b.n	f94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d4>
     e46:	4648      	mov	r0, r9
     e48:	f002 fc96 	bl	3778 <mbed::Timer::read_ms()>
     e4c:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
     e4e:	1b40      	subs	r0, r0, r5
     e50:	4298      	cmp	r0, r3
     e52:	d9db      	bls.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4c>
     e54:	f06f 0001 	mvn.w	r0, #1
     e58:	e09c      	b.n	f94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d4>
     e5a:	4658      	mov	r0, r11
     e5c:	f000 f99a 	bl	1194 <BufferedSerial::getc()>
     e60:	2800      	cmp	r0, #0
     e62:	dbd7      	blt.n	e14 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x54>
     e64:	f8d4 3558 	ldr.w	r3, [r4, #1368]	; 0x558
     e68:	f8d4 2548 	ldr.w	r2, [r4, #1352]	; 0x548
     e6c:	4403      	add	r3, r0
     e6e:	2a07      	cmp	r2, #7
     e70:	f8c4 3558 	str.w	r3, [r4, #1368]	; 0x558
     e74:	d110      	bne.n	e98 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd8>
     e76:	f8d4 3554 	ldr.w	r3, [r4, #1364]	; 0x554
     e7a:	1c5a      	adds	r2, r3, #1
     e7c:	4423      	add	r3, r4
     e7e:	f8c4 2554 	str.w	r2, [r4, #1364]	; 0x554
     e82:	f883 0080 	strb.w	r0, [r3, #128]	; 0x80
     e86:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
     e8a:	3b01      	subs	r3, #1
     e8c:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
     e90:	2b00      	cmp	r3, #0
     e92:	d1b9      	bne.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     e94:	2308      	movs	r3, #8
     e96:	e01c      	b.n	ed2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x112>
     e98:	b9b2      	cbnz	r2, ec8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x108>
     e9a:	28ff      	cmp	r0, #255	; 0xff
     e9c:	d107      	bne.n	eae <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xee>
     e9e:	2301      	movs	r3, #1
     ea0:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
     ea4:	f105 0314 	add.w	r3, r5, #20
     ea8:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
     eac:	e7ac      	b.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     eae:	4648      	mov	r0, r9
     eb0:	9201      	str	r2, [sp, #4]
     eb2:	f002 fc61 	bl	3778 <mbed::Timer::read_ms()>
     eb6:	f241 3388 	movw	r3, #5000	; 0x1388
     eba:	1b40      	subs	r0, r0, r5
     ebc:	4298      	cmp	r0, r3
     ebe:	9a01      	ldr	r2, [sp, #4]
     ec0:	d9a2      	bls.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     ec2:	f884 255c 	strb.w	r2, [r4, #1372]	; 0x55c
     ec6:	e7c5      	b.n	e54 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x94>
     ec8:	2a01      	cmp	r2, #1
     eca:	d10f      	bne.n	eec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x12c>
     ecc:	28fe      	cmp	r0, #254	; 0xfe
     ece:	d103      	bne.n	ed8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x118>
     ed0:	2302      	movs	r3, #2
     ed2:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
     ed6:	e797      	b.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     ed8:	f894 355c 	ldrb.w	r3, [r4, #1372]	; 0x55c
     edc:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
     ee0:	2b00      	cmp	r3, #0
     ee2:	d191      	bne.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     ee4:	4620      	mov	r0, r4
     ee6:	f7ff fd1b 	bl	920 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
     eea:	e78d      	b.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     eec:	2a02      	cmp	r2, #2
     eee:	d109      	bne.n	f04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x144>
     ef0:	2303      	movs	r3, #3
     ef2:	f8c4 054c 	str.w	r0, [r4, #1356]	; 0x54c
     ef6:	f8c4 6554 	str.w	r6, [r4, #1364]	; 0x554
     efa:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
     efe:	f8c4 0558 	str.w	r0, [r4, #1368]	; 0x558
     f02:	e781      	b.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     f04:	2a03      	cmp	r2, #3
     f06:	d107      	bne.n	f18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x158>
     f08:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
     f0c:	eb03 2000 	add.w	r0, r3, r0, lsl #8
     f10:	f8c4 054c 	str.w	r0, [r4, #1356]	; 0x54c
     f14:	2304      	movs	r3, #4
     f16:	e7dc      	b.n	ed2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x112>
     f18:	2a04      	cmp	r2, #4
     f1a:	d10b      	bne.n	f34 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x174>
     f1c:	425a      	negs	r2, r3
     f1e:	b2d2      	uxtb	r2, r2
     f20:	b2db      	uxtb	r3, r3
     f22:	bf58      	it	pl
     f24:	4253      	negpl	r3, r2
     f26:	2bff      	cmp	r3, #255	; 0xff
     f28:	d101      	bne.n	f2e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16e>
     f2a:	2305      	movs	r3, #5
     f2c:	e7d1      	b.n	ed2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x112>
     f2e:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
     f32:	e769      	b.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     f34:	2a05      	cmp	r2, #5
     f36:	d103      	bne.n	f40 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
     f38:	f8c4 0550 	str.w	r0, [r4, #1360]	; 0x550
     f3c:	2306      	movs	r3, #6
     f3e:	e7dc      	b.n	efa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13a>
     f40:	2a06      	cmp	r2, #6
     f42:	d10b      	bne.n	f5c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19c>
     f44:	f8d4 3550 	ldr.w	r3, [r4, #1360]	; 0x550
     f48:	eb03 2000 	add.w	r0, r3, r0, lsl #8
     f4c:	2307      	movs	r3, #7
     f4e:	f8c4 0550 	str.w	r0, [r4, #1360]	; 0x550
     f52:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
     f56:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
     f5a:	e799      	b.n	e90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd0>
     f5c:	2a08      	cmp	r2, #8
     f5e:	f47f af53 	bne.w	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     f62:	425a      	negs	r2, r3
     f64:	b2d2      	uxtb	r2, r2
     f66:	b2db      	uxtb	r3, r3
     f68:	bf58      	it	pl
     f6a:	4253      	negpl	r3, r2
     f6c:	2bff      	cmp	r3, #255	; 0xff
     f6e:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
     f72:	f47f af49 	bne.w	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     f76:	f8d4 3550 	ldr.w	r3, [r4, #1360]	; 0x550
     f7a:	b973      	cbnz	r3, f9a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1da>
     f7c:	4620      	mov	r0, r4
     f7e:	f7ff fccf 	bl	920 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
     f82:	4620      	mov	r0, r4
     f84:	f7ff fce4 	bl	950 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
     f88:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     f8c:	f8c4 5560 	str.w	r5, [r4, #1376]	; 0x560
     f90:	f8c4 5564 	str.w	r5, [r4, #1380]	; 0x564
     f94:	b003      	add	sp, #12
     f96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
     f9a:	2b0a      	cmp	r3, #10
     f9c:	d105      	bne.n	faa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
     f9e:	4641      	mov	r1, r8
     fa0:	4620      	mov	r0, r4
     fa2:	f7ff fd33 	bl	a0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
     fa6:	2701      	movs	r7, #1
     fa8:	e72e      	b.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     faa:	2b06      	cmp	r3, #6
     fac:	d108      	bne.n	fc0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
     fae:	4641      	mov	r1, r8
     fb0:	f504 60ae 	add.w	r0, r4, #1392	; 0x570
     fb4:	f7ff fb79 	bl	6aa <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
     fb8:	2301      	movs	r3, #1
     fba:	f884 356c 	strb.w	r3, [r4, #1388]	; 0x56c
     fbe:	e723      	b.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     fc0:	2b0b      	cmp	r3, #11
     fc2:	d104      	bne.n	fce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20e>
     fc4:	f884 655c 	strb.w	r6, [r4, #1372]	; 0x55c
     fc8:	f04f 0a01 	mov.w	r10, #1
     fcc:	e71c      	b.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     fce:	eb04 0383 	add.w	r3, r4, r3, lsl #2
     fd2:	f8d3 0354 	ldr.w	r0, [r3, #852]	; 0x354
     fd6:	2800      	cmp	r0, #0
     fd8:	f43f af16 	beq.w	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     fdc:	6803      	ldr	r3, [r0, #0]
     fde:	4641      	mov	r1, r8
     fe0:	681b      	ldr	r3, [r3, #0]
     fe2:	4798      	blx	r3
     fe4:	e710      	b.n	e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     fe6:	f06f 0003 	mvn.w	r0, #3
     fea:	e7d3      	b.n	f94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d4>

00000fec <main>:
     fec:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
     ff0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     ff4:	4c3d      	ldr	r4, [pc, #244]	; (10ec <main+0x100>)
     ff6:	b088      	sub	sp, #32
     ff8:	65e1      	str	r1, [r4, #92]	; 0x5c
     ffa:	1d20      	adds	r0, r4, #4
     ffc:	f002 fbea 	bl	37d4 <mbed::SerialBase::baud(int)>
    1000:	2300      	movs	r3, #0
    1002:	f204 427c 	addw	r2, r4, #1148	; 0x47c
    1006:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
    100a:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    100e:	f8c4 3554 	str.w	r3, [r4, #1364]	; 0x554
    1012:	f8c4 3550 	str.w	r3, [r4, #1360]	; 0x550
    1016:	f852 1f04 	ldr.w	r1, [r2, #4]!
    101a:	2900      	cmp	r1, #0
    101c:	d162      	bne.n	10e4 <main+0xf8>
    101e:	4a34      	ldr	r2, [pc, #208]	; (10f0 <main+0x104>)
    1020:	f503 7190 	add.w	r1, r3, #288	; 0x120
    1024:	337d      	adds	r3, #125	; 0x7d
    1026:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
    102a:	6093      	str	r3, [r2, #8]
    102c:	60d4      	str	r4, [r2, #12]
    102e:	2020      	movs	r0, #32
    1030:	f003 f846 	bl	40c0 <malloc>
    1034:	2200      	movs	r2, #0
    1036:	4c2f      	ldr	r4, [pc, #188]	; (10f4 <main+0x108>)
    1038:	2308      	movs	r3, #8
    103a:	46a0      	mov	r8, r4
    103c:	4616      	mov	r6, r2
    103e:	62e0      	str	r0, [r4, #44]	; 0x2c
    1040:	6263      	str	r3, [r4, #36]	; 0x24
    1042:	482d      	ldr	r0, [pc, #180]	; (10f8 <main+0x10c>)
    1044:	4b2d      	ldr	r3, [pc, #180]	; (10fc <main+0x110>)
    1046:	4d2e      	ldr	r5, [pc, #184]	; (1100 <main+0x114>)
    1048:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
    104a:	685c      	ldr	r4, [r3, #4]
    104c:	680f      	ldr	r7, [r1, #0]
    104e:	69d9      	ldr	r1, [r3, #28]
    1050:	3330      	adds	r3, #48	; 0x30
    1052:	420f      	tst	r7, r1
    1054:	bf14      	ite	ne
    1056:	2102      	movne	r1, #2
    1058:	2100      	moveq	r1, #0
    105a:	f853 7c1c 	ldr.w	r7, [r3, #-28]
    105e:	7041      	strb	r1, [r0, #1]
    1060:	683f      	ldr	r7, [r7, #0]
    1062:	f845 6022 	str.w	r6, [r5, r2, lsl #2]
    1066:	4227      	tst	r7, r4
    1068:	bf18      	it	ne
    106a:	f041 0101 	orrne.w	r1, r1, #1
    106e:	3201      	adds	r2, #1
    1070:	2a08      	cmp	r2, #8
    1072:	f800 1f01 	strb.w	r1, [r0, #1]!
    1076:	d1e7      	bne.n	1048 <main+0x5c>
    1078:	4b22      	ldr	r3, [pc, #136]	; (1104 <main+0x118>)
    107a:	4669      	mov	r1, sp
    107c:	9300      	str	r3, [sp, #0]
    107e:	4b22      	ldr	r3, [pc, #136]	; (1108 <main+0x11c>)
    1080:	a804      	add	r0, sp, #16
    1082:	9303      	str	r3, [sp, #12]
    1084:	f7ff f989 	bl	39a <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
    1088:	4820      	ldr	r0, [pc, #128]	; (110c <main+0x120>)
    108a:	f7ff f962 	bl	352 <mbed::Callback<void ()>::~Callback()>
    108e:	a904      	add	r1, sp, #16
    1090:	481e      	ldr	r0, [pc, #120]	; (110c <main+0x120>)
    1092:	f7ff f982 	bl	39a <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
    1096:	2114      	movs	r1, #20
    1098:	481d      	ldr	r0, [pc, #116]	; (1110 <main+0x124>)
    109a:	f002 fadb 	bl	3654 <mbed::Ticker::setup(unsigned long)>
    109e:	a804      	add	r0, sp, #16
    10a0:	f7ff f957 	bl	352 <mbed::Callback<void ()>::~Callback()>
    10a4:	4668      	mov	r0, sp
    10a6:	f7ff f954 	bl	352 <mbed::Callback<void ()>::~Callback()>
    10aa:	4d11      	ldr	r5, [pc, #68]	; (10f0 <main+0x104>)
    10ac:	4f11      	ldr	r7, [pc, #68]	; (10f4 <main+0x108>)
    10ae:	4e0f      	ldr	r6, [pc, #60]	; (10ec <main+0x100>)
    10b0:	2000      	movs	r0, #0
    10b2:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
    10b6:	4917      	ldr	r1, [pc, #92]	; (1114 <main+0x128>)
    10b8:	1f1a      	subs	r2, r3, #4
    10ba:	331c      	adds	r3, #28
    10bc:	684c      	ldr	r4, [r1, #4]
    10be:	f842 4f04 	str.w	r4, [r2, #4]!
    10c2:	4293      	cmp	r3, r2
    10c4:	f841 0f04 	str.w	r0, [r1, #4]!
    10c8:	d1f8      	bne.n	10bc <main+0xd0>
    10ca:	68e8      	ldr	r0, [r5, #12]
    10cc:	463a      	mov	r2, r7
    10ce:	6803      	ldr	r3, [r0, #0]
    10d0:	68a9      	ldr	r1, [r5, #8]
    10d2:	681b      	ldr	r3, [r3, #0]
    10d4:	4798      	blx	r3
    10d6:	4630      	mov	r0, r6
    10d8:	f7ff fe72 	bl	dc0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
    10dc:	200a      	movs	r0, #10
    10de:	f002 fc4b 	bl	3978 <wait_ms>
    10e2:	e7e5      	b.n	10b0 <main+0xc4>
    10e4:	3301      	adds	r3, #1
    10e6:	2b19      	cmp	r3, #25
    10e8:	d195      	bne.n	1016 <main+0x2a>
    10ea:	e7a0      	b.n	102e <main+0x42>
    10ec:	10000384 	.word	0x10000384
    10f0:	1000091c 	.word	0x1000091c
    10f4:	10000354 	.word	0x10000354
    10f8:	1000032b 	.word	0x1000032b
    10fc:	100001a4 	.word	0x100001a4
    1100:	10000334 	.word	0x10000334
    1104:	000002c5 	.word	0x000002c5
    1108:	00004b44 	.word	0x00004b44
    110c:	10000194 	.word	0x10000194
    1110:	1000017c 	.word	0x1000017c
    1114:	10000330 	.word	0x10000330

00001118 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
    1118:	b510      	push	{r4, lr}
    111a:	4604      	mov	r4, r0
    111c:	4b03      	ldr	r3, [pc, #12]	; (112c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
    111e:	f840 3b04 	str.w	r3, [r0], #4
    1122:	f000 f879 	bl	1218 <BufferedSerial::~BufferedSerial()>
    1126:	4620      	mov	r0, r4
    1128:	bd10      	pop	{r4, pc}
    112a:	bf00      	nop
    112c:	00004b38 	.word	0x00004b38

00001130 <_start>:
    1130:	4807      	ldr	r0, [pc, #28]	; (1150 <_start+0x20>)
    1132:	4a08      	ldr	r2, [pc, #32]	; (1154 <_start+0x24>)
    1134:	b508      	push	{r3, lr}
    1136:	1a12      	subs	r2, r2, r0
    1138:	2100      	movs	r1, #0
    113a:	f003 f804 	bl	4146 <memset>
    113e:	f002 fce1 	bl	3b04 <software_init_hook>
    1142:	f002 ff99 	bl	4078 <__libc_init_array>
    1146:	f002 fce4 	bl	3b12 <__wrap_main>
    114a:	f002 fd23 	bl	3b94 <__wrap_exit>
    114e:	bf00      	nop
    1150:	10000160 	.word	0x10000160
    1154:	10002624 	.word	0x10002624

00001158 <abort>:
    1158:	b508      	push	{r3, lr}
    115a:	2001      	movs	r0, #1
    115c:	f002 fd1a 	bl	3b94 <__wrap_exit>

00001160 <__cxa_pure_virtual>:
    1160:	b508      	push	{r3, lr}
    1162:	f7ff fff9 	bl	1158 <abort>
	...

00001168 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
    1168:	b530      	push	{r4, r5, lr}
    116a:	680d      	ldr	r5, [r1, #0]
    116c:	4c04      	ldr	r4, [pc, #16]	; (1180 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
    116e:	6802      	ldr	r2, [r0, #0]
    1170:	fbb5 f3f4 	udiv	r3, r5, r4
    1174:	441a      	add	r2, r3
    1176:	fb04 5313 	mls	r3, r4, r3, r5
    117a:	6002      	str	r2, [r0, #0]
    117c:	600b      	str	r3, [r1, #0]
    117e:	bd30      	pop	{r4, r5, pc}
    1180:	3b9aca00 	.word	0x3b9aca00

00001184 <BufferedSerial::readable()>:
    1184:	6b42      	ldr	r2, [r0, #52]	; 0x34
    1186:	6b80      	ldr	r0, [r0, #56]	; 0x38
    1188:	1a10      	subs	r0, r2, r0
    118a:	bf18      	it	ne
    118c:	2001      	movne	r0, #1
    118e:	4770      	bx	lr

00001190 <BufferedSerial::writeable()>:
    1190:	2001      	movs	r0, #1
    1192:	4770      	bx	lr

00001194 <BufferedSerial::getc()>:
    1194:	4603      	mov	r3, r0
    1196:	b510      	push	{r4, lr}
    1198:	6b82      	ldr	r2, [r0, #56]	; 0x38
    119a:	6b01      	ldr	r1, [r0, #48]	; 0x30
    119c:	1c50      	adds	r0, r2, #1
    119e:	6398      	str	r0, [r3, #56]	; 0x38
    11a0:	5c88      	ldrb	r0, [r1, r2]
    11a2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    11a4:	6b9c      	ldr	r4, [r3, #56]	; 0x38
    11a6:	3a01      	subs	r2, #1
    11a8:	fbb4 f1f2 	udiv	r1, r4, r2
    11ac:	fb02 4211 	mls	r2, r2, r1, r4
    11b0:	639a      	str	r2, [r3, #56]	; 0x38
    11b2:	bd10      	pop	{r4, pc}

000011b4 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
    11b4:	4603      	mov	r3, r0
    11b6:	b110      	cbz	r0, 11be <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
    11b8:	c907      	ldmia	r1, {r0, r1, r2}
    11ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    11be:	4770      	bx	lr

000011c0 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
    11c0:	4770      	bx	lr

000011c2 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
    11c2:	6842      	ldr	r2, [r0, #4]
    11c4:	6881      	ldr	r1, [r0, #8]
    11c6:	f012 0f01 	tst.w	r2, #1
    11ca:	ea4f 0262 	mov.w	r2, r2, asr #1
    11ce:	6803      	ldr	r3, [r0, #0]
    11d0:	bf1c      	itt	ne
    11d2:	5888      	ldrne	r0, [r1, r2]
    11d4:	58c3      	ldrne	r3, [r0, r3]
    11d6:	1888      	adds	r0, r1, r2
    11d8:	4718      	bx	r3
	...

000011dc <mbed::SerialBase::~SerialBase()>:
    11dc:	b570      	push	{r4, r5, r6, lr}
    11de:	4605      	mov	r5, r0
    11e0:	4b07      	ldr	r3, [pc, #28]	; (1200 <mbed::SerialBase::~SerialBase()+0x24>)
    11e2:	4606      	mov	r6, r0
    11e4:	f845 3b0c 	str.w	r3, [r5], #12
    11e8:	b145      	cbz	r5, 11fc <mbed::SerialBase::~SerialBase()+0x20>
    11ea:	f100 042c 	add.w	r4, r0, #44	; 0x2c
    11ee:	42ac      	cmp	r4, r5
    11f0:	d004      	beq.n	11fc <mbed::SerialBase::~SerialBase()+0x20>
    11f2:	3c10      	subs	r4, #16
    11f4:	4620      	mov	r0, r4
    11f6:	f7ff f8ac 	bl	352 <mbed::Callback<void ()>::~Callback()>
    11fa:	e7f8      	b.n	11ee <mbed::SerialBase::~SerialBase()+0x12>
    11fc:	4630      	mov	r0, r6
    11fe:	bd70      	pop	{r4, r5, r6, pc}
    1200:	00005010 	.word	0x00005010

00001204 <mbed::SerialBase::~SerialBase()>:
    1204:	b510      	push	{r4, lr}
    1206:	4604      	mov	r4, r0
    1208:	f7ff ffe8 	bl	11dc <mbed::SerialBase::~SerialBase()>
    120c:	4620      	mov	r0, r4
    120e:	f002 fcdd 	bl	3bcc <operator delete(void*)>
    1212:	4620      	mov	r0, r4
    1214:	bd10      	pop	{r4, pc}
	...

00001218 <BufferedSerial::~BufferedSerial()>:
    1218:	b530      	push	{r4, r5, lr}
    121a:	2500      	movs	r5, #0
    121c:	4604      	mov	r4, r0
    121e:	4b12      	ldr	r3, [pc, #72]	; (1268 <BufferedSerial::~BufferedSerial()+0x50>)
    1220:	b085      	sub	sp, #20
    1222:	6003      	str	r3, [r0, #0]
    1224:	462a      	mov	r2, r5
    1226:	4669      	mov	r1, sp
    1228:	9503      	str	r5, [sp, #12]
    122a:	f002 fb25 	bl	3878 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
    122e:	4668      	mov	r0, sp
    1230:	f7ff f88f 	bl	352 <mbed::Callback<void ()>::~Callback()>
    1234:	2201      	movs	r2, #1
    1236:	4669      	mov	r1, sp
    1238:	4620      	mov	r0, r4
    123a:	9503      	str	r5, [sp, #12]
    123c:	f002 fb1c 	bl	3878 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
    1240:	4668      	mov	r0, sp
    1242:	f7ff f886 	bl	352 <mbed::Callback<void ()>::~Callback()>
    1246:	f104 0040 	add.w	r0, r4, #64	; 0x40
    124a:	f000 f945 	bl	14d8 <Buffer<char>::~Buffer()>
    124e:	f104 0030 	add.w	r0, r4, #48	; 0x30
    1252:	f000 f941 	bl	14d8 <Buffer<char>::~Buffer()>
    1256:	4b05      	ldr	r3, [pc, #20]	; (126c <BufferedSerial::~BufferedSerial()+0x54>)
    1258:	4620      	mov	r0, r4
    125a:	6023      	str	r3, [r4, #0]
    125c:	f7ff ffbe 	bl	11dc <mbed::SerialBase::~SerialBase()>
    1260:	4620      	mov	r0, r4
    1262:	b005      	add	sp, #20
    1264:	bd30      	pop	{r4, r5, pc}
    1266:	bf00      	nop
    1268:	00004dbc 	.word	0x00004dbc
    126c:	00004ff8 	.word	0x00004ff8

00001270 <BufferedSerial::~BufferedSerial()>:
    1270:	b510      	push	{r4, lr}
    1272:	4604      	mov	r4, r0
    1274:	f7ff ffd0 	bl	1218 <BufferedSerial::~BufferedSerial()>
    1278:	4620      	mov	r0, r4
    127a:	f002 fca7 	bl	3bcc <operator delete(void*)>
    127e:	4620      	mov	r0, r4
    1280:	bd10      	pop	{r4, pc}

00001282 <BufferedSerial::txIrq()>:
    1282:	b530      	push	{r4, r5, lr}
    1284:	4604      	mov	r4, r0
    1286:	b085      	sub	sp, #20
    1288:	1d05      	adds	r5, r0, #4
    128a:	4628      	mov	r0, r5
    128c:	f001 ff62 	bl	3154 <serial_writable>
    1290:	b1f0      	cbz	r0, 12d0 <BufferedSerial::txIrq()+0x4e>
    1292:	6c62      	ldr	r2, [r4, #68]	; 0x44
    1294:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    1296:	429a      	cmp	r2, r3
    1298:	d010      	beq.n	12bc <BufferedSerial::txIrq()+0x3a>
    129a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    129c:	6c22      	ldr	r2, [r4, #64]	; 0x40
    129e:	1c59      	adds	r1, r3, #1
    12a0:	64a1      	str	r1, [r4, #72]	; 0x48
    12a2:	5cd1      	ldrb	r1, [r2, r3]
    12a4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    12a6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    12a8:	3b01      	subs	r3, #1
    12aa:	fbb0 f2f3 	udiv	r2, r0, r3
    12ae:	fb03 0312 	mls	r3, r3, r2, r0
    12b2:	4628      	mov	r0, r5
    12b4:	64a3      	str	r3, [r4, #72]	; 0x48
    12b6:	f001 ff73 	bl	31a0 <serial_putc>
    12ba:	e7e6      	b.n	128a <BufferedSerial::txIrq()+0x8>
    12bc:	2300      	movs	r3, #0
    12be:	4620      	mov	r0, r4
    12c0:	2201      	movs	r2, #1
    12c2:	4669      	mov	r1, sp
    12c4:	9303      	str	r3, [sp, #12]
    12c6:	f002 fad7 	bl	3878 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
    12ca:	4668      	mov	r0, sp
    12cc:	f7ff f841 	bl	352 <mbed::Callback<void ()>::~Callback()>
    12d0:	b005      	add	sp, #20
    12d2:	bd30      	pop	{r4, r5, pc}

000012d4 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
    12d4:	b510      	push	{r4, lr}
    12d6:	b086      	sub	sp, #24
    12d8:	e88d 000c 	stmia.w	sp, {r2, r3}
    12dc:	9b01      	ldr	r3, [sp, #4]
    12de:	9202      	str	r2, [sp, #8]
    12e0:	9303      	str	r3, [sp, #12]
    12e2:	4b06      	ldr	r3, [pc, #24]	; (12fc <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
    12e4:	9104      	str	r1, [sp, #16]
    12e6:	f89d 2020 	ldrb.w	r2, [sp, #32]
    12ea:	a902      	add	r1, sp, #8
    12ec:	9305      	str	r3, [sp, #20]
    12ee:	f002 fac3 	bl	3878 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
    12f2:	a802      	add	r0, sp, #8
    12f4:	f7ff f82d 	bl	352 <mbed::Callback<void ()>::~Callback()>
    12f8:	b006      	add	sp, #24
    12fa:	bd10      	pop	{r4, pc}
    12fc:	00004d30 	.word	0x00004d30

00001300 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
    1300:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    1302:	4604      	mov	r4, r0
    1304:	461d      	mov	r5, r3
    1306:	f44f 5316 	mov.w	r3, #9600	; 0x2580
    130a:	9e08      	ldr	r6, [sp, #32]
    130c:	f002 f9ec 	bl	36e8 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
    1310:	4620      	mov	r0, r4
    1312:	4b0e      	ldr	r3, [pc, #56]	; (134c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x4c>)
    1314:	4629      	mov	r1, r5
    1316:	f840 3b30 	str.w	r3, [r0], #48
    131a:	f000 f8ec 	bl	14f6 <Buffer<char>::Buffer(unsigned long)>
    131e:	fb06 f105 	mul.w	r1, r6, r5
    1322:	f104 0040 	add.w	r0, r4, #64	; 0x40
    1326:	f000 f8e6 	bl	14f6 <Buffer<char>::Buffer(unsigned long)>
    132a:	4b09      	ldr	r3, [pc, #36]	; (1350 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
    132c:	4620      	mov	r0, r4
    132e:	9302      	str	r3, [sp, #8]
    1330:	2300      	movs	r3, #0
    1332:	9303      	str	r3, [sp, #12]
    1334:	9300      	str	r3, [sp, #0]
    1336:	ab04      	add	r3, sp, #16
    1338:	e913 000c 	ldmdb	r3, {r2, r3}
    133c:	4621      	mov	r1, r4
    133e:	f7ff ffc9 	bl	12d4 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
    1342:	4620      	mov	r0, r4
    1344:	6525      	str	r5, [r4, #80]	; 0x50
    1346:	6566      	str	r6, [r4, #84]	; 0x54
    1348:	b004      	add	sp, #16
    134a:	bd70      	pop	{r4, r5, r6, pc}
    134c:	00004dbc 	.word	0x00004dbc
    1350:	000013bb 	.word	0x000013bb

00001354 <BufferedSerial::prime()>:
    1354:	b570      	push	{r4, r5, r6, lr}
    1356:	4604      	mov	r4, r0
    1358:	b086      	sub	sp, #24
    135a:	3004      	adds	r0, #4
    135c:	f001 fefa 	bl	3154 <serial_writable>
    1360:	b1c0      	cbz	r0, 1394 <BufferedSerial::prime()+0x40>
    1362:	2600      	movs	r6, #0
    1364:	ad02      	add	r5, sp, #8
    1366:	2201      	movs	r2, #1
    1368:	4629      	mov	r1, r5
    136a:	4620      	mov	r0, r4
    136c:	9605      	str	r6, [sp, #20]
    136e:	f002 fa83 	bl	3878 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
    1372:	4628      	mov	r0, r5
    1374:	f7fe ffed 	bl	352 <mbed::Callback<void ()>::~Callback()>
    1378:	4620      	mov	r0, r4
    137a:	f7ff ff82 	bl	1282 <BufferedSerial::txIrq()>
    137e:	4b06      	ldr	r3, [pc, #24]	; (1398 <BufferedSerial::prime()+0x44>)
    1380:	9603      	str	r6, [sp, #12]
    1382:	9302      	str	r3, [sp, #8]
    1384:	2301      	movs	r3, #1
    1386:	9300      	str	r3, [sp, #0]
    1388:	e895 000c 	ldmia.w	r5, {r2, r3}
    138c:	4621      	mov	r1, r4
    138e:	4620      	mov	r0, r4
    1390:	f7ff ffa0 	bl	12d4 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
    1394:	b006      	add	sp, #24
    1396:	bd70      	pop	{r4, r5, r6, pc}
    1398:	00001283 	.word	0x00001283

0000139c <Buffer<char>::put(char)>:
    139c:	6843      	ldr	r3, [r0, #4]
    139e:	6802      	ldr	r2, [r0, #0]
    13a0:	b510      	push	{r4, lr}
    13a2:	1c5c      	adds	r4, r3, #1
    13a4:	6044      	str	r4, [r0, #4]
    13a6:	54d1      	strb	r1, [r2, r3]
    13a8:	68c3      	ldr	r3, [r0, #12]
    13aa:	6841      	ldr	r1, [r0, #4]
    13ac:	3b01      	subs	r3, #1
    13ae:	fbb1 f2f3 	udiv	r2, r1, r3
    13b2:	fb03 1312 	mls	r3, r3, r2, r1
    13b6:	6043      	str	r3, [r0, #4]
    13b8:	bd10      	pop	{r4, pc}

000013ba <BufferedSerial::rxIrq()>:
    13ba:	b538      	push	{r3, r4, r5, lr}
    13bc:	1d05      	adds	r5, r0, #4
    13be:	4604      	mov	r4, r0
    13c0:	4628      	mov	r0, r5
    13c2:	f001 fec1 	bl	3148 <serial_readable>
    13c6:	b138      	cbz	r0, 13d8 <BufferedSerial::rxIrq()+0x1e>
    13c8:	4628      	mov	r0, r5
    13ca:	f001 fea3 	bl	3114 <serial_getc>
    13ce:	b2c1      	uxtb	r1, r0
    13d0:	f104 0030 	add.w	r0, r4, #48	; 0x30
    13d4:	f7ff ffe2 	bl	139c <Buffer<char>::put(char)>
    13d8:	bd38      	pop	{r3, r4, r5, pc}

000013da <BufferedSerial::putc(int)>:
    13da:	b538      	push	{r3, r4, r5, lr}
    13dc:	4605      	mov	r5, r0
    13de:	460c      	mov	r4, r1
    13e0:	3040      	adds	r0, #64	; 0x40
    13e2:	b2c9      	uxtb	r1, r1
    13e4:	f7ff ffda 	bl	139c <Buffer<char>::put(char)>
    13e8:	4628      	mov	r0, r5
    13ea:	f7ff ffb3 	bl	1354 <BufferedSerial::prime()>
    13ee:	4620      	mov	r0, r4
    13f0:	bd38      	pop	{r3, r4, r5, pc}

000013f2 <BufferedSerial::puts(char const*)>:
    13f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    13f6:	4607      	mov	r7, r0
    13f8:	460c      	mov	r4, r1
    13fa:	b1b1      	cbz	r1, 142a <BufferedSerial::puts(char const*)+0x38>
    13fc:	460d      	mov	r5, r1
    13fe:	f100 0840 	add.w	r8, r0, #64	; 0x40
    1402:	462e      	mov	r6, r5
    1404:	f816 1b01 	ldrb.w	r1, [r6], #1
    1408:	b121      	cbz	r1, 1414 <BufferedSerial::puts(char const*)+0x22>
    140a:	4640      	mov	r0, r8
    140c:	f7ff ffc6 	bl	139c <Buffer<char>::put(char)>
    1410:	4635      	mov	r5, r6
    1412:	e7f6      	b.n	1402 <BufferedSerial::puts(char const*)+0x10>
    1414:	210a      	movs	r1, #10
    1416:	4640      	mov	r0, r8
    1418:	f7ff ffc0 	bl	139c <Buffer<char>::put(char)>
    141c:	1b2c      	subs	r4, r5, r4
    141e:	4638      	mov	r0, r7
    1420:	f7ff ff98 	bl	1354 <BufferedSerial::prime()>
    1424:	1c60      	adds	r0, r4, #1
    1426:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    142a:	4608      	mov	r0, r1
    142c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00001430 <BufferedSerial::write(void const*, unsigned int)>:
    1430:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1434:	4607      	mov	r7, r0
    1436:	460d      	mov	r5, r1
    1438:	b191      	cbz	r1, 1460 <BufferedSerial::write(void const*, unsigned int)+0x30>
    143a:	b1a2      	cbz	r2, 1466 <BufferedSerial::write(void const*, unsigned int)+0x36>
    143c:	460e      	mov	r6, r1
    143e:	188c      	adds	r4, r1, r2
    1440:	f100 0840 	add.w	r8, r0, #64	; 0x40
    1444:	42b4      	cmp	r4, r6
    1446:	d005      	beq.n	1454 <BufferedSerial::write(void const*, unsigned int)+0x24>
    1448:	f816 1b01 	ldrb.w	r1, [r6], #1
    144c:	4640      	mov	r0, r8
    144e:	f7ff ffa5 	bl	139c <Buffer<char>::put(char)>
    1452:	e7f7      	b.n	1444 <BufferedSerial::write(void const*, unsigned int)+0x14>
    1454:	4638      	mov	r0, r7
    1456:	f7ff ff7d 	bl	1354 <BufferedSerial::prime()>
    145a:	1b60      	subs	r0, r4, r5
    145c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1460:	4608      	mov	r0, r1
    1462:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1466:	4610      	mov	r0, r2
    1468:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000146c <BufferedSerial::printf(char const*, ...)>:
    146c:	b40e      	push	{r1, r2, r3}
    146e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1472:	b085      	sub	sp, #20
    1474:	6d02      	ldr	r2, [r0, #80]	; 0x50
    1476:	af02      	add	r7, sp, #8
    1478:	1dd3      	adds	r3, r2, #7
    147a:	f023 0307 	bic.w	r3, r3, #7
    147e:	ebad 0d03 	sub.w	sp, sp, r3
    1482:	f107 0424 	add.w	r4, r7, #36	; 0x24
    1486:	f854 8b04 	ldr.w	r8, [r4], #4
    148a:	ae02      	add	r6, sp, #8
    148c:	4605      	mov	r5, r0
    148e:	2100      	movs	r1, #0
    1490:	4630      	mov	r0, r6
    1492:	f002 fe58 	bl	4146 <memset>
    1496:	4622      	mov	r2, r4
    1498:	4641      	mov	r1, r8
    149a:	4630      	mov	r0, r6
    149c:	607c      	str	r4, [r7, #4]
    149e:	f003 f93f 	bl	4720 <vsiprintf>
    14a2:	6d2b      	ldr	r3, [r5, #80]	; 0x50
    14a4:	4602      	mov	r2, r0
    14a6:	4283      	cmp	r3, r0
    14a8:	d20c      	bcs.n	14c4 <BufferedSerial::printf(char const*, ...)+0x58>
    14aa:	9000      	str	r0, [sp, #0]
    14ac:	225d      	movs	r2, #93	; 0x5d
    14ae:	4808      	ldr	r0, [pc, #32]	; (14d0 <BufferedSerial::printf(char const*, ...)+0x64>)
    14b0:	4908      	ldr	r1, [pc, #32]	; (14d4 <BufferedSerial::printf(char const*, ...)+0x68>)
    14b2:	f000 f9cd 	bl	1850 <error>
    14b6:	2000      	movs	r0, #0
    14b8:	370c      	adds	r7, #12
    14ba:	46bd      	mov	sp, r7
    14bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    14c0:	b003      	add	sp, #12
    14c2:	4770      	bx	lr
    14c4:	4631      	mov	r1, r6
    14c6:	4628      	mov	r0, r5
    14c8:	f7ff ffb2 	bl	1430 <BufferedSerial::write(void const*, unsigned int)>
    14cc:	e7f4      	b.n	14b8 <BufferedSerial::printf(char const*, ...)+0x4c>
    14ce:	bf00      	nop
    14d0:	00004d79 	.word	0x00004d79
    14d4:	00004d3c 	.word	0x00004d3c

000014d8 <Buffer<char>::~Buffer()>:
    14d8:	b510      	push	{r4, lr}
    14da:	4604      	mov	r4, r0
    14dc:	6800      	ldr	r0, [r0, #0]
    14de:	b108      	cbz	r0, 14e4 <Buffer<char>::~Buffer()+0xc>
    14e0:	f002 fb70 	bl	3bc4 <operator delete[](void*)>
    14e4:	4620      	mov	r0, r4
    14e6:	bd10      	pop	{r4, pc}

000014e8 <Buffer<char>::clear()>:
    14e8:	2100      	movs	r1, #0
    14ea:	68c2      	ldr	r2, [r0, #12]
    14ec:	6041      	str	r1, [r0, #4]
    14ee:	6081      	str	r1, [r0, #8]
    14f0:	6800      	ldr	r0, [r0, #0]
    14f2:	f002 be28 	b.w	4146 <memset>

000014f6 <Buffer<char>::Buffer(unsigned long)>:
    14f6:	b538      	push	{r3, r4, r5, lr}
    14f8:	4604      	mov	r4, r0
    14fa:	4608      	mov	r0, r1
    14fc:	460d      	mov	r5, r1
    14fe:	f002 fb55 	bl	3bac <operator new[](unsigned int)>
    1502:	60e5      	str	r5, [r4, #12]
    1504:	6020      	str	r0, [r4, #0]
    1506:	4620      	mov	r0, r4
    1508:	f7ff ffee 	bl	14e8 <Buffer<char>::clear()>
    150c:	4620      	mov	r0, r4
    150e:	bd38      	pop	{r3, r4, r5, pc}

00001510 <_gpio_init_in>:
    1510:	b570      	push	{r4, r5, r6, lr}
    1512:	460e      	mov	r6, r1
    1514:	4604      	mov	r4, r0
    1516:	4615      	mov	r5, r2
    1518:	f001 fc12 	bl	2d40 <gpio_init>
    151c:	3601      	adds	r6, #1
    151e:	d009      	beq.n	1534 <_gpio_init_in+0x24>
    1520:	4620      	mov	r0, r4
    1522:	2100      	movs	r1, #0
    1524:	f001 fc26 	bl	2d74 <gpio_dir>
    1528:	4629      	mov	r1, r5
    152a:	4620      	mov	r0, r4
    152c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1530:	f001 bc1d 	b.w	2d6e <gpio_mode>
    1534:	bd70      	pop	{r4, r5, r6, pc}

00001536 <_gpio_init_out.part.1>:
    1536:	b538      	push	{r3, r4, r5, lr}
    1538:	4604      	mov	r4, r0
    153a:	460d      	mov	r5, r1
    153c:	6843      	ldr	r3, [r0, #4]
    153e:	b15a      	cbz	r2, 1558 <_gpio_init_out.part.1+0x22>
    1540:	68c2      	ldr	r2, [r0, #12]
    1542:	4620      	mov	r0, r4
    1544:	6013      	str	r3, [r2, #0]
    1546:	2101      	movs	r1, #1
    1548:	f001 fc14 	bl	2d74 <gpio_dir>
    154c:	4629      	mov	r1, r5
    154e:	4620      	mov	r0, r4
    1550:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1554:	f001 bc0b 	b.w	2d6e <gpio_mode>
    1558:	6902      	ldr	r2, [r0, #16]
    155a:	e7f2      	b.n	1542 <_gpio_init_out.part.1+0xc>

0000155c <gpio_init_in>:
    155c:	2203      	movs	r2, #3
    155e:	f7ff bfd7 	b.w	1510 <_gpio_init_in>

00001562 <gpio_init_in_ex>:
    1562:	f7ff bfd5 	b.w	1510 <_gpio_init_in>

00001566 <gpio_init_out_ex>:
    1566:	b570      	push	{r4, r5, r6, lr}
    1568:	460e      	mov	r6, r1
    156a:	4604      	mov	r4, r0
    156c:	4615      	mov	r5, r2
    156e:	f001 fbe7 	bl	2d40 <gpio_init>
    1572:	3601      	adds	r6, #1
    1574:	d006      	beq.n	1584 <gpio_init_out_ex+0x1e>
    1576:	462a      	mov	r2, r5
    1578:	4620      	mov	r0, r4
    157a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    157e:	2102      	movs	r1, #2
    1580:	f7ff bfd9 	b.w	1536 <_gpio_init_out.part.1>
    1584:	bd70      	pop	{r4, r5, r6, pc}

00001586 <gpio_init_out>:
    1586:	2200      	movs	r2, #0
    1588:	f7ff bfed 	b.w	1566 <gpio_init_out_ex>

0000158c <get_us_ticker_data>:
    158c:	4800      	ldr	r0, [pc, #0]	; (1590 <get_us_ticker_data+0x4>)
    158e:	4770      	bx	lr
    1590:	00004de8 	.word	0x00004de8

00001594 <us_ticker_irq_handler>:
    1594:	4801      	ldr	r0, [pc, #4]	; (159c <us_ticker_irq_handler+0x8>)
    1596:	f000 b80c 	b.w	15b2 <ticker_irq_handler>
    159a:	bf00      	nop
    159c:	00004de8 	.word	0x00004de8

000015a0 <ticker_set_handler>:
    15a0:	b538      	push	{r3, r4, r5, lr}
    15a2:	4604      	mov	r4, r0
    15a4:	460d      	mov	r5, r1
    15a6:	6803      	ldr	r3, [r0, #0]
    15a8:	681b      	ldr	r3, [r3, #0]
    15aa:	4798      	blx	r3
    15ac:	6863      	ldr	r3, [r4, #4]
    15ae:	601d      	str	r5, [r3, #0]
    15b0:	bd38      	pop	{r3, r4, r5, pc}

000015b2 <ticker_irq_handler>:
    15b2:	6803      	ldr	r3, [r0, #0]
    15b4:	b570      	push	{r4, r5, r6, lr}
    15b6:	68db      	ldr	r3, [r3, #12]
    15b8:	4604      	mov	r4, r0
    15ba:	4798      	blx	r3
    15bc:	6863      	ldr	r3, [r4, #4]
    15be:	685a      	ldr	r2, [r3, #4]
    15c0:	6823      	ldr	r3, [r4, #0]
    15c2:	b91a      	cbnz	r2, 15cc <ticker_irq_handler+0x1a>
    15c4:	689b      	ldr	r3, [r3, #8]
    15c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    15ca:	4718      	bx	r3
    15cc:	685b      	ldr	r3, [r3, #4]
    15ce:	6815      	ldr	r5, [r2, #0]
    15d0:	4798      	blx	r3
    15d2:	6863      	ldr	r3, [r4, #4]
    15d4:	1a28      	subs	r0, r5, r0
    15d6:	2800      	cmp	r0, #0
    15d8:	685a      	ldr	r2, [r3, #4]
    15da:	dc07      	bgt.n	15ec <ticker_irq_handler+0x3a>
    15dc:	6891      	ldr	r1, [r2, #8]
    15de:	6059      	str	r1, [r3, #4]
    15e0:	681b      	ldr	r3, [r3, #0]
    15e2:	2b00      	cmp	r3, #0
    15e4:	d0ea      	beq.n	15bc <ticker_irq_handler+0xa>
    15e6:	6850      	ldr	r0, [r2, #4]
    15e8:	4798      	blx	r3
    15ea:	e7e7      	b.n	15bc <ticker_irq_handler+0xa>
    15ec:	6823      	ldr	r3, [r4, #0]
    15ee:	6810      	ldr	r0, [r2, #0]
    15f0:	691b      	ldr	r3, [r3, #16]
    15f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    15f6:	4718      	bx	r3

000015f8 <ticker_insert_event>:
    15f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    15fa:	4606      	mov	r6, r0
    15fc:	460c      	mov	r4, r1
    15fe:	461f      	mov	r7, r3
    1600:	4615      	mov	r5, r2
    1602:	f000 f89f 	bl	1744 <core_util_critical_section_enter>
    1606:	2100      	movs	r1, #0
    1608:	6870      	ldr	r0, [r6, #4]
    160a:	e884 00a0 	stmia.w	r4, {r5, r7}
    160e:	6843      	ldr	r3, [r0, #4]
    1610:	b953      	cbnz	r3, 1628 <ticker_insert_event+0x30>
    1612:	60a3      	str	r3, [r4, #8]
    1614:	b979      	cbnz	r1, 1636 <ticker_insert_event+0x3e>
    1616:	6833      	ldr	r3, [r6, #0]
    1618:	6044      	str	r4, [r0, #4]
    161a:	691b      	ldr	r3, [r3, #16]
    161c:	4628      	mov	r0, r5
    161e:	4798      	blx	r3
    1620:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    1624:	f000 b8a4 	b.w	1770 <core_util_critical_section_exit>
    1628:	681a      	ldr	r2, [r3, #0]
    162a:	1aaa      	subs	r2, r5, r2
    162c:	2a00      	cmp	r2, #0
    162e:	dbf0      	blt.n	1612 <ticker_insert_event+0x1a>
    1630:	4619      	mov	r1, r3
    1632:	689b      	ldr	r3, [r3, #8]
    1634:	e7ec      	b.n	1610 <ticker_insert_event+0x18>
    1636:	608c      	str	r4, [r1, #8]
    1638:	e7f2      	b.n	1620 <ticker_insert_event+0x28>

0000163a <ticker_remove_event>:
    163a:	b538      	push	{r3, r4, r5, lr}
    163c:	4605      	mov	r5, r0
    163e:	460c      	mov	r4, r1
    1640:	f000 f880 	bl	1744 <core_util_critical_section_enter>
    1644:	686a      	ldr	r2, [r5, #4]
    1646:	6853      	ldr	r3, [r2, #4]
    1648:	42a3      	cmp	r3, r4
    164a:	d10e      	bne.n	166a <ticker_remove_event+0x30>
    164c:	689b      	ldr	r3, [r3, #8]
    164e:	6053      	str	r3, [r2, #4]
    1650:	682a      	ldr	r2, [r5, #0]
    1652:	b92b      	cbnz	r3, 1660 <ticker_remove_event+0x26>
    1654:	6893      	ldr	r3, [r2, #8]
    1656:	4798      	blx	r3
    1658:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    165c:	f000 b888 	b.w	1770 <core_util_critical_section_exit>
    1660:	6912      	ldr	r2, [r2, #16]
    1662:	6818      	ldr	r0, [r3, #0]
    1664:	4790      	blx	r2
    1666:	e7f7      	b.n	1658 <ticker_remove_event+0x1e>
    1668:	4613      	mov	r3, r2
    166a:	2b00      	cmp	r3, #0
    166c:	d0f4      	beq.n	1658 <ticker_remove_event+0x1e>
    166e:	689a      	ldr	r2, [r3, #8]
    1670:	4294      	cmp	r4, r2
    1672:	d1f9      	bne.n	1668 <ticker_remove_event+0x2e>
    1674:	68a2      	ldr	r2, [r4, #8]
    1676:	609a      	str	r2, [r3, #8]
    1678:	e7ee      	b.n	1658 <ticker_remove_event+0x1e>

0000167a <ticker_read>:
    167a:	6803      	ldr	r3, [r0, #0]
    167c:	685b      	ldr	r3, [r3, #4]
    167e:	4718      	bx	r3

00001680 <pinmap_pinout>:
    1680:	b510      	push	{r4, lr}
    1682:	4604      	mov	r4, r0
    1684:	3001      	adds	r0, #1
    1686:	d10d      	bne.n	16a4 <pinmap_pinout+0x24>
    1688:	bd10      	pop	{r4, pc}
    168a:	429c      	cmp	r4, r3
    168c:	d109      	bne.n	16a2 <pinmap_pinout+0x22>
    168e:	4620      	mov	r0, r4
    1690:	6889      	ldr	r1, [r1, #8]
    1692:	f001 ff19 	bl	34c8 <pin_function>
    1696:	4620      	mov	r0, r4
    1698:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    169c:	2102      	movs	r1, #2
    169e:	f001 bf2c 	b.w	34fa <pin_mode>
    16a2:	310c      	adds	r1, #12
    16a4:	680b      	ldr	r3, [r1, #0]
    16a6:	1c5a      	adds	r2, r3, #1
    16a8:	d1ef      	bne.n	168a <pinmap_pinout+0xa>
    16aa:	4802      	ldr	r0, [pc, #8]	; (16b4 <pinmap_pinout+0x34>)
    16ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    16b0:	f000 b8ce 	b.w	1850 <error>
    16b4:	00004e35 	.word	0x00004e35

000016b8 <pinmap_merge>:
    16b8:	4288      	cmp	r0, r1
    16ba:	b508      	push	{r3, lr}
    16bc:	d008      	beq.n	16d0 <pinmap_merge+0x18>
    16be:	1c43      	adds	r3, r0, #1
    16c0:	d006      	beq.n	16d0 <pinmap_merge+0x18>
    16c2:	3101      	adds	r1, #1
    16c4:	d006      	beq.n	16d4 <pinmap_merge+0x1c>
    16c6:	4804      	ldr	r0, [pc, #16]	; (16d8 <pinmap_merge+0x20>)
    16c8:	f000 f8c2 	bl	1850 <error>
    16cc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    16d0:	4608      	mov	r0, r1
    16d2:	bd08      	pop	{r3, pc}
    16d4:	4601      	mov	r1, r0
    16d6:	e7fb      	b.n	16d0 <pinmap_merge+0x18>
    16d8:	00004e04 	.word	0x00004e04

000016dc <pinmap_find_peripheral>:
    16dc:	680b      	ldr	r3, [r1, #0]
    16de:	1c5a      	adds	r2, r3, #1
    16e0:	d101      	bne.n	16e6 <pinmap_find_peripheral+0xa>
    16e2:	4618      	mov	r0, r3
    16e4:	4770      	bx	lr
    16e6:	4283      	cmp	r3, r0
    16e8:	d101      	bne.n	16ee <pinmap_find_peripheral+0x12>
    16ea:	6848      	ldr	r0, [r1, #4]
    16ec:	4770      	bx	lr
    16ee:	310c      	adds	r1, #12
    16f0:	e7f4      	b.n	16dc <pinmap_find_peripheral>
	...

000016f4 <pinmap_peripheral>:
    16f4:	1c42      	adds	r2, r0, #1
    16f6:	b510      	push	{r4, lr}
    16f8:	4604      	mov	r4, r0
    16fa:	d007      	beq.n	170c <pinmap_peripheral+0x18>
    16fc:	f7ff ffee 	bl	16dc <pinmap_find_peripheral>
    1700:	1c43      	adds	r3, r0, #1
    1702:	4604      	mov	r4, r0
    1704:	d102      	bne.n	170c <pinmap_peripheral+0x18>
    1706:	4802      	ldr	r0, [pc, #8]	; (1710 <pinmap_peripheral+0x1c>)
    1708:	f000 f8a2 	bl	1850 <error>
    170c:	4620      	mov	r0, r4
    170e:	bd10      	pop	{r4, pc}
    1710:	00004e15 	.word	0x00004e15

00001714 <mbed_interface_connected>:
    1714:	f000 b84c 	b.w	17b0 <semihost_connected>

00001718 <mbed_interface_disconnect>:
    1718:	b508      	push	{r3, lr}
    171a:	f000 f849 	bl	17b0 <semihost_connected>
    171e:	b138      	cbz	r0, 1730 <mbed_interface_disconnect+0x18>
    1720:	f000 f84e 	bl	17c0 <semihost_disabledebug>
    1724:	b930      	cbnz	r0, 1734 <mbed_interface_disconnect+0x1c>
    1726:	f000 f843 	bl	17b0 <semihost_connected>
    172a:	2800      	cmp	r0, #0
    172c:	d1fb      	bne.n	1726 <mbed_interface_disconnect+0xe>
    172e:	bd08      	pop	{r3, pc}
    1730:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    1734:	bd08      	pop	{r3, pc}

00001736 <core_util_are_interrupts_enabled>:
    1736:	f3ef 8010 	mrs	r0, PRIMASK
    173a:	43c0      	mvns	r0, r0
    173c:	f000 0001 	and.w	r0, r0, #1
    1740:	4770      	bx	lr
	...

00001744 <core_util_critical_section_enter>:
    1744:	b508      	push	{r3, lr}
    1746:	f7ff fff6 	bl	1736 <core_util_are_interrupts_enabled>
    174a:	b672      	cpsid	i
    174c:	4b06      	ldr	r3, [pc, #24]	; (1768 <core_util_critical_section_enter+0x24>)
    174e:	681a      	ldr	r2, [r3, #0]
    1750:	b922      	cbnz	r2, 175c <core_util_critical_section_enter+0x18>
    1752:	f080 0001 	eor.w	r0, r0, #1
    1756:	4a05      	ldr	r2, [pc, #20]	; (176c <core_util_critical_section_enter+0x28>)
    1758:	b2c0      	uxtb	r0, r0
    175a:	7010      	strb	r0, [r2, #0]
    175c:	681a      	ldr	r2, [r3, #0]
    175e:	681a      	ldr	r2, [r3, #0]
    1760:	3201      	adds	r2, #1
    1762:	601a      	str	r2, [r3, #0]
    1764:	bd08      	pop	{r3, pc}
    1766:	bf00      	nop
    1768:	1000093c 	.word	0x1000093c
    176c:	10000938 	.word	0x10000938

00001770 <core_util_critical_section_exit>:
    1770:	b508      	push	{r3, lr}
    1772:	4b07      	ldr	r3, [pc, #28]	; (1790 <core_util_critical_section_exit+0x20>)
    1774:	681a      	ldr	r2, [r3, #0]
    1776:	b152      	cbz	r2, 178e <core_util_critical_section_exit+0x1e>
    1778:	f7ff ffdd 	bl	1736 <core_util_are_interrupts_enabled>
    177c:	681a      	ldr	r2, [r3, #0]
    177e:	3a01      	subs	r2, #1
    1780:	601a      	str	r2, [r3, #0]
    1782:	681b      	ldr	r3, [r3, #0]
    1784:	b91b      	cbnz	r3, 178e <core_util_critical_section_exit+0x1e>
    1786:	4b03      	ldr	r3, [pc, #12]	; (1794 <core_util_critical_section_exit+0x24>)
    1788:	781b      	ldrb	r3, [r3, #0]
    178a:	b903      	cbnz	r3, 178e <core_util_critical_section_exit+0x1e>
    178c:	b662      	cpsie	i
    178e:	bd08      	pop	{r3, pc}
    1790:	1000093c 	.word	0x1000093c
    1794:	10000938 	.word	0x10000938

00001798 <semihost_exit>:
    1798:	b530      	push	{r4, r5, lr}
    179a:	b085      	sub	sp, #20
    179c:	466d      	mov	r5, sp
    179e:	2418      	movs	r4, #24
    17a0:	4620      	mov	r0, r4
    17a2:	4629      	mov	r1, r5
    17a4:	beab      	bkpt	0x00ab
    17a6:	4604      	mov	r4, r0
    17a8:	4620      	mov	r0, r4
    17aa:	b005      	add	sp, #20
    17ac:	bd30      	pop	{r4, r5, pc}
	...

000017b0 <semihost_connected>:
    17b0:	4b02      	ldr	r3, [pc, #8]	; (17bc <semihost_connected+0xc>)
    17b2:	6818      	ldr	r0, [r3, #0]
    17b4:	f000 0001 	and.w	r0, r0, #1
    17b8:	4770      	bx	lr
    17ba:	bf00      	nop
    17bc:	e000edf0 	.word	0xe000edf0

000017c0 <semihost_disabledebug>:
    17c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
    17c2:	f240 1405 	movw	r4, #261	; 0x105
    17c6:	ad01      	add	r5, sp, #4
    17c8:	4620      	mov	r0, r4
    17ca:	4629      	mov	r1, r5
    17cc:	beab      	bkpt	0x00ab
    17ce:	4604      	mov	r4, r0
    17d0:	4620      	mov	r0, r4
    17d2:	b003      	add	sp, #12
    17d4:	bd30      	pop	{r4, r5, pc}
	...

000017d8 <mbed_die>:
    17d8:	b500      	push	{lr}
    17da:	b099      	sub	sp, #100	; 0x64
    17dc:	f7ff ffb2 	bl	1744 <core_util_critical_section_enter>
    17e0:	4917      	ldr	r1, [pc, #92]	; (1840 <mbed_die+0x68>)
    17e2:	4668      	mov	r0, sp
    17e4:	f7ff fecf 	bl	1586 <gpio_init_out>
    17e8:	4916      	ldr	r1, [pc, #88]	; (1844 <mbed_die+0x6c>)
    17ea:	a806      	add	r0, sp, #24
    17ec:	f7ff fecb 	bl	1586 <gpio_init_out>
    17f0:	4915      	ldr	r1, [pc, #84]	; (1848 <mbed_die+0x70>)
    17f2:	a80c      	add	r0, sp, #48	; 0x30
    17f4:	f7ff fec7 	bl	1586 <gpio_init_out>
    17f8:	4914      	ldr	r1, [pc, #80]	; (184c <mbed_die+0x74>)
    17fa:	a812      	add	r0, sp, #72	; 0x48
    17fc:	f7ff fec3 	bl	1586 <gpio_init_out>
    1800:	9a01      	ldr	r2, [sp, #4]
    1802:	9b03      	ldr	r3, [sp, #12]
    1804:	2096      	movs	r0, #150	; 0x96
    1806:	601a      	str	r2, [r3, #0]
    1808:	9a07      	ldr	r2, [sp, #28]
    180a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    180c:	601a      	str	r2, [r3, #0]
    180e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    1810:	9b10      	ldr	r3, [sp, #64]	; 0x40
    1812:	601a      	str	r2, [r3, #0]
    1814:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    1816:	9b15      	ldr	r3, [sp, #84]	; 0x54
    1818:	601a      	str	r2, [r3, #0]
    181a:	f002 f8ad 	bl	3978 <wait_ms>
    181e:	9a01      	ldr	r2, [sp, #4]
    1820:	9b04      	ldr	r3, [sp, #16]
    1822:	2096      	movs	r0, #150	; 0x96
    1824:	601a      	str	r2, [r3, #0]
    1826:	9a07      	ldr	r2, [sp, #28]
    1828:	9b09      	ldr	r3, [sp, #36]	; 0x24
    182a:	601a      	str	r2, [r3, #0]
    182c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    182e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    1830:	601a      	str	r2, [r3, #0]
    1832:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    1834:	9b16      	ldr	r3, [sp, #88]	; 0x58
    1836:	601a      	str	r2, [r3, #0]
    1838:	f002 f89e 	bl	3978 <wait_ms>
    183c:	e7e0      	b.n	1800 <mbed_die+0x28>
    183e:	bf00      	nop
    1840:	2009c032 	.word	0x2009c032
    1844:	2009c034 	.word	0x2009c034
    1848:	2009c035 	.word	0x2009c035
    184c:	2009c037 	.word	0x2009c037

00001850 <error>:
    1850:	b40f      	push	{r0, r1, r2, r3}
    1852:	2001      	movs	r0, #1
    1854:	b508      	push	{r3, lr}
    1856:	f002 f99d 	bl	3b94 <__wrap_exit>

0000185a <default_idle_hook>:
    185a:	f001 ba9b 	b.w	2d94 <hal_sleep>
	...

00001860 <rtos_idle_loop>:
    1860:	b508      	push	{r3, lr}
    1862:	4c02      	ldr	r4, [pc, #8]	; (186c <rtos_idle_loop+0xc>)
    1864:	6823      	ldr	r3, [r4, #0]
    1866:	4798      	blx	r3
    1868:	e7fc      	b.n	1864 <rtos_idle_loop+0x4>
    186a:	bf00      	nop
    186c:	100000cc 	.word	0x100000cc

00001870 <pre_main>:
    1870:	b508      	push	{r3, lr}
    1872:	480b      	ldr	r0, [pc, #44]	; (18a0 <pre_main+0x30>)
    1874:	f000 fd8c 	bl	2390 <osMutexCreate>
    1878:	4b0a      	ldr	r3, [pc, #40]	; (18a4 <pre_main+0x34>)
    187a:	6018      	str	r0, [r3, #0]
    187c:	480a      	ldr	r0, [pc, #40]	; (18a8 <pre_main+0x38>)
    187e:	f000 fd87 	bl	2390 <osMutexCreate>
    1882:	4b0a      	ldr	r3, [pc, #40]	; (18ac <pre_main+0x3c>)
    1884:	6018      	str	r0, [r3, #0]
    1886:	480a      	ldr	r0, [pc, #40]	; (18b0 <pre_main+0x40>)
    1888:	f000 fd82 	bl	2390 <osMutexCreate>
    188c:	4b09      	ldr	r3, [pc, #36]	; (18b4 <pre_main+0x44>)
    188e:	6018      	str	r0, [r3, #0]
    1890:	f002 fbf2 	bl	4078 <__libc_init_array>
    1894:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    1898:	2100      	movs	r1, #0
    189a:	4608      	mov	r0, r1
    189c:	f002 b939 	b.w	3b12 <__wrap_main>
    18a0:	00004e94 	.word	0x00004e94
    18a4:	10001e8c 	.word	0x10001e8c
    18a8:	00004e90 	.word	0x00004e90
    18ac:	10000948 	.word	0x10000948
    18b0:	00004e8c 	.word	0x00004e8c
    18b4:	10000940 	.word	0x10000940

000018b8 <os_idle_demon>:
    18b8:	f7ff bfd2 	b.w	1860 <rtos_idle_loop>

000018bc <os_error>:
    18bc:	b510      	push	{r4, lr}
    18be:	4604      	mov	r4, r0
    18c0:	f000 fcd4 	bl	226c <svcThreadGetId>
    18c4:	4621      	mov	r1, r4
    18c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    18ca:	4602      	mov	r2, r0
    18cc:	4801      	ldr	r0, [pc, #4]	; (18d4 <os_error+0x18>)
    18ce:	f7ff bfbf 	b.w	1850 <error>
    18d2:	bf00      	nop
    18d4:	00004e54 	.word	0x00004e54

000018d8 <sysThreadTerminate>:
    18d8:	f002 b97a 	b.w	3bd0 <thread_terminate_hook>

000018dc <set_stack_heap>:
    18dc:	4a0b      	ldr	r2, [pc, #44]	; (190c <set_stack_heap+0x30>)
    18de:	b4f0      	push	{r4, r5, r6, r7}
    18e0:	f1c2 5380 	rsb	r3, r2, #268435456	; 0x10000000
    18e4:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
    18e8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
    18ec:	4619      	mov	r1, r3
    18ee:	bf28      	it	cs
    18f0:	f44f 6180 	movcs.w	r1, #1024	; 0x400
    18f4:	4f06      	ldr	r7, [pc, #24]	; (1910 <set_stack_heap+0x34>)
    18f6:	4d07      	ldr	r5, [pc, #28]	; (1914 <set_stack_heap+0x38>)
    18f8:	1a5b      	subs	r3, r3, r1
    18fa:	4c07      	ldr	r4, [pc, #28]	; (1918 <set_stack_heap+0x3c>)
    18fc:	4807      	ldr	r0, [pc, #28]	; (191c <set_stack_heap+0x40>)
    18fe:	189e      	adds	r6, r3, r2
    1900:	603a      	str	r2, [r7, #0]
    1902:	602e      	str	r6, [r5, #0]
    1904:	6023      	str	r3, [r4, #0]
    1906:	6001      	str	r1, [r0, #0]
    1908:	bcf0      	pop	{r4, r5, r6, r7}
    190a:	4770      	bx	lr
    190c:	10002628 	.word	0x10002628
    1910:	10001ba8 	.word	0x10001ba8
    1914:	10000950 	.word	0x10000950
    1918:	10001ba4 	.word	0x10001ba4
    191c:	1000094c 	.word	0x1000094c

00001920 <software_init_hook_rtos>:
    1920:	f000 fe0a 	bl	2538 <osKernelInitialize>
    1924:	f7ff ffda 	bl	18dc <set_stack_heap>
    1928:	4803      	ldr	r0, [pc, #12]	; (1938 <software_init_hook_rtos+0x18>)
    192a:	2100      	movs	r1, #0
    192c:	f000 fdb8 	bl	24a0 <osThreadCreate>
    1930:	f000 fc1e 	bl	2170 <osKernelStart>
    1934:	e7fe      	b.n	1934 <software_init_hook_rtos+0x14>
    1936:	0000      	.short	0x0000
    1938:	100000d0 	.word	0x100000d0

0000193c <__rtos_malloc_lock>:
    193c:	4b02      	ldr	r3, [pc, #8]	; (1948 <__rtos_malloc_lock+0xc>)
    193e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    1942:	6818      	ldr	r0, [r3, #0]
    1944:	f000 bd42 	b.w	23cc <osMutexWait>
    1948:	10000948 	.word	0x10000948

0000194c <__rtos_malloc_unlock>:
    194c:	4b01      	ldr	r3, [pc, #4]	; (1954 <__rtos_malloc_unlock+0x8>)
    194e:	6818      	ldr	r0, [r3, #0]
    1950:	f000 bd64 	b.w	241c <osMutexRelease>
    1954:	10000948 	.word	0x10000948

00001958 <rt_put_prio>:
    1958:	b530      	push	{r4, r5, lr}
    195a:	7802      	ldrb	r2, [r0, #0]
    195c:	788c      	ldrb	r4, [r1, #2]
    195e:	3a01      	subs	r2, #1
    1960:	6843      	ldr	r3, [r0, #4]
    1962:	b2d2      	uxtb	r2, r2
    1964:	b113      	cbz	r3, 196c <rt_put_prio+0x14>
    1966:	789d      	ldrb	r5, [r3, #2]
    1968:	42a5      	cmp	r5, r4
    196a:	d207      	bcs.n	197c <rt_put_prio+0x24>
    196c:	2a02      	cmp	r2, #2
    196e:	604b      	str	r3, [r1, #4]
    1970:	6041      	str	r1, [r0, #4]
    1972:	d806      	bhi.n	1982 <rt_put_prio+0x2a>
    1974:	b103      	cbz	r3, 1978 <rt_put_prio+0x20>
    1976:	6099      	str	r1, [r3, #8]
    1978:	6088      	str	r0, [r1, #8]
    197a:	bd30      	pop	{r4, r5, pc}
    197c:	4618      	mov	r0, r3
    197e:	685b      	ldr	r3, [r3, #4]
    1980:	e7f0      	b.n	1964 <rt_put_prio+0xc>
    1982:	2300      	movs	r3, #0
    1984:	608b      	str	r3, [r1, #8]
    1986:	bd30      	pop	{r4, r5, pc}

00001988 <rt_get_first>:
    1988:	6843      	ldr	r3, [r0, #4]
    198a:	7802      	ldrb	r2, [r0, #0]
    198c:	6859      	ldr	r1, [r3, #4]
    198e:	3a01      	subs	r2, #1
    1990:	2a02      	cmp	r2, #2
    1992:	6041      	str	r1, [r0, #4]
    1994:	f04f 0200 	mov.w	r2, #0
    1998:	d805      	bhi.n	19a6 <rt_get_first+0x1e>
    199a:	b109      	cbz	r1, 19a0 <rt_get_first+0x18>
    199c:	6088      	str	r0, [r1, #8]
    199e:	605a      	str	r2, [r3, #4]
    19a0:	609a      	str	r2, [r3, #8]
    19a2:	4618      	mov	r0, r3
    19a4:	4770      	bx	lr
    19a6:	605a      	str	r2, [r3, #4]
    19a8:	e7fb      	b.n	19a2 <rt_get_first+0x1a>
	...

000019ac <rt_put_rdy_first>:
    19ac:	4b03      	ldr	r3, [pc, #12]	; (19bc <rt_put_rdy_first+0x10>)
    19ae:	685a      	ldr	r2, [r3, #4]
    19b0:	6042      	str	r2, [r0, #4]
    19b2:	2200      	movs	r2, #0
    19b4:	6058      	str	r0, [r3, #4]
    19b6:	6082      	str	r2, [r0, #8]
    19b8:	4770      	bx	lr
    19ba:	bf00      	nop
    19bc:	10002580 	.word	0x10002580

000019c0 <rt_put_dly>:
    19c0:	4b10      	ldr	r3, [pc, #64]	; (1a04 <rt_put_dly+0x44>)
    19c2:	b510      	push	{r4, lr}
    19c4:	68da      	ldr	r2, [r3, #12]
    19c6:	b18a      	cbz	r2, 19ec <rt_put_dly+0x2c>
    19c8:	8a9a      	ldrh	r2, [r3, #20]
    19ca:	428a      	cmp	r2, r1
    19cc:	68dc      	ldr	r4, [r3, #12]
    19ce:	d30c      	bcc.n	19ea <rt_put_dly+0x2a>
    19d0:	60c4      	str	r4, [r0, #12]
    19d2:	60d8      	str	r0, [r3, #12]
    19d4:	68c4      	ldr	r4, [r0, #12]
    19d6:	6103      	str	r3, [r0, #16]
    19d8:	b104      	cbz	r4, 19dc <rt_put_dly+0x1c>
    19da:	6120      	str	r0, [r4, #16]
    19dc:	1a52      	subs	r2, r2, r1
    19de:	b292      	uxth	r2, r2
    19e0:	8282      	strh	r2, [r0, #20]
    19e2:	8a99      	ldrh	r1, [r3, #20]
    19e4:	1a8a      	subs	r2, r1, r2
    19e6:	829a      	strh	r2, [r3, #20]
    19e8:	bd10      	pop	{r4, pc}
    19ea:	b93c      	cbnz	r4, 19fc <rt_put_dly+0x3c>
    19ec:	2400      	movs	r4, #0
    19ee:	1a8a      	subs	r2, r1, r2
    19f0:	60c4      	str	r4, [r0, #12]
    19f2:	60d8      	str	r0, [r3, #12]
    19f4:	6103      	str	r3, [r0, #16]
    19f6:	829a      	strh	r2, [r3, #20]
    19f8:	8284      	strh	r4, [r0, #20]
    19fa:	bd10      	pop	{r4, pc}
    19fc:	8aa3      	ldrh	r3, [r4, #20]
    19fe:	441a      	add	r2, r3
    1a00:	4623      	mov	r3, r4
    1a02:	e7e2      	b.n	19ca <rt_put_dly+0xa>
    1a04:	10002598 	.word	0x10002598

00001a08 <rt_dec_dly>:
    1a08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1a0c:	4d17      	ldr	r5, [pc, #92]	; (1a6c <rt_dec_dly+0x64>)
    1a0e:	68eb      	ldr	r3, [r5, #12]
    1a10:	b153      	cbz	r3, 1a28 <rt_dec_dly+0x20>
    1a12:	2600      	movs	r6, #0
    1a14:	8aab      	ldrh	r3, [r5, #20]
    1a16:	4f16      	ldr	r7, [pc, #88]	; (1a70 <rt_dec_dly+0x68>)
    1a18:	3b01      	subs	r3, #1
    1a1a:	f8df 8058 	ldr.w	r8, [pc, #88]	; 1a74 <rt_dec_dly+0x6c>
    1a1e:	82ab      	strh	r3, [r5, #20]
    1a20:	8aaa      	ldrh	r2, [r5, #20]
    1a22:	b90a      	cbnz	r2, 1a28 <rt_dec_dly+0x20>
    1a24:	68ec      	ldr	r4, [r5, #12]
    1a26:	b90c      	cbnz	r4, 1a2c <rt_dec_dly+0x24>
    1a28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1a2c:	68a3      	ldr	r3, [r4, #8]
    1a2e:	b133      	cbz	r3, 1a3e <rt_dec_dly+0x36>
    1a30:	6861      	ldr	r1, [r4, #4]
    1a32:	6059      	str	r1, [r3, #4]
    1a34:	6861      	ldr	r1, [r4, #4]
    1a36:	b109      	cbz	r1, 1a3c <rt_dec_dly+0x34>
    1a38:	608b      	str	r3, [r1, #8]
    1a3a:	6062      	str	r2, [r4, #4]
    1a3c:	60a6      	str	r6, [r4, #8]
    1a3e:	4621      	mov	r1, r4
    1a40:	4638      	mov	r0, r7
    1a42:	f7ff ff89 	bl	1958 <rt_put_prio>
    1a46:	8aa3      	ldrh	r3, [r4, #20]
    1a48:	82ab      	strh	r3, [r5, #20]
    1a4a:	7863      	ldrb	r3, [r4, #1]
    1a4c:	2b04      	cmp	r3, #4
    1a4e:	bf01      	itttt	eq
    1a50:	f8d8 3000 	ldreq.w	r3, [r8]
    1a54:	8ae2      	ldrheq	r2, [r4, #22]
    1a56:	189b      	addeq	r3, r3, r2
    1a58:	82a3      	strheq	r3, [r4, #20]
    1a5a:	2301      	movs	r3, #1
    1a5c:	7063      	strb	r3, [r4, #1]
    1a5e:	68e3      	ldr	r3, [r4, #12]
    1a60:	60eb      	str	r3, [r5, #12]
    1a62:	b10b      	cbz	r3, 1a68 <rt_dec_dly+0x60>
    1a64:	611d      	str	r5, [r3, #16]
    1a66:	60e6      	str	r6, [r4, #12]
    1a68:	6126      	str	r6, [r4, #16]
    1a6a:	e7d9      	b.n	1a20 <rt_dec_dly+0x18>
    1a6c:	10002598 	.word	0x10002598
    1a70:	10002580 	.word	0x10002580
    1a74:	10002614 	.word	0x10002614

00001a78 <rt_rmv_list>:
    1a78:	6883      	ldr	r3, [r0, #8]
    1a7a:	b12b      	cbz	r3, 1a88 <rt_rmv_list+0x10>
    1a7c:	6842      	ldr	r2, [r0, #4]
    1a7e:	605a      	str	r2, [r3, #4]
    1a80:	6842      	ldr	r2, [r0, #4]
    1a82:	b15a      	cbz	r2, 1a9c <rt_rmv_list+0x24>
    1a84:	6093      	str	r3, [r2, #8]
    1a86:	4770      	bx	lr
    1a88:	4b05      	ldr	r3, [pc, #20]	; (1aa0 <rt_rmv_list+0x28>)
    1a8a:	685a      	ldr	r2, [r3, #4]
    1a8c:	4290      	cmp	r0, r2
    1a8e:	d102      	bne.n	1a96 <rt_rmv_list+0x1e>
    1a90:	6842      	ldr	r2, [r0, #4]
    1a92:	605a      	str	r2, [r3, #4]
    1a94:	4770      	bx	lr
    1a96:	4613      	mov	r3, r2
    1a98:	2a00      	cmp	r2, #0
    1a9a:	d1f6      	bne.n	1a8a <rt_rmv_list+0x12>
    1a9c:	4770      	bx	lr
    1a9e:	bf00      	nop
    1aa0:	10002580 	.word	0x10002580

00001aa4 <rt_resort_prio>:
    1aa4:	b510      	push	{r4, lr}
    1aa6:	6884      	ldr	r4, [r0, #8]
    1aa8:	4601      	mov	r1, r0
    1aaa:	b92c      	cbnz	r4, 1ab8 <rt_resort_prio+0x14>
    1aac:	7843      	ldrb	r3, [r0, #1]
    1aae:	2b01      	cmp	r3, #1
    1ab0:	d10d      	bne.n	1ace <rt_resort_prio+0x2a>
    1ab2:	4c07      	ldr	r4, [pc, #28]	; (1ad0 <rt_resort_prio+0x2c>)
    1ab4:	e003      	b.n	1abe <rt_resort_prio+0x1a>
    1ab6:	68a4      	ldr	r4, [r4, #8]
    1ab8:	7823      	ldrb	r3, [r4, #0]
    1aba:	2b00      	cmp	r3, #0
    1abc:	d0fb      	beq.n	1ab6 <rt_resort_prio+0x12>
    1abe:	4608      	mov	r0, r1
    1ac0:	f7ff ffda 	bl	1a78 <rt_rmv_list>
    1ac4:	4620      	mov	r0, r4
    1ac6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    1aca:	f7ff bf45 	b.w	1958 <rt_put_prio>
    1ace:	bd10      	pop	{r4, pc}
    1ad0:	10002580 	.word	0x10002580

00001ad4 <rt_rmv_dly>:
    1ad4:	6903      	ldr	r3, [r0, #16]
    1ad6:	b510      	push	{r4, lr}
    1ad8:	b163      	cbz	r3, 1af4 <rt_rmv_dly+0x20>
    1ada:	68c2      	ldr	r2, [r0, #12]
    1adc:	60da      	str	r2, [r3, #12]
    1ade:	68c2      	ldr	r2, [r0, #12]
    1ae0:	b14a      	cbz	r2, 1af6 <rt_rmv_dly+0x22>
    1ae2:	8a99      	ldrh	r1, [r3, #20]
    1ae4:	8a84      	ldrh	r4, [r0, #20]
    1ae6:	4421      	add	r1, r4
    1ae8:	8299      	strh	r1, [r3, #20]
    1aea:	6113      	str	r3, [r2, #16]
    1aec:	2300      	movs	r3, #0
    1aee:	60c3      	str	r3, [r0, #12]
    1af0:	2300      	movs	r3, #0
    1af2:	6103      	str	r3, [r0, #16]
    1af4:	bd10      	pop	{r4, pc}
    1af6:	829a      	strh	r2, [r3, #20]
    1af8:	e7fa      	b.n	1af0 <rt_rmv_dly+0x1c>
	...

00001afc <rt_psq_enq>:
    1afc:	b470      	push	{r4, r5, r6}
    1afe:	4b11      	ldr	r3, [pc, #68]	; (1b44 <rt_psq_enq+0x48>)
    1b00:	78dd      	ldrb	r5, [r3, #3]
    1b02:	f3ef 8610 	mrs	r6, PRIMASK
    1b06:	f3ef 8210 	mrs	r2, PRIMASK
    1b0a:	b672      	cpsid	i
    1b0c:	789a      	ldrb	r2, [r3, #2]
    1b0e:	4295      	cmp	r5, r2
    1b10:	d911      	bls.n	1b36 <rt_psq_enq+0x3a>
    1b12:	3201      	adds	r2, #1
    1b14:	709a      	strb	r2, [r3, #2]
    1b16:	781a      	ldrb	r2, [r3, #0]
    1b18:	1c54      	adds	r4, r2, #1
    1b1a:	42a5      	cmp	r5, r4
    1b1c:	bf08      	it	eq
    1b1e:	2400      	moveq	r4, #0
    1b20:	701c      	strb	r4, [r3, #0]
    1b22:	b906      	cbnz	r6, 1b26 <rt_psq_enq+0x2a>
    1b24:	b662      	cpsie	i
    1b26:	4295      	cmp	r5, r2
    1b28:	d907      	bls.n	1b3a <rt_psq_enq+0x3e>
    1b2a:	bc70      	pop	{r4, r5, r6}
    1b2c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    1b30:	6058      	str	r0, [r3, #4]
    1b32:	6099      	str	r1, [r3, #8]
    1b34:	4770      	bx	lr
    1b36:	2e00      	cmp	r6, #0
    1b38:	d0f4      	beq.n	1b24 <rt_psq_enq+0x28>
    1b3a:	bc70      	pop	{r4, r5, r6}
    1b3c:	2002      	movs	r0, #2
    1b3e:	f7ff bebd 	b.w	18bc <os_error>
    1b42:	bf00      	nop
    1b44:	10001e04 	.word	0x10001e04

00001b48 <rt_psh_req>:
    1b48:	4b05      	ldr	r3, [pc, #20]	; (1b60 <rt_psh_req+0x18>)
    1b4a:	781b      	ldrb	r3, [r3, #0]
    1b4c:	b923      	cbnz	r3, 1b58 <rt_psh_req+0x10>
    1b4e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    1b52:	4b04      	ldr	r3, [pc, #16]	; (1b64 <rt_psh_req+0x1c>)
    1b54:	601a      	str	r2, [r3, #0]
    1b56:	4770      	bx	lr
    1b58:	2201      	movs	r2, #1
    1b5a:	4b03      	ldr	r3, [pc, #12]	; (1b68 <rt_psh_req+0x20>)
    1b5c:	701a      	strb	r2, [r3, #0]
    1b5e:	4770      	bx	lr
    1b60:	100019a4 	.word	0x100019a4
    1b64:	e000ed04 	.word	0xe000ed04
    1b68:	100019a5 	.word	0x100019a5

00001b6c <rt_pop_req>:
    1b6c:	b538      	push	{r3, r4, r5, lr}
    1b6e:	4b1a      	ldr	r3, [pc, #104]	; (1bd8 <rt_pop_req+0x6c>)
    1b70:	4c1a      	ldr	r4, [pc, #104]	; (1bdc <rt_pop_req+0x70>)
    1b72:	6818      	ldr	r0, [r3, #0]
    1b74:	2301      	movs	r3, #1
    1b76:	7043      	strb	r3, [r0, #1]
    1b78:	f7ff ff18 	bl	19ac <rt_put_rdy_first>
    1b7c:	7865      	ldrb	r5, [r4, #1]
    1b7e:	78a3      	ldrb	r3, [r4, #2]
    1b80:	b93b      	cbnz	r3, 1b92 <rt_pop_req+0x26>
    1b82:	4817      	ldr	r0, [pc, #92]	; (1be0 <rt_pop_req+0x74>)
    1b84:	7065      	strb	r5, [r4, #1]
    1b86:	f7ff feff 	bl	1988 <rt_get_first>
    1b8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1b8e:	f000 bdad 	b.w	26ec <rt_switch_req>
    1b92:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
    1b96:	6858      	ldr	r0, [r3, #4]
    1b98:	7802      	ldrb	r2, [r0, #0]
    1b9a:	b99a      	cbnz	r2, 1bc4 <rt_pop_req+0x58>
    1b9c:	8919      	ldrh	r1, [r3, #8]
    1b9e:	f000 fa0b 	bl	1fb8 <rt_evt_psh>
    1ba2:	78e3      	ldrb	r3, [r4, #3]
    1ba4:	3501      	adds	r5, #1
    1ba6:	429d      	cmp	r5, r3
    1ba8:	bf08      	it	eq
    1baa:	2500      	moveq	r5, #0
    1bac:	f3ef 8310 	mrs	r3, PRIMASK
    1bb0:	f3ef 8210 	mrs	r2, PRIMASK
    1bb4:	b672      	cpsid	i
    1bb6:	78a2      	ldrb	r2, [r4, #2]
    1bb8:	3a01      	subs	r2, #1
    1bba:	70a2      	strb	r2, [r4, #2]
    1bbc:	2b00      	cmp	r3, #0
    1bbe:	d1de      	bne.n	1b7e <rt_pop_req+0x12>
    1bc0:	b662      	cpsie	i
    1bc2:	e7dc      	b.n	1b7e <rt_pop_req+0x12>
    1bc4:	2a01      	cmp	r2, #1
    1bc6:	d103      	bne.n	1bd0 <rt_pop_req+0x64>
    1bc8:	6899      	ldr	r1, [r3, #8]
    1bca:	f000 f983 	bl	1ed4 <rt_mbx_psh>
    1bce:	e7e8      	b.n	1ba2 <rt_pop_req+0x36>
    1bd0:	f001 f892 	bl	2cf8 <rt_sem_psh>
    1bd4:	e7e5      	b.n	1ba2 <rt_pop_req+0x36>
    1bd6:	bf00      	nop
    1bd8:	100025cc 	.word	0x100025cc
    1bdc:	10001e04 	.word	0x10001e04
    1be0:	10002580 	.word	0x10002580

00001be4 <os_tick_init>:
    1be4:	4b08      	ldr	r3, [pc, #32]	; (1c08 <os_tick_init+0x24>)
    1be6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    1bea:	681a      	ldr	r2, [r3, #0]
    1bec:	4b07      	ldr	r3, [pc, #28]	; (1c0c <os_tick_init+0x28>)
    1bee:	601a      	str	r2, [r3, #0]
    1bf0:	2200      	movs	r2, #0
    1bf2:	605a      	str	r2, [r3, #4]
    1bf4:	2207      	movs	r2, #7
    1bf6:	f843 2c04 	str.w	r2, [r3, #-4]
    1bfa:	4a05      	ldr	r2, [pc, #20]	; (1c10 <os_tick_init+0x2c>)
    1bfc:	6813      	ldr	r3, [r2, #0]
    1bfe:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
    1c02:	6013      	str	r3, [r2, #0]
    1c04:	4770      	bx	lr
    1c06:	bf00      	nop
    1c08:	00004eb4 	.word	0x00004eb4
    1c0c:	e000e014 	.word	0xe000e014
    1c10:	e000ed20 	.word	0xe000ed20

00001c14 <os_tick_irqack>:
    1c14:	4770      	bx	lr
	...

00001c18 <rt_systick>:
    1c18:	b508      	push	{r3, lr}
    1c1a:	4b0b      	ldr	r3, [pc, #44]	; (1c48 <rt_systick+0x30>)
    1c1c:	6818      	ldr	r0, [r3, #0]
    1c1e:	2301      	movs	r3, #1
    1c20:	7043      	strb	r3, [r0, #1]
    1c22:	f7ff fec3 	bl	19ac <rt_put_rdy_first>
    1c26:	f000 f9fd 	bl	2024 <rt_chk_robin>
    1c2a:	4a08      	ldr	r2, [pc, #32]	; (1c4c <rt_systick+0x34>)
    1c2c:	6813      	ldr	r3, [r2, #0]
    1c2e:	3301      	adds	r3, #1
    1c30:	6013      	str	r3, [r2, #0]
    1c32:	f7ff fee9 	bl	1a08 <rt_dec_dly>
    1c36:	f000 fce1 	bl	25fc <sysTimerTick>
    1c3a:	4805      	ldr	r0, [pc, #20]	; (1c50 <rt_systick+0x38>)
    1c3c:	f7ff fea4 	bl	1988 <rt_get_first>
    1c40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    1c44:	f000 bd52 	b.w	26ec <rt_switch_req>
    1c48:	100025cc 	.word	0x100025cc
    1c4c:	10002614 	.word	0x10002614
    1c50:	10002580 	.word	0x10002580

00001c54 <rt_stk_check>:
    1c54:	4b06      	ldr	r3, [pc, #24]	; (1c70 <rt_stk_check+0x1c>)
    1c56:	681a      	ldr	r2, [r3, #0]
    1c58:	6b13      	ldr	r3, [r2, #48]	; 0x30
    1c5a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
    1c5c:	4293      	cmp	r3, r2
    1c5e:	d803      	bhi.n	1c68 <rt_stk_check+0x14>
    1c60:	681a      	ldr	r2, [r3, #0]
    1c62:	4b04      	ldr	r3, [pc, #16]	; (1c74 <rt_stk_check+0x20>)
    1c64:	429a      	cmp	r2, r3
    1c66:	d002      	beq.n	1c6e <rt_stk_check+0x1a>
    1c68:	2001      	movs	r0, #1
    1c6a:	f7ff be27 	b.w	18bc <os_error>
    1c6e:	4770      	bx	lr
    1c70:	100025cc 	.word	0x100025cc
    1c74:	e25a2ea5 	.word	0xe25a2ea5

00001c78 <rt_init_stack>:
    1c78:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c7a:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
    1c7e:	f04f 0e00 	mov.w	lr, #0
    1c82:	6a83      	ldr	r3, [r0, #40]	; 0x28
    1c84:	6b05      	ldr	r5, [r0, #48]	; 0x30
    1c86:	089b      	lsrs	r3, r3, #2
    1c88:	bf02      	ittt	eq
    1c8a:	4b1e      	ldreq	r3, [pc, #120]	; (1d04 <rt_init_stack+0x8c>)
    1c8c:	881b      	ldrheq	r3, [r3, #0]
    1c8e:	089b      	lsreq	r3, r3, #2
    1c90:	eb05 0283 	add.w	r2, r5, r3, lsl #2
    1c94:	0754      	lsls	r4, r2, #29
    1c96:	bf48      	it	mi
    1c98:	3a04      	submi	r2, #4
    1c9a:	e902 0042 	stmdb	r2, {r1, r6}
    1c9e:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
    1ca2:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
    1ca6:	f1a2 070c 	sub.w	r7, r2, #12
    1caa:	f846 ef04 	str.w	lr, [r6, #4]!
    1cae:	42be      	cmp	r6, r7
    1cb0:	d1fb      	bne.n	1caa <rt_init_stack+0x32>
    1cb2:	69c6      	ldr	r6, [r0, #28]
    1cb4:	f842 6c20 	str.w	r6, [r2, #-32]
    1cb8:	6341      	str	r1, [r0, #52]	; 0x34
    1cba:	4912      	ldr	r1, [pc, #72]	; (1d04 <rt_init_stack+0x8c>)
    1cbc:	62c4      	str	r4, [r0, #44]	; 0x2c
    1cbe:	6809      	ldr	r1, [r1, #0]
    1cc0:	00c9      	lsls	r1, r1, #3
    1cc2:	d517      	bpl.n	1cf4 <rt_init_stack+0x7c>
    1cc4:	2b11      	cmp	r3, #17
    1cc6:	d915      	bls.n	1cf4 <rt_init_stack+0x7c>
    1cc8:	f06f 0107 	mvn.w	r1, #7
    1ccc:	3b10      	subs	r3, #16
    1cce:	085b      	lsrs	r3, r3, #1
    1cd0:	434b      	muls	r3, r1
    1cd2:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
    1cd6:	440a      	add	r2, r1
    1cd8:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
    1cdc:	4621      	mov	r1, r4
    1cde:	4291      	cmp	r1, r2
    1ce0:	d10b      	bne.n	1cfa <rt_init_stack+0x82>
    1ce2:	3308      	adds	r3, #8
    1ce4:	441c      	add	r4, r3
    1ce6:	1f23      	subs	r3, r4, #4
    1ce8:	429d      	cmp	r5, r3
    1cea:	bf3c      	itt	cc
    1cec:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
    1cf0:	f844 3c04 	strcc.w	r3, [r4, #-4]
    1cf4:	4b04      	ldr	r3, [pc, #16]	; (1d08 <rt_init_stack+0x90>)
    1cf6:	602b      	str	r3, [r5, #0]
    1cf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1cfa:	f841 0c04 	str.w	r0, [r1, #-4]
    1cfe:	f841 0d08 	str.w	r0, [r1, #-8]!
    1d02:	e7ec      	b.n	1cde <rt_init_stack+0x66>
    1d04:	00004e9c 	.word	0x00004e9c
    1d08:	e25a2ea5 	.word	0xe25a2ea5

00001d0c <rt_ret_val>:
    1d0c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    1d0e:	6219      	str	r1, [r3, #32]
    1d10:	4770      	bx	lr

00001d12 <rt_ret_val2>:
    1d12:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    1d14:	6219      	str	r1, [r3, #32]
    1d16:	625a      	str	r2, [r3, #36]	; 0x24
    1d18:	4770      	bx	lr

00001d1a <_init_box>:
    1d1a:	2a00      	cmp	r2, #0
    1d1c:	bfbb      	ittet	lt
    1d1e:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
    1d22:	3207      	addlt	r2, #7
    1d24:	3203      	addge	r2, #3
    1d26:	f022 0207 	biclt.w	r2, r2, #7
    1d2a:	bfa8      	it	ge
    1d2c:	f022 0203 	bicge.w	r2, r2, #3
    1d30:	b510      	push	{r4, lr}
    1d32:	bfb4      	ite	lt
    1d34:	2310      	movlt	r3, #16
    1d36:	230c      	movge	r3, #12
    1d38:	b192      	cbz	r2, 1d60 <_init_box+0x46>
    1d3a:	18d4      	adds	r4, r2, r3
    1d3c:	428c      	cmp	r4, r1
    1d3e:	d80f      	bhi.n	1d60 <_init_box+0x46>
    1d40:	4401      	add	r1, r0
    1d42:	4403      	add	r3, r0
    1d44:	4254      	negs	r4, r2
    1d46:	6041      	str	r1, [r0, #4]
    1d48:	6003      	str	r3, [r0, #0]
    1d4a:	6082      	str	r2, [r0, #8]
    1d4c:	4421      	add	r1, r4
    1d4e:	1898      	adds	r0, r3, r2
    1d50:	4281      	cmp	r1, r0
    1d52:	d302      	bcc.n	1d5a <_init_box+0x40>
    1d54:	5100      	str	r0, [r0, r4]
    1d56:	4603      	mov	r3, r0
    1d58:	e7f9      	b.n	1d4e <_init_box+0x34>
    1d5a:	2000      	movs	r0, #0
    1d5c:	6018      	str	r0, [r3, #0]
    1d5e:	bd10      	pop	{r4, pc}
    1d60:	2001      	movs	r0, #1
    1d62:	bd10      	pop	{r4, pc}

00001d64 <rt_alloc_box>:
    1d64:	f3ef 8310 	mrs	r3, PRIMASK
    1d68:	b672      	cpsid	i
    1d6a:	6802      	ldr	r2, [r0, #0]
    1d6c:	f003 0301 	and.w	r3, r3, #1
    1d70:	b10a      	cbz	r2, 1d76 <rt_alloc_box+0x12>
    1d72:	6811      	ldr	r1, [r2, #0]
    1d74:	6001      	str	r1, [r0, #0]
    1d76:	b903      	cbnz	r3, 1d7a <rt_alloc_box+0x16>
    1d78:	b662      	cpsie	i
    1d7a:	4610      	mov	r0, r2
    1d7c:	4770      	bx	lr

00001d7e <rt_free_box>:
    1d7e:	4281      	cmp	r1, r0
    1d80:	d30d      	bcc.n	1d9e <rt_free_box+0x20>
    1d82:	6843      	ldr	r3, [r0, #4]
    1d84:	4299      	cmp	r1, r3
    1d86:	d20a      	bcs.n	1d9e <rt_free_box+0x20>
    1d88:	f3ef 8310 	mrs	r3, PRIMASK
    1d8c:	b672      	cpsid	i
    1d8e:	6802      	ldr	r2, [r0, #0]
    1d90:	600a      	str	r2, [r1, #0]
    1d92:	6001      	str	r1, [r0, #0]
    1d94:	f013 0001 	ands.w	r0, r3, #1
    1d98:	d103      	bne.n	1da2 <rt_free_box+0x24>
    1d9a:	b662      	cpsie	i
    1d9c:	4770      	bx	lr
    1d9e:	2001      	movs	r0, #1
    1da0:	4770      	bx	lr
    1da2:	2000      	movs	r0, #0
    1da4:	4770      	bx	lr

00001da6 <rt_mbx_init>:
    1da6:	2301      	movs	r3, #1
    1da8:	7003      	strb	r3, [r0, #0]
    1daa:	2300      	movs	r3, #0
    1dac:	3910      	subs	r1, #16
    1dae:	0889      	lsrs	r1, r1, #2
    1db0:	7043      	strb	r3, [r0, #1]
    1db2:	7083      	strb	r3, [r0, #2]
    1db4:	6043      	str	r3, [r0, #4]
    1db6:	8103      	strh	r3, [r0, #8]
    1db8:	8143      	strh	r3, [r0, #10]
    1dba:	8183      	strh	r3, [r0, #12]
    1dbc:	81c1      	strh	r1, [r0, #14]
    1dbe:	4770      	bx	lr

00001dc0 <rt_mbx_wait>:
    1dc0:	b570      	push	{r4, r5, r6, lr}
    1dc2:	8985      	ldrh	r5, [r0, #12]
    1dc4:	4604      	mov	r4, r0
    1dc6:	4616      	mov	r6, r2
    1dc8:	2d00      	cmp	r5, #0
    1dca:	d038      	beq.n	1e3e <rt_mbx_wait+0x7e>
    1dcc:	8943      	ldrh	r3, [r0, #10]
    1dce:	1d1a      	adds	r2, r3, #4
    1dd0:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
    1dd4:	3301      	adds	r3, #1
    1dd6:	600a      	str	r2, [r1, #0]
    1dd8:	89c2      	ldrh	r2, [r0, #14]
    1dda:	b29b      	uxth	r3, r3
    1ddc:	429a      	cmp	r2, r3
    1dde:	8143      	strh	r3, [r0, #10]
    1de0:	bf04      	itt	eq
    1de2:	2300      	moveq	r3, #0
    1de4:	8143      	strheq	r3, [r0, #10]
    1de6:	6843      	ldr	r3, [r0, #4]
    1de8:	b1f3      	cbz	r3, 1e28 <rt_mbx_wait+0x68>
    1dea:	7843      	ldrb	r3, [r0, #1]
    1dec:	2b02      	cmp	r3, #2
    1dee:	d11b      	bne.n	1e28 <rt_mbx_wait+0x68>
    1df0:	f7ff fdca 	bl	1988 <rt_get_first>
    1df4:	4605      	mov	r5, r0
    1df6:	2100      	movs	r1, #0
    1df8:	f7ff ff88 	bl	1d0c <rt_ret_val>
    1dfc:	8923      	ldrh	r3, [r4, #8]
    1dfe:	69e9      	ldr	r1, [r5, #28]
    1e00:	1d1a      	adds	r2, r3, #4
    1e02:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
    1e06:	3301      	adds	r3, #1
    1e08:	89e2      	ldrh	r2, [r4, #14]
    1e0a:	b29b      	uxth	r3, r3
    1e0c:	429a      	cmp	r2, r3
    1e0e:	8123      	strh	r3, [r4, #8]
    1e10:	bf08      	it	eq
    1e12:	2300      	moveq	r3, #0
    1e14:	4628      	mov	r0, r5
    1e16:	bf08      	it	eq
    1e18:	8123      	strheq	r3, [r4, #8]
    1e1a:	f7ff fe5b 	bl	1ad4 <rt_rmv_dly>
    1e1e:	4628      	mov	r0, r5
    1e20:	f000 fc7e 	bl	2720 <rt_dispatch>
    1e24:	2000      	movs	r0, #0
    1e26:	bd70      	pop	{r4, r5, r6, pc}
    1e28:	f3ef 8010 	mrs	r0, PRIMASK
    1e2c:	f3ef 8310 	mrs	r3, PRIMASK
    1e30:	b672      	cpsid	i
    1e32:	3d01      	subs	r5, #1
    1e34:	81a5      	strh	r5, [r4, #12]
    1e36:	2800      	cmp	r0, #0
    1e38:	d1f4      	bne.n	1e24 <rt_mbx_wait+0x64>
    1e3a:	b662      	cpsie	i
    1e3c:	bd70      	pop	{r4, r5, r6, pc}
    1e3e:	b14a      	cbz	r2, 1e54 <rt_mbx_wait+0x94>
    1e40:	6842      	ldr	r2, [r0, #4]
    1e42:	4b09      	ldr	r3, [pc, #36]	; (1e68 <rt_mbx_wait+0xa8>)
    1e44:	b142      	cbz	r2, 1e58 <rt_mbx_wait+0x98>
    1e46:	6819      	ldr	r1, [r3, #0]
    1e48:	f7ff fd86 	bl	1958 <rt_put_prio>
    1e4c:	2108      	movs	r1, #8
    1e4e:	4630      	mov	r0, r6
    1e50:	f000 fc88 	bl	2764 <rt_block>
    1e54:	2001      	movs	r0, #1
    1e56:	bd70      	pop	{r4, r5, r6, pc}
    1e58:	681b      	ldr	r3, [r3, #0]
    1e5a:	6043      	str	r3, [r0, #4]
    1e5c:	605a      	str	r2, [r3, #4]
    1e5e:	6098      	str	r0, [r3, #8]
    1e60:	2301      	movs	r3, #1
    1e62:	7043      	strb	r3, [r0, #1]
    1e64:	e7f2      	b.n	1e4c <rt_mbx_wait+0x8c>
    1e66:	bf00      	nop
    1e68:	100025cc 	.word	0x100025cc

00001e6c <rt_mbx_check>:
    1e6c:	89c2      	ldrh	r2, [r0, #14]
    1e6e:	8980      	ldrh	r0, [r0, #12]
    1e70:	1a10      	subs	r0, r2, r0
    1e72:	4770      	bx	lr

00001e74 <isr_mbx_send>:
    1e74:	b508      	push	{r3, lr}
    1e76:	f7ff fe41 	bl	1afc <rt_psq_enq>
    1e7a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    1e7e:	f7ff be63 	b.w	1b48 <rt_psh_req>

00001e82 <isr_mbx_receive>:
    1e82:	8983      	ldrh	r3, [r0, #12]
    1e84:	b510      	push	{r4, lr}
    1e86:	4604      	mov	r4, r0
    1e88:	b30b      	cbz	r3, 1ece <isr_mbx_receive+0x4c>
    1e8a:	8943      	ldrh	r3, [r0, #10]
    1e8c:	3304      	adds	r3, #4
    1e8e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
    1e92:	600b      	str	r3, [r1, #0]
    1e94:	7843      	ldrb	r3, [r0, #1]
    1e96:	2b02      	cmp	r3, #2
    1e98:	d104      	bne.n	1ea4 <isr_mbx_receive+0x22>
    1e9a:	2100      	movs	r1, #0
    1e9c:	f7ff fe2e 	bl	1afc <rt_psq_enq>
    1ea0:	f7ff fe52 	bl	1b48 <rt_psh_req>
    1ea4:	f3ef 8310 	mrs	r3, PRIMASK
    1ea8:	f3ef 8210 	mrs	r2, PRIMASK
    1eac:	b672      	cpsid	i
    1eae:	89a2      	ldrh	r2, [r4, #12]
    1eb0:	3a01      	subs	r2, #1
    1eb2:	81a2      	strh	r2, [r4, #12]
    1eb4:	b903      	cbnz	r3, 1eb8 <isr_mbx_receive+0x36>
    1eb6:	b662      	cpsie	i
    1eb8:	8963      	ldrh	r3, [r4, #10]
    1eba:	89e2      	ldrh	r2, [r4, #14]
    1ebc:	3301      	adds	r3, #1
    1ebe:	b29b      	uxth	r3, r3
    1ec0:	429a      	cmp	r2, r3
    1ec2:	8163      	strh	r3, [r4, #10]
    1ec4:	d101      	bne.n	1eca <isr_mbx_receive+0x48>
    1ec6:	2300      	movs	r3, #0
    1ec8:	8163      	strh	r3, [r4, #10]
    1eca:	2004      	movs	r0, #4
    1ecc:	bd10      	pop	{r4, pc}
    1ece:	4618      	mov	r0, r3
    1ed0:	bd10      	pop	{r4, pc}
	...

00001ed4 <rt_mbx_psh>:
    1ed4:	6843      	ldr	r3, [r0, #4]
    1ed6:	b570      	push	{r4, r5, r6, lr}
    1ed8:	4604      	mov	r4, r0
    1eda:	460e      	mov	r6, r1
    1edc:	2b00      	cmp	r3, #0
    1ede:	d04b      	beq.n	1f78 <rt_mbx_psh+0xa4>
    1ee0:	7845      	ldrb	r5, [r0, #1]
    1ee2:	2d02      	cmp	r5, #2
    1ee4:	d020      	beq.n	1f28 <rt_mbx_psh+0x54>
    1ee6:	2d03      	cmp	r5, #3
    1ee8:	d00a      	beq.n	1f00 <rt_mbx_psh+0x2c>
    1eea:	2d01      	cmp	r5, #1
    1eec:	d161      	bne.n	1fb2 <rt_mbx_psh+0xde>
    1eee:	f7ff fd4b 	bl	1988 <rt_get_first>
    1ef2:	4604      	mov	r4, r0
    1ef4:	4632      	mov	r2, r6
    1ef6:	2110      	movs	r1, #16
    1ef8:	f7ff ff0b 	bl	1d12 <rt_ret_val2>
    1efc:	7065      	strb	r5, [r4, #1]
    1efe:	e00e      	b.n	1f1e <rt_mbx_psh+0x4a>
    1f00:	4608      	mov	r0, r1
    1f02:	f7ff ff2f 	bl	1d64 <rt_alloc_box>
    1f06:	4605      	mov	r5, r0
    1f08:	2800      	cmp	r0, #0
    1f0a:	d052      	beq.n	1fb2 <rt_mbx_psh+0xde>
    1f0c:	4620      	mov	r0, r4
    1f0e:	f7ff fd3b 	bl	1988 <rt_get_first>
    1f12:	4629      	mov	r1, r5
    1f14:	4604      	mov	r4, r0
    1f16:	f7ff fef9 	bl	1d0c <rt_ret_val>
    1f1a:	2301      	movs	r3, #1
    1f1c:	7063      	strb	r3, [r4, #1]
    1f1e:	4620      	mov	r0, r4
    1f20:	f7ff fdd8 	bl	1ad4 <rt_rmv_dly>
    1f24:	4621      	mov	r1, r4
    1f26:	e022      	b.n	1f6e <rt_mbx_psh+0x9a>
    1f28:	f7ff fd2e 	bl	1988 <rt_get_first>
    1f2c:	4605      	mov	r5, r0
    1f2e:	2100      	movs	r1, #0
    1f30:	f7ff feec 	bl	1d0c <rt_ret_val>
    1f34:	8923      	ldrh	r3, [r4, #8]
    1f36:	69e9      	ldr	r1, [r5, #28]
    1f38:	1d1a      	adds	r2, r3, #4
    1f3a:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
    1f3e:	f3ef 8210 	mrs	r2, PRIMASK
    1f42:	f3ef 8110 	mrs	r1, PRIMASK
    1f46:	b672      	cpsid	i
    1f48:	89a1      	ldrh	r1, [r4, #12]
    1f4a:	3101      	adds	r1, #1
    1f4c:	81a1      	strh	r1, [r4, #12]
    1f4e:	b902      	cbnz	r2, 1f52 <rt_mbx_psh+0x7e>
    1f50:	b662      	cpsie	i
    1f52:	89e2      	ldrh	r2, [r4, #14]
    1f54:	3301      	adds	r3, #1
    1f56:	b29b      	uxth	r3, r3
    1f58:	429a      	cmp	r2, r3
    1f5a:	8123      	strh	r3, [r4, #8]
    1f5c:	bf04      	itt	eq
    1f5e:	2300      	moveq	r3, #0
    1f60:	8123      	strheq	r3, [r4, #8]
    1f62:	2301      	movs	r3, #1
    1f64:	4628      	mov	r0, r5
    1f66:	706b      	strb	r3, [r5, #1]
    1f68:	f7ff fdb4 	bl	1ad4 <rt_rmv_dly>
    1f6c:	4629      	mov	r1, r5
    1f6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1f72:	4810      	ldr	r0, [pc, #64]	; (1fb4 <rt_mbx_psh+0xe0>)
    1f74:	f7ff bcf0 	b.w	1958 <rt_put_prio>
    1f78:	8980      	ldrh	r0, [r0, #12]
    1f7a:	89e1      	ldrh	r1, [r4, #14]
    1f7c:	4288      	cmp	r0, r1
    1f7e:	d213      	bcs.n	1fa8 <rt_mbx_psh+0xd4>
    1f80:	8923      	ldrh	r3, [r4, #8]
    1f82:	1d1a      	adds	r2, r3, #4
    1f84:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
    1f88:	f3ef 8210 	mrs	r2, PRIMASK
    1f8c:	f3ef 8510 	mrs	r5, PRIMASK
    1f90:	b672      	cpsid	i
    1f92:	3001      	adds	r0, #1
    1f94:	81a0      	strh	r0, [r4, #12]
    1f96:	b902      	cbnz	r2, 1f9a <rt_mbx_psh+0xc6>
    1f98:	b662      	cpsie	i
    1f9a:	3301      	adds	r3, #1
    1f9c:	b29b      	uxth	r3, r3
    1f9e:	4299      	cmp	r1, r3
    1fa0:	bf08      	it	eq
    1fa2:	2300      	moveq	r3, #0
    1fa4:	8123      	strh	r3, [r4, #8]
    1fa6:	bd70      	pop	{r4, r5, r6, pc}
    1fa8:	2003      	movs	r0, #3
    1faa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1fae:	f7ff bc85 	b.w	18bc <os_error>
    1fb2:	bd70      	pop	{r4, r5, r6, pc}
    1fb4:	10002580 	.word	0x10002580

00001fb8 <rt_evt_psh>:
    1fb8:	b510      	push	{r4, lr}
    1fba:	8b03      	ldrh	r3, [r0, #24]
    1fbc:	7842      	ldrb	r2, [r0, #1]
    1fbe:	4319      	orrs	r1, r3
    1fc0:	2a06      	cmp	r2, #6
    1fc2:	4604      	mov	r4, r0
    1fc4:	8301      	strh	r1, [r0, #24]
    1fc6:	8b43      	ldrh	r3, [r0, #26]
    1fc8:	d115      	bne.n	1ff6 <rt_evt_psh+0x3e>
    1fca:	ea33 0201 	bics.w	r2, r3, r1
    1fce:	d119      	bne.n	2004 <rt_evt_psh+0x4c>
    1fd0:	ea21 0103 	bic.w	r1, r1, r3
    1fd4:	8321      	strh	r1, [r4, #24]
    1fd6:	4620      	mov	r0, r4
    1fd8:	f7ff fd7c 	bl	1ad4 <rt_rmv_dly>
    1fdc:	2301      	movs	r3, #1
    1fde:	4620      	mov	r0, r4
    1fe0:	7063      	strb	r3, [r4, #1]
    1fe2:	8b62      	ldrh	r2, [r4, #26]
    1fe4:	2108      	movs	r1, #8
    1fe6:	f7ff fe94 	bl	1d12 <rt_ret_val2>
    1fea:	4621      	mov	r1, r4
    1fec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    1ff0:	4805      	ldr	r0, [pc, #20]	; (2008 <rt_evt_psh+0x50>)
    1ff2:	f7ff bcb1 	b.w	1958 <rt_put_prio>
    1ff6:	2a05      	cmp	r2, #5
    1ff8:	d104      	bne.n	2004 <rt_evt_psh+0x4c>
    1ffa:	ea11 0203 	ands.w	r2, r1, r3
    1ffe:	d001      	beq.n	2004 <rt_evt_psh+0x4c>
    2000:	8342      	strh	r2, [r0, #26]
    2002:	e7e5      	b.n	1fd0 <rt_evt_psh+0x18>
    2004:	bd10      	pop	{r4, pc}
    2006:	bf00      	nop
    2008:	10002580 	.word	0x10002580

0000200c <rt_init_robin>:
    200c:	2200      	movs	r2, #0
    200e:	4b03      	ldr	r3, [pc, #12]	; (201c <rt_init_robin+0x10>)
    2010:	601a      	str	r2, [r3, #0]
    2012:	4a03      	ldr	r2, [pc, #12]	; (2020 <rt_init_robin+0x14>)
    2014:	6812      	ldr	r2, [r2, #0]
    2016:	80da      	strh	r2, [r3, #6]
    2018:	4770      	bx	lr
    201a:	bf00      	nop
    201c:	100025b8 	.word	0x100025b8
    2020:	00004e98 	.word	0x00004e98

00002024 <rt_chk_robin>:
    2024:	b508      	push	{r3, lr}
    2026:	4b0e      	ldr	r3, [pc, #56]	; (2060 <rt_chk_robin+0x3c>)
    2028:	685a      	ldr	r2, [r3, #4]
    202a:	4b0e      	ldr	r3, [pc, #56]	; (2064 <rt_chk_robin+0x40>)
    202c:	6819      	ldr	r1, [r3, #0]
    202e:	4291      	cmp	r1, r2
    2030:	490d      	ldr	r1, [pc, #52]	; (2068 <rt_chk_robin+0x44>)
    2032:	d005      	beq.n	2040 <rt_chk_robin+0x1c>
    2034:	601a      	str	r2, [r3, #0]
    2036:	88da      	ldrh	r2, [r3, #6]
    2038:	6808      	ldr	r0, [r1, #0]
    203a:	3a01      	subs	r2, #1
    203c:	4402      	add	r2, r0
    203e:	809a      	strh	r2, [r3, #4]
    2040:	8898      	ldrh	r0, [r3, #4]
    2042:	880a      	ldrh	r2, [r1, #0]
    2044:	4290      	cmp	r0, r2
    2046:	d10a      	bne.n	205e <rt_chk_robin+0x3a>
    2048:	2200      	movs	r2, #0
    204a:	4805      	ldr	r0, [pc, #20]	; (2060 <rt_chk_robin+0x3c>)
    204c:	601a      	str	r2, [r3, #0]
    204e:	f7ff fc9b 	bl	1988 <rt_get_first>
    2052:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    2056:	4601      	mov	r1, r0
    2058:	4801      	ldr	r0, [pc, #4]	; (2060 <rt_chk_robin+0x3c>)
    205a:	f7ff bc7d 	b.w	1958 <rt_put_prio>
    205e:	bd08      	pop	{r3, pc}
    2060:	10002580 	.word	0x10002580
    2064:	100025b8 	.word	0x100025b8
    2068:	10002614 	.word	0x10002614

0000206c <rt_timer_insert>:
    206c:	b530      	push	{r4, r5, lr}
    206e:	2400      	movs	r4, #0
    2070:	4a0a      	ldr	r2, [pc, #40]	; (209c <rt_timer_insert+0x30>)
    2072:	6813      	ldr	r3, [r2, #0]
    2074:	b943      	cbnz	r3, 2088 <rt_timer_insert+0x1c>
    2076:	6003      	str	r3, [r0, #0]
    2078:	6081      	str	r1, [r0, #8]
    207a:	b113      	cbz	r3, 2082 <rt_timer_insert+0x16>
    207c:	689d      	ldr	r5, [r3, #8]
    207e:	1a69      	subs	r1, r5, r1
    2080:	6099      	str	r1, [r3, #8]
    2082:	b144      	cbz	r4, 2096 <rt_timer_insert+0x2a>
    2084:	6020      	str	r0, [r4, #0]
    2086:	bd30      	pop	{r4, r5, pc}
    2088:	689d      	ldr	r5, [r3, #8]
    208a:	42a9      	cmp	r1, r5
    208c:	d3f3      	bcc.n	2076 <rt_timer_insert+0xa>
    208e:	461c      	mov	r4, r3
    2090:	1b49      	subs	r1, r1, r5
    2092:	681b      	ldr	r3, [r3, #0]
    2094:	e7ee      	b.n	2074 <rt_timer_insert+0x8>
    2096:	6010      	str	r0, [r2, #0]
    2098:	bd30      	pop	{r4, r5, pc}
    209a:	bf00      	nop
    209c:	100025c8 	.word	0x100025c8

000020a0 <rt_ms2tick>:
    20a0:	b1c0      	cbz	r0, 20d4 <rt_ms2tick+0x34>
    20a2:	1c43      	adds	r3, r0, #1
    20a4:	d011      	beq.n	20ca <rt_ms2tick+0x2a>
    20a6:	4b0c      	ldr	r3, [pc, #48]	; (20d8 <rt_ms2tick+0x38>)
    20a8:	4298      	cmp	r0, r3
    20aa:	d811      	bhi.n	20d0 <rt_ms2tick+0x30>
    20ac:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
    20b0:	4b0a      	ldr	r3, [pc, #40]	; (20dc <rt_ms2tick+0x3c>)
    20b2:	681b      	ldr	r3, [r3, #0]
    20b4:	1e5a      	subs	r2, r3, #1
    20b6:	fb01 2000 	mla	r0, r1, r0, r2
    20ba:	fbb0 f3f3 	udiv	r3, r0, r3
    20be:	f64f 70fe 	movw	r0, #65534	; 0xfffe
    20c2:	4283      	cmp	r3, r0
    20c4:	d806      	bhi.n	20d4 <rt_ms2tick+0x34>
    20c6:	b298      	uxth	r0, r3
    20c8:	4770      	bx	lr
    20ca:	f64f 70ff 	movw	r0, #65535	; 0xffff
    20ce:	4770      	bx	lr
    20d0:	f64f 70fe 	movw	r0, #65534	; 0xfffe
    20d4:	4770      	bx	lr
    20d6:	bf00      	nop
    20d8:	003d0900 	.word	0x003d0900
    20dc:	00004e50 	.word	0x00004e50

000020e0 <rt_tid2ptcb>:
    20e0:	b138      	cbz	r0, 20f2 <rt_tid2ptcb+0x12>
    20e2:	0783      	lsls	r3, r0, #30
    20e4:	d104      	bne.n	20f0 <rt_tid2ptcb+0x10>
    20e6:	7803      	ldrb	r3, [r0, #0]
    20e8:	2b00      	cmp	r3, #0
    20ea:	bf18      	it	ne
    20ec:	2000      	movne	r0, #0
    20ee:	4770      	bx	lr
    20f0:	2000      	movs	r0, #0
    20f2:	4770      	bx	lr

000020f4 <svcKernelStart>:
    20f4:	b5b0      	push	{r4, r5, r7, lr}
    20f6:	4d0e      	ldr	r5, [pc, #56]	; (2130 <svcKernelStart+0x3c>)
    20f8:	af00      	add	r7, sp, #0
    20fa:	7828      	ldrb	r0, [r5, #0]
    20fc:	b9a8      	cbnz	r0, 212a <svcKernelStart+0x36>
    20fe:	4c0d      	ldr	r4, [pc, #52]	; (2134 <svcKernelStart+0x40>)
    2100:	6823      	ldr	r3, [r4, #0]
    2102:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
    2106:	f000 fb4f 	bl	27a8 <rt_tsk_prio>
    210a:	6823      	ldr	r3, [r4, #0]
    210c:	78da      	ldrb	r2, [r3, #3]
    210e:	2aff      	cmp	r2, #255	; 0xff
    2110:	d103      	bne.n	211a <svcKernelStart+0x26>
    2112:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    2114:	3220      	adds	r2, #32
    2116:	f382 8809 	msr	PSP, r2
    211a:	6862      	ldr	r2, [r4, #4]
    211c:	b90a      	cbnz	r2, 2122 <svcKernelStart+0x2e>
    211e:	e884 000c 	stmia.w	r4, {r2, r3}
    2122:	f000 fcf9 	bl	2b18 <rt_sys_start>
    2126:	2301      	movs	r3, #1
    2128:	702b      	strb	r3, [r5, #0]
    212a:	2000      	movs	r0, #0
    212c:	bdb0      	pop	{r4, r5, r7, pc}
    212e:	bf00      	nop
    2130:	100025c5 	.word	0x100025c5
    2134:	100025cc 	.word	0x100025cc

00002138 <svcKernelRunning>:
    2138:	4b01      	ldr	r3, [pc, #4]	; (2140 <svcKernelRunning+0x8>)
    213a:	7818      	ldrb	r0, [r3, #0]
    213c:	4770      	bx	lr
    213e:	bf00      	nop
    2140:	100025c5 	.word	0x100025c5

00002144 <osKernelRunning>:
    2144:	b510      	push	{r4, lr}
    2146:	f3ef 8410 	mrs	r4, PRIMASK
    214a:	b934      	cbnz	r4, 215a <osKernelRunning+0x16>
    214c:	f3ef 8405 	mrs	r4, IPSR
    2150:	b91c      	cbnz	r4, 215a <osKernelRunning+0x16>
    2152:	f3ef 8414 	mrs	r4, CONTROL
    2156:	07e4      	lsls	r4, r4, #31
    2158:	d402      	bmi.n	2160 <osKernelRunning+0x1c>
    215a:	4b03      	ldr	r3, [pc, #12]	; (2168 <osKernelRunning+0x24>)
    215c:	7818      	ldrb	r0, [r3, #0]
    215e:	bd10      	pop	{r4, pc}
    2160:	f8df c008 	ldr.w	r12, [pc, #8]	; 216c <osKernelRunning+0x28>
    2164:	df00      	svc	0
    2166:	bd10      	pop	{r4, pc}
    2168:	100025c5 	.word	0x100025c5
    216c:	00002139 	.word	0x00002139

00002170 <osKernelStart>:
    2170:	b590      	push	{r4, r7, lr}
    2172:	b089      	sub	sp, #36	; 0x24
    2174:	af00      	add	r7, sp, #0
    2176:	f3ef 8310 	mrs	r3, PRIMASK
    217a:	2b00      	cmp	r3, #0
    217c:	d137      	bne.n	21ee <osKernelStart+0x7e>
    217e:	f3ef 8305 	mrs	r3, IPSR
    2182:	2b00      	cmp	r3, #0
    2184:	d133      	bne.n	21ee <osKernelStart+0x7e>
    2186:	f7ff ffdd 	bl	2144 <osKernelRunning>
    218a:	b928      	cbnz	r0, 2198 <osKernelStart+0x28>
    218c:	4c19      	ldr	r4, [pc, #100]	; (21f4 <osKernelStart+0x84>)
    218e:	6824      	ldr	r4, [r4, #0]
    2190:	b114      	cbz	r4, 2198 <osKernelStart+0x28>
    2192:	6864      	ldr	r4, [r4, #4]
    2194:	b104      	cbz	r4, 2198 <osKernelStart+0x28>
    2196:	47a0      	blx	r4
    2198:	f3ef 8414 	mrs	r4, CONTROL
    219c:	f004 0403 	and.w	r4, r4, #3
    21a0:	2c02      	cmp	r4, #2
    21a2:	d018      	beq.n	21d6 <osKernelStart+0x66>
    21a4:	2c03      	cmp	r4, #3
    21a6:	d01c      	beq.n	21e2 <osKernelStart+0x72>
    21a8:	2c01      	cmp	r4, #1
    21aa:	d01e      	beq.n	21ea <osKernelStart+0x7a>
    21ac:	f107 0420 	add.w	r4, r7, #32
    21b0:	f384 8809 	msr	PSP, r4
    21b4:	4c10      	ldr	r4, [pc, #64]	; (21f8 <osKernelStart+0x88>)
    21b6:	7824      	ldrb	r4, [r4, #0]
    21b8:	07e4      	lsls	r4, r4, #31
    21ba:	d510      	bpl.n	21de <osKernelStart+0x6e>
    21bc:	2402      	movs	r4, #2
    21be:	f384 8814 	msr	CONTROL, r4
    21c2:	f3bf 8f4f 	dsb	sy
    21c6:	f3bf 8f6f 	isb	sy
    21ca:	f8df c030 	ldr.w	r12, [pc, #48]	; 21fc <osKernelStart+0x8c>
    21ce:	df00      	svc	0
    21d0:	3724      	adds	r7, #36	; 0x24
    21d2:	46bd      	mov	sp, r7
    21d4:	bd90      	pop	{r4, r7, pc}
    21d6:	4c08      	ldr	r4, [pc, #32]	; (21f8 <osKernelStart+0x88>)
    21d8:	7824      	ldrb	r4, [r4, #0]
    21da:	07e4      	lsls	r4, r4, #31
    21dc:	d4f5      	bmi.n	21ca <osKernelStart+0x5a>
    21de:	2403      	movs	r4, #3
    21e0:	e7ed      	b.n	21be <osKernelStart+0x4e>
    21e2:	4c05      	ldr	r4, [pc, #20]	; (21f8 <osKernelStart+0x88>)
    21e4:	7824      	ldrb	r4, [r4, #0]
    21e6:	07e4      	lsls	r4, r4, #31
    21e8:	d5ef      	bpl.n	21ca <osKernelStart+0x5a>
    21ea:	20ff      	movs	r0, #255	; 0xff
    21ec:	e7f0      	b.n	21d0 <osKernelStart+0x60>
    21ee:	2082      	movs	r0, #130	; 0x82
    21f0:	e7ee      	b.n	21d0 <osKernelStart+0x60>
    21f2:	bf00      	nop
    21f4:	100025b4 	.word	0x100025b4
    21f8:	00004e7e 	.word	0x00004e7e
    21fc:	000020f5 	.word	0x000020f5

00002200 <svcThreadCreate>:
    2200:	b570      	push	{r4, r5, r6, lr}
    2202:	460b      	mov	r3, r1
    2204:	4616      	mov	r6, r2
    2206:	4602      	mov	r2, r0
    2208:	b910      	cbnz	r0, 2210 <svcThreadCreate+0x10>
    220a:	2400      	movs	r4, #0
    220c:	4620      	mov	r0, r4
    220e:	bd70      	pop	{r4, r5, r6, pc}
    2210:	6800      	ldr	r0, [r0, #0]
    2212:	2800      	cmp	r0, #0
    2214:	d0f9      	beq.n	220a <svcThreadCreate+0xa>
    2216:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
    221a:	1ce5      	adds	r5, r4, #3
    221c:	b2ad      	uxth	r5, r5
    221e:	2d06      	cmp	r5, #6
    2220:	d8f3      	bhi.n	220a <svcThreadCreate+0xa>
    2222:	68d1      	ldr	r1, [r2, #12]
    2224:	b1c1      	cbz	r1, 2258 <svcThreadCreate+0x58>
    2226:	6912      	ldr	r2, [r2, #16]
    2228:	3404      	adds	r4, #4
    222a:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
    222e:	f000 faf9 	bl	2824 <rt_tsk_create>
    2232:	2800      	cmp	r0, #0
    2234:	d0e9      	beq.n	220a <svcThreadCreate+0xa>
    2236:	4b0a      	ldr	r3, [pc, #40]	; (2260 <svcThreadCreate+0x60>)
    2238:	3801      	subs	r0, #1
    223a:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
    223e:	4a09      	ldr	r2, [pc, #36]	; (2264 <svcThreadCreate+0x64>)
    2240:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    2242:	635a      	str	r2, [r3, #52]	; 0x34
    2244:	4b08      	ldr	r3, [pc, #32]	; (2268 <svcThreadCreate+0x68>)
    2246:	681b      	ldr	r3, [r3, #0]
    2248:	b143      	cbz	r3, 225c <svcThreadCreate+0x5c>
    224a:	689b      	ldr	r3, [r3, #8]
    224c:	b133      	cbz	r3, 225c <svcThreadCreate+0x5c>
    224e:	4631      	mov	r1, r6
    2250:	78e0      	ldrb	r0, [r4, #3]
    2252:	4798      	blx	r3
    2254:	63e0      	str	r0, [r4, #60]	; 0x3c
    2256:	e7d9      	b.n	220c <svcThreadCreate+0xc>
    2258:	460a      	mov	r2, r1
    225a:	e7e5      	b.n	2228 <svcThreadCreate+0x28>
    225c:	63e6      	str	r6, [r4, #60]	; 0x3c
    225e:	e7d5      	b.n	220c <svcThreadCreate+0xc>
    2260:	10001dc8 	.word	0x10001dc8
    2264:	000023ed 	.word	0x000023ed
    2268:	100025b4 	.word	0x100025b4

0000226c <svcThreadGetId>:
    226c:	b508      	push	{r3, lr}
    226e:	f000 fa93 	bl	2798 <rt_tsk_self>
    2272:	b118      	cbz	r0, 227c <svcThreadGetId+0x10>
    2274:	4b02      	ldr	r3, [pc, #8]	; (2280 <svcThreadGetId+0x14>)
    2276:	3801      	subs	r0, #1
    2278:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    227c:	bd08      	pop	{r3, pc}
    227e:	bf00      	nop
    2280:	10001dc8 	.word	0x10001dc8

00002284 <svcThreadTerminate>:
    2284:	b510      	push	{r4, lr}
    2286:	f7ff ff2b 	bl	20e0 <rt_tid2ptcb>
    228a:	4604      	mov	r4, r0
    228c:	b170      	cbz	r0, 22ac <svcThreadTerminate+0x28>
    228e:	4b08      	ldr	r3, [pc, #32]	; (22b0 <svcThreadTerminate+0x2c>)
    2290:	681b      	ldr	r3, [r3, #0]
    2292:	b11b      	cbz	r3, 229c <svcThreadTerminate+0x18>
    2294:	68db      	ldr	r3, [r3, #12]
    2296:	b10b      	cbz	r3, 229c <svcThreadTerminate+0x18>
    2298:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
    229a:	4798      	blx	r3
    229c:	78e0      	ldrb	r0, [r4, #3]
    229e:	f000 fb17 	bl	28d0 <rt_tsk_delete>
    22a2:	28ff      	cmp	r0, #255	; 0xff
    22a4:	bf0c      	ite	eq
    22a6:	2081      	moveq	r0, #129	; 0x81
    22a8:	2000      	movne	r0, #0
    22aa:	bd10      	pop	{r4, pc}
    22ac:	2080      	movs	r0, #128	; 0x80
    22ae:	bd10      	pop	{r4, pc}
    22b0:	100025b4 	.word	0x100025b4

000022b4 <svcDelay>:
    22b4:	b508      	push	{r3, lr}
    22b6:	b128      	cbz	r0, 22c4 <svcDelay+0x10>
    22b8:	f7ff fef2 	bl	20a0 <rt_ms2tick>
    22bc:	f000 fd18 	bl	2cf0 <rt_dly_wait>
    22c0:	2040      	movs	r0, #64	; 0x40
    22c2:	bd08      	pop	{r3, pc}
    22c4:	bd08      	pop	{r3, pc}
	...

000022c8 <osDelay>:
    22c8:	b510      	push	{r4, lr}
    22ca:	f3ef 8410 	mrs	r4, PRIMASK
    22ce:	b934      	cbnz	r4, 22de <osDelay+0x16>
    22d0:	f3ef 8405 	mrs	r4, IPSR
    22d4:	b91c      	cbnz	r4, 22de <osDelay+0x16>
    22d6:	f8df c00c 	ldr.w	r12, [pc, #12]	; 22e4 <osDelay+0x1c>
    22da:	df00      	svc	0
    22dc:	bd10      	pop	{r4, pc}
    22de:	2082      	movs	r0, #130	; 0x82
    22e0:	bd10      	pop	{r4, pc}
    22e2:	0000      	.short	0x0000
    22e4:	000022b5 	.word	0x000022b5

000022e8 <svcTimerCall>:
    22e8:	0783      	lsls	r3, r0, #30
    22ea:	d105      	bne.n	22f8 <svcTimerCall+0x10>
    22ec:	b138      	cbz	r0, 22fe <svcTimerCall+0x16>
    22ee:	6943      	ldr	r3, [r0, #20]
    22f0:	6901      	ldr	r1, [r0, #16]
    22f2:	681b      	ldr	r3, [r3, #0]
    22f4:	4618      	mov	r0, r3
    22f6:	4770      	bx	lr
    22f8:	2300      	movs	r3, #0
    22fa:	4619      	mov	r1, r3
    22fc:	e7fa      	b.n	22f4 <svcTimerCall+0xc>
    22fe:	4603      	mov	r3, r0
    2300:	e7fb      	b.n	22fa <svcTimerCall+0x12>
	...

00002304 <osTimerCall>:
    2304:	b510      	push	{r4, lr}
    2306:	4604      	mov	r4, r0
    2308:	4608      	mov	r0, r1
    230a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 2318 <osTimerCall+0x14>
    230e:	df00      	svc	0
    2310:	e884 0003 	stmia.w	r4, {r0, r1}
    2314:	4620      	mov	r0, r4
    2316:	bd10      	pop	{r4, pc}
    2318:	000022e9 	.word	0x000022e9

0000231c <svcMutexCreate>:
    231c:	b510      	push	{r4, lr}
    231e:	b148      	cbz	r0, 2334 <svcMutexCreate+0x18>
    2320:	6804      	ldr	r4, [r0, #0]
    2322:	b124      	cbz	r4, 232e <svcMutexCreate+0x12>
    2324:	7823      	ldrb	r3, [r4, #0]
    2326:	b923      	cbnz	r3, 2332 <svcMutexCreate+0x16>
    2328:	4620      	mov	r0, r4
    232a:	f000 fc3b 	bl	2ba4 <rt_mut_init>
    232e:	4620      	mov	r0, r4
    2330:	bd10      	pop	{r4, pc}
    2332:	2000      	movs	r0, #0
    2334:	bd10      	pop	{r4, pc}

00002336 <svcMutexWait>:
    2336:	b570      	push	{r4, r5, r6, lr}
    2338:	f010 0403 	ands.w	r4, r0, #3
    233c:	4605      	mov	r5, r0
    233e:	460e      	mov	r6, r1
    2340:	d111      	bne.n	2366 <svcMutexWait+0x30>
    2342:	b180      	cbz	r0, 2366 <svcMutexWait+0x30>
    2344:	7803      	ldrb	r3, [r0, #0]
    2346:	2b03      	cmp	r3, #3
    2348:	d10d      	bne.n	2366 <svcMutexWait+0x30>
    234a:	4608      	mov	r0, r1
    234c:	f7ff fea8 	bl	20a0 <rt_ms2tick>
    2350:	4601      	mov	r1, r0
    2352:	4628      	mov	r0, r5
    2354:	f000 fc9e 	bl	2c94 <rt_mut_wait>
    2358:	2801      	cmp	r0, #1
    235a:	d106      	bne.n	236a <svcMutexWait+0x34>
    235c:	2e00      	cmp	r6, #0
    235e:	bf14      	ite	ne
    2360:	20c1      	movne	r0, #193	; 0xc1
    2362:	2081      	moveq	r0, #129	; 0x81
    2364:	bd70      	pop	{r4, r5, r6, pc}
    2366:	2080      	movs	r0, #128	; 0x80
    2368:	bd70      	pop	{r4, r5, r6, pc}
    236a:	4620      	mov	r0, r4
    236c:	bd70      	pop	{r4, r5, r6, pc}

0000236e <svcMutexRelease>:
    236e:	0782      	lsls	r2, r0, #30
    2370:	b508      	push	{r3, lr}
    2372:	d10a      	bne.n	238a <svcMutexRelease+0x1c>
    2374:	b148      	cbz	r0, 238a <svcMutexRelease+0x1c>
    2376:	7803      	ldrb	r3, [r0, #0]
    2378:	2b03      	cmp	r3, #3
    237a:	d106      	bne.n	238a <svcMutexRelease+0x1c>
    237c:	f000 fc1a 	bl	2bb4 <rt_mut_release>
    2380:	28ff      	cmp	r0, #255	; 0xff
    2382:	bf0c      	ite	eq
    2384:	2081      	moveq	r0, #129	; 0x81
    2386:	2000      	movne	r0, #0
    2388:	bd08      	pop	{r3, pc}
    238a:	2080      	movs	r0, #128	; 0x80
    238c:	bd08      	pop	{r3, pc}
	...

00002390 <osMutexCreate>:
    2390:	b570      	push	{r4, r5, r6, lr}
    2392:	4605      	mov	r5, r0
    2394:	f3ef 8410 	mrs	r4, PRIMASK
    2398:	b994      	cbnz	r4, 23c0 <osMutexCreate+0x30>
    239a:	f3ef 8605 	mrs	r6, IPSR
    239e:	b97e      	cbnz	r6, 23c0 <osMutexCreate+0x30>
    23a0:	f3ef 8414 	mrs	r4, CONTROL
    23a4:	07e4      	lsls	r4, r4, #31
    23a6:	d406      	bmi.n	23b6 <osMutexCreate+0x26>
    23a8:	4c06      	ldr	r4, [pc, #24]	; (23c4 <osMutexCreate+0x34>)
    23aa:	7824      	ldrb	r4, [r4, #0]
    23ac:	b91c      	cbnz	r4, 23b6 <osMutexCreate+0x26>
    23ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    23b2:	f7ff bfb3 	b.w	231c <svcMutexCreate>
    23b6:	4628      	mov	r0, r5
    23b8:	f8df c00c 	ldr.w	r12, [pc, #12]	; 23c8 <osMutexCreate+0x38>
    23bc:	df00      	svc	0
    23be:	bd70      	pop	{r4, r5, r6, pc}
    23c0:	2000      	movs	r0, #0
    23c2:	bd70      	pop	{r4, r5, r6, pc}
    23c4:	100025c5 	.word	0x100025c5
    23c8:	0000231d 	.word	0x0000231d

000023cc <osMutexWait>:
    23cc:	b510      	push	{r4, lr}
    23ce:	f3ef 8410 	mrs	r4, PRIMASK
    23d2:	b934      	cbnz	r4, 23e2 <osMutexWait+0x16>
    23d4:	f3ef 8405 	mrs	r4, IPSR
    23d8:	b91c      	cbnz	r4, 23e2 <osMutexWait+0x16>
    23da:	f8df c00c 	ldr.w	r12, [pc, #12]	; 23e8 <osMutexWait+0x1c>
    23de:	df00      	svc	0
    23e0:	bd10      	pop	{r4, pc}
    23e2:	2082      	movs	r0, #130	; 0x82
    23e4:	bd10      	pop	{r4, pc}
    23e6:	0000      	.short	0x0000
    23e8:	00002337 	.word	0x00002337

000023ec <osThreadExit>:
    23ec:	4808      	ldr	r0, [pc, #32]	; (2410 <osThreadExit+0x24>)
    23ee:	b508      	push	{r3, lr}
    23f0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    23f4:	6800      	ldr	r0, [r0, #0]
    23f6:	f7ff ffe9 	bl	23cc <osMutexWait>
    23fa:	f8df c018 	ldr.w	r12, [pc, #24]	; 2414 <osThreadExit+0x28>
    23fe:	df00      	svc	0
    2400:	4604      	mov	r4, r0
    2402:	f7ff fa69 	bl	18d8 <sysThreadTerminate>
    2406:	4620      	mov	r0, r4
    2408:	f8df c00c 	ldr.w	r12, [pc, #12]	; 2418 <osThreadExit+0x2c>
    240c:	df00      	svc	0
    240e:	e7fe      	b.n	240e <osThreadExit+0x22>
    2410:	100025c0 	.word	0x100025c0
    2414:	0000226d 	.word	0x0000226d
    2418:	00002285 	.word	0x00002285

0000241c <osMutexRelease>:
    241c:	b510      	push	{r4, lr}
    241e:	f3ef 8410 	mrs	r4, PRIMASK
    2422:	b934      	cbnz	r4, 2432 <osMutexRelease+0x16>
    2424:	f3ef 8405 	mrs	r4, IPSR
    2428:	b91c      	cbnz	r4, 2432 <osMutexRelease+0x16>
    242a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 2438 <osMutexRelease+0x1c>
    242e:	df00      	svc	0
    2430:	bd10      	pop	{r4, pc}
    2432:	2082      	movs	r0, #130	; 0x82
    2434:	bd10      	pop	{r4, pc}
    2436:	0000      	.short	0x0000
    2438:	0000236f 	.word	0x0000236f

0000243c <osThreadContextCreate>:
    243c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2440:	4680      	mov	r8, r0
    2442:	460f      	mov	r7, r1
    2444:	4616      	mov	r6, r2
    2446:	f3ef 8410 	mrs	r4, PRIMASK
    244a:	bb04      	cbnz	r4, 248e <osThreadContextCreate+0x52>
    244c:	f3ef 8305 	mrs	r3, IPSR
    2450:	b9d3      	cbnz	r3, 2488 <osThreadContextCreate+0x4c>
    2452:	f3ef 8314 	mrs	r3, CONTROL
    2456:	07db      	lsls	r3, r3, #31
    2458:	d406      	bmi.n	2468 <osThreadContextCreate+0x2c>
    245a:	4b0e      	ldr	r3, [pc, #56]	; (2494 <osThreadContextCreate+0x58>)
    245c:	781b      	ldrb	r3, [r3, #0]
    245e:	b91b      	cbnz	r3, 2468 <osThreadContextCreate+0x2c>
    2460:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    2464:	f7ff becc 	b.w	2200 <svcThreadCreate>
    2468:	4d0b      	ldr	r5, [pc, #44]	; (2498 <osThreadContextCreate+0x5c>)
    246a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    246e:	6828      	ldr	r0, [r5, #0]
    2470:	f7ff ffac 	bl	23cc <osMutexWait>
    2474:	4640      	mov	r0, r8
    2476:	4639      	mov	r1, r7
    2478:	4632      	mov	r2, r6
    247a:	f8df c020 	ldr.w	r12, [pc, #32]	; 249c <osThreadContextCreate+0x60>
    247e:	df00      	svc	0
    2480:	4604      	mov	r4, r0
    2482:	6828      	ldr	r0, [r5, #0]
    2484:	f7ff ffca 	bl	241c <osMutexRelease>
    2488:	4620      	mov	r0, r4
    248a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    248e:	2400      	movs	r4, #0
    2490:	e7fa      	b.n	2488 <osThreadContextCreate+0x4c>
    2492:	bf00      	nop
    2494:	100025c5 	.word	0x100025c5
    2498:	100025c0 	.word	0x100025c0
    249c:	00002201 	.word	0x00002201

000024a0 <osThreadCreate>:
    24a0:	2200      	movs	r2, #0
    24a2:	f7ff bfcb 	b.w	243c <osThreadContextCreate>

000024a6 <svcMessageCreate>:
    24a6:	b510      	push	{r4, lr}
    24a8:	4604      	mov	r4, r0
    24aa:	b160      	cbz	r0, 24c6 <svcMessageCreate+0x20>
    24ac:	6801      	ldr	r1, [r0, #0]
    24ae:	b151      	cbz	r1, 24c6 <svcMessageCreate+0x20>
    24b0:	6840      	ldr	r0, [r0, #4]
    24b2:	b148      	cbz	r0, 24c8 <svcMessageCreate+0x22>
    24b4:	7803      	ldrb	r3, [r0, #0]
    24b6:	b933      	cbnz	r3, 24c6 <svcMessageCreate+0x20>
    24b8:	3104      	adds	r1, #4
    24ba:	0089      	lsls	r1, r1, #2
    24bc:	b289      	uxth	r1, r1
    24be:	f7ff fc72 	bl	1da6 <rt_mbx_init>
    24c2:	6860      	ldr	r0, [r4, #4]
    24c4:	bd10      	pop	{r4, pc}
    24c6:	2000      	movs	r0, #0
    24c8:	bd10      	pop	{r4, pc}
	...

000024cc <svcKernelInitialize>:
    24cc:	b538      	push	{r3, r4, r5, lr}
    24ce:	4c11      	ldr	r4, [pc, #68]	; (2514 <svcKernelInitialize+0x48>)
    24d0:	7823      	ldrb	r3, [r4, #0]
    24d2:	b90b      	cbnz	r3, 24d8 <svcKernelInitialize+0xc>
    24d4:	f000 faa6 	bl	2a24 <rt_sys_init>
    24d8:	22ff      	movs	r2, #255	; 0xff
    24da:	4b0f      	ldr	r3, [pc, #60]	; (2518 <svcKernelInitialize+0x4c>)
    24dc:	7825      	ldrb	r5, [r4, #0]
    24de:	681b      	ldr	r3, [r3, #0]
    24e0:	709a      	strb	r2, [r3, #2]
    24e2:	b98d      	cbnz	r5, 2508 <svcKernelInitialize+0x3c>
    24e4:	4629      	mov	r1, r5
    24e6:	480d      	ldr	r0, [pc, #52]	; (251c <svcKernelInitialize+0x50>)
    24e8:	f7ff ffdd 	bl	24a6 <svcMessageCreate>
    24ec:	4b0c      	ldr	r3, [pc, #48]	; (2520 <svcKernelInitialize+0x54>)
    24ee:	462a      	mov	r2, r5
    24f0:	6018      	str	r0, [r3, #0]
    24f2:	4629      	mov	r1, r5
    24f4:	480b      	ldr	r0, [pc, #44]	; (2524 <svcKernelInitialize+0x58>)
    24f6:	f7ff fe83 	bl	2200 <svcThreadCreate>
    24fa:	4b0b      	ldr	r3, [pc, #44]	; (2528 <svcKernelInitialize+0x5c>)
    24fc:	6018      	str	r0, [r3, #0]
    24fe:	480b      	ldr	r0, [pc, #44]	; (252c <svcKernelInitialize+0x60>)
    2500:	f7ff ff46 	bl	2390 <osMutexCreate>
    2504:	4b0a      	ldr	r3, [pc, #40]	; (2530 <svcKernelInitialize+0x64>)
    2506:	6018      	str	r0, [r3, #0]
    2508:	2301      	movs	r3, #1
    250a:	2000      	movs	r0, #0
    250c:	7023      	strb	r3, [r4, #0]
    250e:	4b09      	ldr	r3, [pc, #36]	; (2534 <svcKernelInitialize+0x68>)
    2510:	7018      	strb	r0, [r3, #0]
    2512:	bd38      	pop	{r3, r4, r5, pc}
    2514:	100025c4 	.word	0x100025c4
    2518:	100025cc 	.word	0x100025cc
    251c:	00004e84 	.word	0x00004e84
    2520:	10001e88 	.word	0x10001e88
    2524:	00004ea0 	.word	0x00004ea0
    2528:	1000257c 	.word	0x1000257c
    252c:	00004eb8 	.word	0x00004eb8
    2530:	100025c0 	.word	0x100025c0
    2534:	100025c5 	.word	0x100025c5

00002538 <osKernelInitialize>:
    2538:	b510      	push	{r4, lr}
    253a:	f3ef 8410 	mrs	r4, PRIMASK
    253e:	b974      	cbnz	r4, 255e <osKernelInitialize+0x26>
    2540:	f3ef 8405 	mrs	r4, IPSR
    2544:	b95c      	cbnz	r4, 255e <osKernelInitialize+0x26>
    2546:	f3ef 8414 	mrs	r4, CONTROL
    254a:	07e4      	lsls	r4, r4, #31
    254c:	d403      	bmi.n	2556 <osKernelInitialize+0x1e>
    254e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    2552:	f7ff bfbb 	b.w	24cc <svcKernelInitialize>
    2556:	f8df c00c 	ldr.w	r12, [pc, #12]	; 2564 <osKernelInitialize+0x2c>
    255a:	df00      	svc	0
    255c:	bd10      	pop	{r4, pc}
    255e:	2082      	movs	r0, #130	; 0x82
    2560:	bd10      	pop	{r4, pc}
    2562:	0000      	.short	0x0000
    2564:	000024cd 	.word	0x000024cd

00002568 <svcMessageGet>:
    2568:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    256c:	460c      	mov	r4, r1
    256e:	4680      	mov	r8, r0
    2570:	b318      	cbz	r0, 25ba <svcMessageGet+0x52>
    2572:	7803      	ldrb	r3, [r0, #0]
    2574:	2b01      	cmp	r3, #1
    2576:	d125      	bne.n	25c4 <svcMessageGet+0x5c>
    2578:	4608      	mov	r0, r1
    257a:	f7ff fd91 	bl	20a0 <rt_ms2tick>
    257e:	a902      	add	r1, sp, #8
    2580:	4602      	mov	r2, r0
    2582:	4640      	mov	r0, r8
    2584:	f7ff fc1c 	bl	1dc0 <rt_mbx_wait>
    2588:	2801      	cmp	r0, #1
    258a:	d111      	bne.n	25b0 <svcMessageGet+0x48>
    258c:	2000      	movs	r0, #0
    258e:	2c00      	cmp	r4, #0
    2590:	4602      	mov	r2, r0
    2592:	4603      	mov	r3, r0
    2594:	bf18      	it	ne
    2596:	2040      	movne	r0, #64	; 0x40
    2598:	9902      	ldr	r1, [sp, #8]
    259a:	4604      	mov	r4, r0
    259c:	460d      	mov	r5, r1
    259e:	4616      	mov	r6, r2
    25a0:	461f      	mov	r7, r3
    25a2:	4620      	mov	r0, r4
    25a4:	4629      	mov	r1, r5
    25a6:	4632      	mov	r2, r6
    25a8:	463b      	mov	r3, r7
    25aa:	b004      	add	sp, #16
    25ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    25b0:	2000      	movs	r0, #0
    25b2:	4602      	mov	r2, r0
    25b4:	4603      	mov	r3, r0
    25b6:	2010      	movs	r0, #16
    25b8:	e7ee      	b.n	2598 <svcMessageGet+0x30>
    25ba:	2480      	movs	r4, #128	; 0x80
    25bc:	4605      	mov	r5, r0
    25be:	4606      	mov	r6, r0
    25c0:	4607      	mov	r7, r0
    25c2:	e7ee      	b.n	25a2 <svcMessageGet+0x3a>
    25c4:	2500      	movs	r5, #0
    25c6:	2480      	movs	r4, #128	; 0x80
    25c8:	462e      	mov	r6, r5
    25ca:	462f      	mov	r7, r5
    25cc:	e7e9      	b.n	25a2 <svcMessageGet+0x3a>

000025ce <isrMessagePut>:
    25ce:	b570      	push	{r4, r5, r6, lr}
    25d0:	460e      	mov	r6, r1
    25d2:	4614      	mov	r4, r2
    25d4:	4605      	mov	r5, r0
    25d6:	b160      	cbz	r0, 25f2 <isrMessagePut+0x24>
    25d8:	b95a      	cbnz	r2, 25f2 <isrMessagePut+0x24>
    25da:	7803      	ldrb	r3, [r0, #0]
    25dc:	2b01      	cmp	r3, #1
    25de:	d108      	bne.n	25f2 <isrMessagePut+0x24>
    25e0:	f7ff fc44 	bl	1e6c <rt_mbx_check>
    25e4:	b138      	cbz	r0, 25f6 <isrMessagePut+0x28>
    25e6:	4628      	mov	r0, r5
    25e8:	4631      	mov	r1, r6
    25ea:	f7ff fc43 	bl	1e74 <isr_mbx_send>
    25ee:	4620      	mov	r0, r4
    25f0:	bd70      	pop	{r4, r5, r6, pc}
    25f2:	2080      	movs	r0, #128	; 0x80
    25f4:	bd70      	pop	{r4, r5, r6, pc}
    25f6:	2081      	movs	r0, #129	; 0x81
    25f8:	bd70      	pop	{r4, r5, r6, pc}
	...

000025fc <sysTimerTick>:
    25fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    25fe:	4e11      	ldr	r6, [pc, #68]	; (2644 <sysTimerTick+0x48>)
    2600:	6834      	ldr	r4, [r6, #0]
    2602:	b12c      	cbz	r4, 2610 <sysTimerTick+0x14>
    2604:	68a3      	ldr	r3, [r4, #8]
    2606:	4f10      	ldr	r7, [pc, #64]	; (2648 <sysTimerTick+0x4c>)
    2608:	3b01      	subs	r3, #1
    260a:	60a3      	str	r3, [r4, #8]
    260c:	68a2      	ldr	r2, [r4, #8]
    260e:	b102      	cbz	r2, 2612 <sysTimerTick+0x16>
    2610:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2612:	6825      	ldr	r5, [r4, #0]
    2614:	4621      	mov	r1, r4
    2616:	6838      	ldr	r0, [r7, #0]
    2618:	6035      	str	r5, [r6, #0]
    261a:	f7ff ffd8 	bl	25ce <isrMessagePut>
    261e:	b110      	cbz	r0, 2626 <sysTimerTick+0x2a>
    2620:	2004      	movs	r0, #4
    2622:	f7ff f94b 	bl	18bc <os_error>
    2626:	7963      	ldrb	r3, [r4, #5]
    2628:	2b01      	cmp	r3, #1
    262a:	d107      	bne.n	263c <sysTimerTick+0x40>
    262c:	68e1      	ldr	r1, [r4, #12]
    262e:	4620      	mov	r0, r4
    2630:	f7ff fd1c 	bl	206c <rt_timer_insert>
    2634:	2d00      	cmp	r5, #0
    2636:	d0eb      	beq.n	2610 <sysTimerTick+0x14>
    2638:	462c      	mov	r4, r5
    263a:	e7e7      	b.n	260c <sysTimerTick+0x10>
    263c:	2301      	movs	r3, #1
    263e:	7123      	strb	r3, [r4, #4]
    2640:	e7f8      	b.n	2634 <sysTimerTick+0x38>
    2642:	bf00      	nop
    2644:	100025c8 	.word	0x100025c8
    2648:	10001e88 	.word	0x10001e88

0000264c <isrMessageGet>:
    264c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    264e:	4604      	mov	r4, r0
    2650:	4616      	mov	r6, r2
    2652:	4608      	mov	r0, r1
    2654:	b101      	cbz	r1, 2658 <isrMessageGet+0xc>
    2656:	b122      	cbz	r2, 2662 <isrMessageGet+0x16>
    2658:	2380      	movs	r3, #128	; 0x80
    265a:	6023      	str	r3, [r4, #0]
    265c:	4620      	mov	r0, r4
    265e:	b004      	add	sp, #16
    2660:	bd70      	pop	{r4, r5, r6, pc}
    2662:	780b      	ldrb	r3, [r1, #0]
    2664:	2b01      	cmp	r3, #1
    2666:	d1f7      	bne.n	2658 <isrMessageGet+0xc>
    2668:	a902      	add	r1, sp, #8
    266a:	f7ff fc0a 	bl	1e82 <isr_mbx_receive>
    266e:	2804      	cmp	r0, #4
    2670:	bf08      	it	eq
    2672:	2310      	moveq	r3, #16
    2674:	ad01      	add	r5, sp, #4
    2676:	bf14      	ite	ne
    2678:	9601      	strne	r6, [sp, #4]
    267a:	9301      	streq	r3, [sp, #4]
    267c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    2680:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    2684:	e7ea      	b.n	265c <isrMessageGet+0x10>
	...

00002688 <osMessageGet>:
    2688:	b538      	push	{r3, r4, r5, lr}
    268a:	4604      	mov	r4, r0
    268c:	4615      	mov	r5, r2
    268e:	f3ef 8010 	mrs	r0, PRIMASK
    2692:	b910      	cbnz	r0, 269a <osMessageGet+0x12>
    2694:	f3ef 8005 	mrs	r0, IPSR
    2698:	b128      	cbz	r0, 26a6 <osMessageGet+0x1e>
    269a:	462a      	mov	r2, r5
    269c:	4620      	mov	r0, r4
    269e:	f7ff ffd5 	bl	264c <isrMessageGet>
    26a2:	4620      	mov	r0, r4
    26a4:	bd38      	pop	{r3, r4, r5, pc}
    26a6:	4608      	mov	r0, r1
    26a8:	4611      	mov	r1, r2
    26aa:	f8df c00c 	ldr.w	r12, [pc, #12]	; 26b8 <osMessageGet+0x30>
    26ae:	df00      	svc	0
    26b0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    26b4:	e7f5      	b.n	26a2 <osMessageGet+0x1a>
    26b6:	0000      	.short	0x0000
    26b8:	00002569 	.word	0x00002569

000026bc <osTimerThread>:
    26bc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    26be:	4c0a      	ldr	r4, [pc, #40]	; (26e8 <osTimerThread+0x2c>)
    26c0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    26c4:	6821      	ldr	r1, [r4, #0]
    26c6:	a803      	add	r0, sp, #12
    26c8:	f7ff ffde 	bl	2688 <osMessageGet>
    26cc:	9b03      	ldr	r3, [sp, #12]
    26ce:	2b10      	cmp	r3, #16
    26d0:	d1f6      	bne.n	26c0 <osTimerThread+0x4>
    26d2:	9904      	ldr	r1, [sp, #16]
    26d4:	a801      	add	r0, sp, #4
    26d6:	f7ff fe15 	bl	2304 <osTimerCall>
    26da:	9b01      	ldr	r3, [sp, #4]
    26dc:	2b00      	cmp	r3, #0
    26de:	d0ef      	beq.n	26c0 <osTimerThread+0x4>
    26e0:	9802      	ldr	r0, [sp, #8]
    26e2:	4798      	blx	r3
    26e4:	e7ec      	b.n	26c0 <osTimerThread+0x4>
    26e6:	bf00      	nop
    26e8:	10001e88 	.word	0x10001e88

000026ec <rt_switch_req>:
    26ec:	4b05      	ldr	r3, [pc, #20]	; (2704 <rt_switch_req+0x18>)
    26ee:	6058      	str	r0, [r3, #4]
    26f0:	2302      	movs	r3, #2
    26f2:	7043      	strb	r3, [r0, #1]
    26f4:	4b04      	ldr	r3, [pc, #16]	; (2708 <rt_switch_req+0x1c>)
    26f6:	681b      	ldr	r3, [r3, #0]
    26f8:	b11b      	cbz	r3, 2702 <rt_switch_req+0x16>
    26fa:	691b      	ldr	r3, [r3, #16]
    26fc:	b10b      	cbz	r3, 2702 <rt_switch_req+0x16>
    26fe:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
    2700:	4718      	bx	r3
    2702:	4770      	bx	lr
    2704:	100025cc 	.word	0x100025cc
    2708:	100025b4 	.word	0x100025b4

0000270c <rt_dispatch.part.0>:
    270c:	b508      	push	{r3, lr}
    270e:	4803      	ldr	r0, [pc, #12]	; (271c <rt_dispatch.part.0+0x10>)
    2710:	f7ff f93a 	bl	1988 <rt_get_first>
    2714:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    2718:	f7ff bfe8 	b.w	26ec <rt_switch_req>
    271c:	10002580 	.word	0x10002580

00002720 <rt_dispatch>:
    2720:	b570      	push	{r4, r5, r6, lr}
    2722:	4604      	mov	r4, r0
    2724:	b918      	cbnz	r0, 272e <rt_dispatch+0xe>
    2726:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    272a:	f7ff bfef 	b.w	270c <rt_dispatch.part.0>
    272e:	4e0b      	ldr	r6, [pc, #44]	; (275c <rt_dispatch+0x3c>)
    2730:	78a2      	ldrb	r2, [r4, #2]
    2732:	6830      	ldr	r0, [r6, #0]
    2734:	2501      	movs	r5, #1
    2736:	7883      	ldrb	r3, [r0, #2]
    2738:	429a      	cmp	r2, r3
    273a:	d908      	bls.n	274e <rt_dispatch+0x2e>
    273c:	f7ff f936 	bl	19ac <rt_put_rdy_first>
    2740:	6833      	ldr	r3, [r6, #0]
    2742:	4620      	mov	r0, r4
    2744:	705d      	strb	r5, [r3, #1]
    2746:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    274a:	f7ff bfcf 	b.w	26ec <rt_switch_req>
    274e:	7065      	strb	r5, [r4, #1]
    2750:	4621      	mov	r1, r4
    2752:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    2756:	4802      	ldr	r0, [pc, #8]	; (2760 <rt_dispatch+0x40>)
    2758:	f7ff b8fe 	b.w	1958 <rt_put_prio>
    275c:	100025cc 	.word	0x100025cc
    2760:	10002580 	.word	0x10002580

00002764 <rt_block>:
    2764:	b538      	push	{r3, r4, r5, lr}
    2766:	460d      	mov	r5, r1
    2768:	4601      	mov	r1, r0
    276a:	b180      	cbz	r0, 278e <rt_block+0x2a>
    276c:	f64f 73ff 	movw	r3, #65535	; 0xffff
    2770:	4298      	cmp	r0, r3
    2772:	4c07      	ldr	r4, [pc, #28]	; (2790 <rt_block+0x2c>)
    2774:	d002      	beq.n	277c <rt_block+0x18>
    2776:	6820      	ldr	r0, [r4, #0]
    2778:	f7ff f922 	bl	19c0 <rt_put_dly>
    277c:	6823      	ldr	r3, [r4, #0]
    277e:	4805      	ldr	r0, [pc, #20]	; (2794 <rt_block+0x30>)
    2780:	705d      	strb	r5, [r3, #1]
    2782:	f7ff f901 	bl	1988 <rt_get_first>
    2786:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    278a:	f7ff bfaf 	b.w	26ec <rt_switch_req>
    278e:	bd38      	pop	{r3, r4, r5, pc}
    2790:	100025cc 	.word	0x100025cc
    2794:	10002580 	.word	0x10002580

00002798 <rt_tsk_self>:
    2798:	4b02      	ldr	r3, [pc, #8]	; (27a4 <rt_tsk_self+0xc>)
    279a:	6818      	ldr	r0, [r3, #0]
    279c:	b100      	cbz	r0, 27a0 <rt_tsk_self+0x8>
    279e:	78c0      	ldrb	r0, [r0, #3]
    27a0:	4770      	bx	lr
    27a2:	bf00      	nop
    27a4:	100025cc 	.word	0x100025cc

000027a8 <rt_tsk_prio>:
    27a8:	b510      	push	{r4, lr}
    27aa:	b9a8      	cbnz	r0, 27d8 <rt_tsk_prio+0x30>
    27ac:	4b19      	ldr	r3, [pc, #100]	; (2814 <rt_tsk_prio+0x6c>)
    27ae:	681b      	ldr	r3, [r3, #0]
    27b0:	7099      	strb	r1, [r3, #2]
    27b2:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
    27b6:	4818      	ldr	r0, [pc, #96]	; (2818 <rt_tsk_prio+0x70>)
    27b8:	6843      	ldr	r3, [r0, #4]
    27ba:	789b      	ldrb	r3, [r3, #2]
    27bc:	428b      	cmp	r3, r1
    27be:	d801      	bhi.n	27c4 <rt_tsk_prio+0x1c>
    27c0:	2000      	movs	r0, #0
    27c2:	bd10      	pop	{r4, pc}
    27c4:	4c13      	ldr	r4, [pc, #76]	; (2814 <rt_tsk_prio+0x6c>)
    27c6:	6821      	ldr	r1, [r4, #0]
    27c8:	f7ff f8c6 	bl	1958 <rt_put_prio>
    27cc:	2201      	movs	r2, #1
    27ce:	6823      	ldr	r3, [r4, #0]
    27d0:	705a      	strb	r2, [r3, #1]
    27d2:	f7ff ff9b 	bl	270c <rt_dispatch.part.0>
    27d6:	e7f3      	b.n	27c0 <rt_tsk_prio+0x18>
    27d8:	4b10      	ldr	r3, [pc, #64]	; (281c <rt_tsk_prio+0x74>)
    27da:	881b      	ldrh	r3, [r3, #0]
    27dc:	4298      	cmp	r0, r3
    27de:	d817      	bhi.n	2810 <rt_tsk_prio+0x68>
    27e0:	4b0f      	ldr	r3, [pc, #60]	; (2820 <rt_tsk_prio+0x78>)
    27e2:	3801      	subs	r0, #1
    27e4:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
    27e8:	b194      	cbz	r4, 2810 <rt_tsk_prio+0x68>
    27ea:	4b0a      	ldr	r3, [pc, #40]	; (2814 <rt_tsk_prio+0x6c>)
    27ec:	70a1      	strb	r1, [r4, #2]
    27ee:	681b      	ldr	r3, [r3, #0]
    27f0:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
    27f4:	429c      	cmp	r4, r3
    27f6:	d0de      	beq.n	27b6 <rt_tsk_prio+0xe>
    27f8:	4620      	mov	r0, r4
    27fa:	f7ff f953 	bl	1aa4 <rt_resort_prio>
    27fe:	7863      	ldrb	r3, [r4, #1]
    2800:	2b01      	cmp	r3, #1
    2802:	d1dd      	bne.n	27c0 <rt_tsk_prio+0x18>
    2804:	4804      	ldr	r0, [pc, #16]	; (2818 <rt_tsk_prio+0x70>)
    2806:	f7ff f8bf 	bl	1988 <rt_get_first>
    280a:	f7ff ff89 	bl	2720 <rt_dispatch>
    280e:	e7d7      	b.n	27c0 <rt_tsk_prio+0x18>
    2810:	20ff      	movs	r0, #255	; 0xff
    2812:	bd10      	pop	{r4, pc}
    2814:	100025cc 	.word	0x100025cc
    2818:	10002580 	.word	0x10002580
    281c:	00004e80 	.word	0x00004e80
    2820:	10001dc8 	.word	0x10001dc8

00002824 <rt_tsk_create>:
    2824:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    2828:	460d      	mov	r5, r1
    282a:	f011 0fff 	tst.w	r1, #255	; 0xff
    282e:	4680      	mov	r8, r0
    2830:	4823      	ldr	r0, [pc, #140]	; (28c0 <rt_tsk_create+0x9c>)
    2832:	4616      	mov	r6, r2
    2834:	469a      	mov	r10, r3
    2836:	bf08      	it	eq
    2838:	3501      	addeq	r5, #1
    283a:	f7ff fa93 	bl	1d64 <rt_alloc_box>
    283e:	4604      	mov	r4, r0
    2840:	b920      	cbnz	r0, 284c <rt_tsk_create+0x28>
    2842:	f04f 0900 	mov.w	r9, #0
    2846:	4648      	mov	r0, r9
    2848:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
    284c:	2100      	movs	r1, #0
    284e:	4b1d      	ldr	r3, [pc, #116]	; (28c4 <rt_tsk_create+0xa0>)
    2850:	6306      	str	r6, [r0, #48]	; 0x30
    2852:	881b      	ldrh	r3, [r3, #0]
    2854:	0a28      	lsrs	r0, r5, #8
    2856:	4e1c      	ldr	r6, [pc, #112]	; (28c8 <rt_tsk_create+0xa4>)
    2858:	62a0      	str	r0, [r4, #40]	; 0x28
    285a:	428b      	cmp	r3, r1
    285c:	f101 0901 	add.w	r9, r1, #1
    2860:	d0ef      	beq.n	2842 <rt_tsk_create+0x1e>
    2862:	eb06 0289 	add.w	r2, r6, r9, lsl #2
    2866:	f852 2c04 	ldr.w	r2, [r2, #-4]
    286a:	460f      	mov	r7, r1
    286c:	4649      	mov	r1, r9
    286e:	2a00      	cmp	r2, #0
    2870:	d1f3      	bne.n	285a <rt_tsk_create+0x36>
    2872:	2301      	movs	r3, #1
    2874:	b2ed      	uxtb	r5, r5
    2876:	f884 9003 	strb.w	r9, [r4, #3]
    287a:	f8c4 a01c 	str.w	r10, [r4, #28]
    287e:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
    2882:	7022      	strb	r2, [r4, #0]
    2884:	7063      	strb	r3, [r4, #1]
    2886:	70a5      	strb	r5, [r4, #2]
    2888:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
    288c:	6062      	str	r2, [r4, #4]
    288e:	60a2      	str	r2, [r4, #8]
    2890:	60e2      	str	r2, [r4, #12]
    2892:	6122      	str	r2, [r4, #16]
    2894:	6222      	str	r2, [r4, #32]
    2896:	82a2      	strh	r2, [r4, #20]
    2898:	82e2      	strh	r2, [r4, #22]
    289a:	8322      	strh	r2, [r4, #24]
    289c:	8362      	strh	r2, [r4, #26]
    289e:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
    28a2:	b918      	cbnz	r0, 28ac <rt_tsk_create+0x88>
    28a4:	4809      	ldr	r0, [pc, #36]	; (28cc <rt_tsk_create+0xa8>)
    28a6:	f7ff fa5d 	bl	1d64 <rt_alloc_box>
    28aa:	6320      	str	r0, [r4, #48]	; 0x30
    28ac:	4620      	mov	r0, r4
    28ae:	4641      	mov	r1, r8
    28b0:	f7ff f9e2 	bl	1c78 <rt_init_stack>
    28b4:	4620      	mov	r0, r4
    28b6:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
    28ba:	f7ff ff31 	bl	2720 <rt_dispatch>
    28be:	e7c2      	b.n	2846 <rt_tsk_create+0x22>
    28c0:	100021b0 	.word	0x100021b0
    28c4:	00004e80 	.word	0x00004e80
    28c8:	10001dc8 	.word	0x10001dc8
    28cc:	10001bb8 	.word	0x10001bb8

000028d0 <rt_tsk_delete>:
    28d0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    28d4:	4d4d      	ldr	r5, [pc, #308]	; (2a0c <rt_tsk_delete+0x13c>)
    28d6:	b118      	cbz	r0, 28e0 <rt_tsk_delete+0x10>
    28d8:	682b      	ldr	r3, [r5, #0]
    28da:	78db      	ldrb	r3, [r3, #3]
    28dc:	4298      	cmp	r0, r3
    28de:	d141      	bne.n	2964 <rt_tsk_delete+0x94>
    28e0:	2300      	movs	r3, #0
    28e2:	682c      	ldr	r4, [r5, #0]
    28e4:	2701      	movs	r7, #1
    28e6:	7063      	strb	r3, [r4, #1]
    28e8:	f001 f97f 	bl	3bea <rt_get_PSP>
    28ec:	62e0      	str	r0, [r4, #44]	; 0x2c
    28ee:	f7ff f9b1 	bl	1c54 <rt_stk_check>
    28f2:	682b      	ldr	r3, [r5, #0]
    28f4:	f8df 8128 	ldr.w	r8, [pc, #296]	; 2a20 <rt_tsk_delete+0x150>
    28f8:	6a1c      	ldr	r4, [r3, #32]
    28fa:	b9a4      	cbnz	r4, 2926 <rt_tsk_delete+0x56>
    28fc:	682a      	ldr	r2, [r5, #0]
    28fe:	4944      	ldr	r1, [pc, #272]	; (2a10 <rt_tsk_delete+0x140>)
    2900:	78d3      	ldrb	r3, [r2, #3]
    2902:	4844      	ldr	r0, [pc, #272]	; (2a14 <rt_tsk_delete+0x144>)
    2904:	3b01      	subs	r3, #1
    2906:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
    290a:	6b11      	ldr	r1, [r2, #48]	; 0x30
    290c:	f7ff fa37 	bl	1d7e <rt_free_box>
    2910:	6829      	ldr	r1, [r5, #0]
    2912:	4841      	ldr	r0, [pc, #260]	; (2a18 <rt_tsk_delete+0x148>)
    2914:	630c      	str	r4, [r1, #48]	; 0x30
    2916:	f7ff fa32 	bl	1d7e <rt_free_box>
    291a:	602c      	str	r4, [r5, #0]
    291c:	f7ff fef6 	bl	270c <rt_dispatch.part.0>
    2920:	4620      	mov	r0, r4
    2922:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
    2926:	6863      	ldr	r3, [r4, #4]
    2928:	b1b3      	cbz	r3, 2958 <rt_tsk_delete+0x88>
    292a:	4620      	mov	r0, r4
    292c:	f7ff f82c 	bl	1988 <rt_get_first>
    2930:	4606      	mov	r6, r0
    2932:	2100      	movs	r1, #0
    2934:	f7ff f9ea 	bl	1d0c <rt_ret_val>
    2938:	4630      	mov	r0, r6
    293a:	f7ff f8cb 	bl	1ad4 <rt_rmv_dly>
    293e:	7077      	strb	r7, [r6, #1]
    2940:	4631      	mov	r1, r6
    2942:	4640      	mov	r0, r8
    2944:	f7ff f808 	bl	1958 <rt_put_prio>
    2948:	68e3      	ldr	r3, [r4, #12]
    294a:	6a32      	ldr	r2, [r6, #32]
    294c:	8067      	strh	r7, [r4, #2]
    294e:	60a6      	str	r6, [r4, #8]
    2950:	60e2      	str	r2, [r4, #12]
    2952:	6234      	str	r4, [r6, #32]
    2954:	461c      	mov	r4, r3
    2956:	e7d0      	b.n	28fa <rt_tsk_delete+0x2a>
    2958:	68e2      	ldr	r2, [r4, #12]
    295a:	8063      	strh	r3, [r4, #2]
    295c:	60a3      	str	r3, [r4, #8]
    295e:	60e3      	str	r3, [r4, #12]
    2960:	4614      	mov	r4, r2
    2962:	e7ca      	b.n	28fa <rt_tsk_delete+0x2a>
    2964:	4b2d      	ldr	r3, [pc, #180]	; (2a1c <rt_tsk_delete+0x14c>)
    2966:	881b      	ldrh	r3, [r3, #0]
    2968:	4298      	cmp	r0, r3
    296a:	d84d      	bhi.n	2a08 <rt_tsk_delete+0x138>
    296c:	4b28      	ldr	r3, [pc, #160]	; (2a10 <rt_tsk_delete+0x140>)
    296e:	1e47      	subs	r7, r0, #1
    2970:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
    2974:	4699      	mov	r9, r3
    2976:	2e00      	cmp	r6, #0
    2978:	d046      	beq.n	2a08 <rt_tsk_delete+0x138>
    297a:	f04f 0a01 	mov.w	r10, #1
    297e:	4630      	mov	r0, r6
    2980:	f7ff f87a 	bl	1a78 <rt_rmv_list>
    2984:	4630      	mov	r0, r6
    2986:	f7ff f8a5 	bl	1ad4 <rt_rmv_dly>
    298a:	f8df b094 	ldr.w	r11, [pc, #148]	; 2a20 <rt_tsk_delete+0x150>
    298e:	6a34      	ldr	r4, [r6, #32]
    2990:	b9b4      	cbnz	r4, 29c0 <rt_tsk_delete+0xf0>
    2992:	6b31      	ldr	r1, [r6, #48]	; 0x30
    2994:	481f      	ldr	r0, [pc, #124]	; (2a14 <rt_tsk_delete+0x144>)
    2996:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
    299a:	f7ff f9f0 	bl	1d7e <rt_free_box>
    299e:	4631      	mov	r1, r6
    29a0:	6334      	str	r4, [r6, #48]	; 0x30
    29a2:	481d      	ldr	r0, [pc, #116]	; (2a18 <rt_tsk_delete+0x148>)
    29a4:	f7ff f9eb 	bl	1d7e <rt_free_box>
    29a8:	481d      	ldr	r0, [pc, #116]	; (2a20 <rt_tsk_delete+0x150>)
    29aa:	6829      	ldr	r1, [r5, #0]
    29ac:	6843      	ldr	r3, [r0, #4]
    29ae:	789a      	ldrb	r2, [r3, #2]
    29b0:	788b      	ldrb	r3, [r1, #2]
    29b2:	429a      	cmp	r2, r3
    29b4:	d9b4      	bls.n	2920 <rt_tsk_delete+0x50>
    29b6:	2301      	movs	r3, #1
    29b8:	704b      	strb	r3, [r1, #1]
    29ba:	f7fe ffcd 	bl	1958 <rt_put_prio>
    29be:	e7ad      	b.n	291c <rt_tsk_delete+0x4c>
    29c0:	6863      	ldr	r3, [r4, #4]
    29c2:	b1db      	cbz	r3, 29fc <rt_tsk_delete+0x12c>
    29c4:	4620      	mov	r0, r4
    29c6:	f7fe ffdf 	bl	1988 <rt_get_first>
    29ca:	4680      	mov	r8, r0
    29cc:	2100      	movs	r1, #0
    29ce:	f7ff f99d 	bl	1d0c <rt_ret_val>
    29d2:	4640      	mov	r0, r8
    29d4:	f7ff f87e 	bl	1ad4 <rt_rmv_dly>
    29d8:	f888 a001 	strb.w	r10, [r8, #1]
    29dc:	4641      	mov	r1, r8
    29de:	4658      	mov	r0, r11
    29e0:	f7fe ffba 	bl	1958 <rt_put_prio>
    29e4:	68e3      	ldr	r3, [r4, #12]
    29e6:	f8d8 2020 	ldr.w	r2, [r8, #32]
    29ea:	f8a4 a002 	strh.w	r10, [r4, #2]
    29ee:	f8c4 8008 	str.w	r8, [r4, #8]
    29f2:	60e2      	str	r2, [r4, #12]
    29f4:	f8c8 4020 	str.w	r4, [r8, #32]
    29f8:	461c      	mov	r4, r3
    29fa:	e7c9      	b.n	2990 <rt_tsk_delete+0xc0>
    29fc:	68e2      	ldr	r2, [r4, #12]
    29fe:	8063      	strh	r3, [r4, #2]
    2a00:	60a3      	str	r3, [r4, #8]
    2a02:	60e3      	str	r3, [r4, #12]
    2a04:	4614      	mov	r4, r2
    2a06:	e7c3      	b.n	2990 <rt_tsk_delete+0xc0>
    2a08:	24ff      	movs	r4, #255	; 0xff
    2a0a:	e789      	b.n	2920 <rt_tsk_delete+0x50>
    2a0c:	100025cc 	.word	0x100025cc
    2a10:	10001dc8 	.word	0x10001dc8
    2a14:	10001bb8 	.word	0x10001bb8
    2a18:	100021b0 	.word	0x100021b0
    2a1c:	00004e80 	.word	0x00004e80
    2a20:	10002580 	.word	0x10002580

00002a24 <rt_sys_init>:
    2a24:	b538      	push	{r3, r4, r5, lr}
    2a26:	4b2c      	ldr	r3, [pc, #176]	; (2ad8 <rt_sys_init+0xb4>)
    2a28:	492c      	ldr	r1, [pc, #176]	; (2adc <rt_sys_init+0xb8>)
    2a2a:	881a      	ldrh	r2, [r3, #0]
    2a2c:	2300      	movs	r3, #0
    2a2e:	4618      	mov	r0, r3
    2a30:	4293      	cmp	r3, r2
    2a32:	d34d      	bcc.n	2ad0 <rt_sys_init+0xac>
    2a34:	4b2a      	ldr	r3, [pc, #168]	; (2ae0 <rt_sys_init+0xbc>)
    2a36:	2240      	movs	r2, #64	; 0x40
    2a38:	8819      	ldrh	r1, [r3, #0]
    2a3a:	482a      	ldr	r0, [pc, #168]	; (2ae4 <rt_sys_init+0xc0>)
    2a3c:	f7ff f96d 	bl	1d1a <_init_box>
    2a40:	4b29      	ldr	r3, [pc, #164]	; (2ae8 <rt_sys_init+0xc4>)
    2a42:	482a      	ldr	r0, [pc, #168]	; (2aec <rt_sys_init+0xc8>)
    2a44:	881a      	ldrh	r2, [r3, #0]
    2a46:	4b2a      	ldr	r3, [pc, #168]	; (2af0 <rt_sys_init+0xcc>)
    2a48:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
    2a4c:	6819      	ldr	r1, [r3, #0]
    2a4e:	f7ff f964 	bl	1d1a <_init_box>
    2a52:	4b28      	ldr	r3, [pc, #160]	; (2af4 <rt_sys_init+0xd0>)
    2a54:	2208      	movs	r2, #8
    2a56:	8819      	ldrh	r1, [r3, #0]
    2a58:	4b27      	ldr	r3, [pc, #156]	; (2af8 <rt_sys_init+0xd4>)
    2a5a:	4c28      	ldr	r4, [pc, #160]	; (2afc <rt_sys_init+0xd8>)
    2a5c:	6818      	ldr	r0, [r3, #0]
    2a5e:	f7ff f95c 	bl	1d1a <_init_box>
    2a62:	23ff      	movs	r3, #255	; 0xff
    2a64:	2500      	movs	r5, #0
    2a66:	70e3      	strb	r3, [r4, #3]
    2a68:	2301      	movs	r3, #1
    2a6a:	4820      	ldr	r0, [pc, #128]	; (2aec <rt_sys_init+0xc8>)
    2a6c:	7063      	strb	r3, [r4, #1]
    2a6e:	62a5      	str	r5, [r4, #40]	; 0x28
    2a70:	7025      	strb	r5, [r4, #0]
    2a72:	70a5      	strb	r5, [r4, #2]
    2a74:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
    2a78:	6065      	str	r5, [r4, #4]
    2a7a:	60a5      	str	r5, [r4, #8]
    2a7c:	60e5      	str	r5, [r4, #12]
    2a7e:	6125      	str	r5, [r4, #16]
    2a80:	6225      	str	r5, [r4, #32]
    2a82:	82a5      	strh	r5, [r4, #20]
    2a84:	82e5      	strh	r5, [r4, #22]
    2a86:	8325      	strh	r5, [r4, #24]
    2a88:	8365      	strh	r5, [r4, #26]
    2a8a:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
    2a8e:	f7ff f969 	bl	1d64 <rt_alloc_box>
    2a92:	491b      	ldr	r1, [pc, #108]	; (2b00 <rt_sys_init+0xdc>)
    2a94:	6320      	str	r0, [r4, #48]	; 0x30
    2a96:	4620      	mov	r0, r4
    2a98:	f7ff f8ee 	bl	1c78 <rt_init_stack>
    2a9c:	2204      	movs	r2, #4
    2a9e:	4b19      	ldr	r3, [pc, #100]	; (2b04 <rt_sys_init+0xe0>)
    2aa0:	4620      	mov	r0, r4
    2aa2:	701a      	strb	r2, [r3, #0]
    2aa4:	605d      	str	r5, [r3, #4]
    2aa6:	4b18      	ldr	r3, [pc, #96]	; (2b08 <rt_sys_init+0xe4>)
    2aa8:	701a      	strb	r2, [r3, #0]
    2aaa:	60dd      	str	r5, [r3, #12]
    2aac:	611d      	str	r5, [r3, #16]
    2aae:	829d      	strh	r5, [r3, #20]
    2ab0:	4b16      	ldr	r3, [pc, #88]	; (2b0c <rt_sys_init+0xe8>)
    2ab2:	601c      	str	r4, [r3, #0]
    2ab4:	2302      	movs	r3, #2
    2ab6:	7063      	strb	r3, [r4, #1]
    2ab8:	f7ff fe18 	bl	26ec <rt_switch_req>
    2abc:	4a14      	ldr	r2, [pc, #80]	; (2b10 <rt_sys_init+0xec>)
    2abe:	4b15      	ldr	r3, [pc, #84]	; (2b14 <rt_sys_init+0xf0>)
    2ac0:	7812      	ldrb	r2, [r2, #0]
    2ac2:	701d      	strb	r5, [r3, #0]
    2ac4:	705d      	strb	r5, [r3, #1]
    2ac6:	70da      	strb	r2, [r3, #3]
    2ac8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2acc:	f7ff ba9e 	b.w	200c <rt_init_robin>
    2ad0:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
    2ad4:	3301      	adds	r3, #1
    2ad6:	e7ab      	b.n	2a30 <rt_sys_init+0xc>
    2ad8:	00004e80 	.word	0x00004e80
    2adc:	10001dc8 	.word	0x10001dc8
    2ae0:	00004e4c 	.word	0x00004e4c
    2ae4:	100021b0 	.word	0x100021b0
    2ae8:	00004e9c 	.word	0x00004e9c
    2aec:	10001bb8 	.word	0x10001bb8
    2af0:	00004e48 	.word	0x00004e48
    2af4:	00004e4e 	.word	0x00004e4e
    2af8:	10000944 	.word	0x10000944
    2afc:	100025d4 	.word	0x100025d4
    2b00:	000018b9 	.word	0x000018b9
    2b04:	10002580 	.word	0x10002580
    2b08:	10002598 	.word	0x10002598
    2b0c:	100025cc 	.word	0x100025cc
    2b10:	00004e7d 	.word	0x00004e7d
    2b14:	10001e04 	.word	0x10001e04

00002b18 <rt_sys_start>:
    2b18:	b508      	push	{r3, lr}
    2b1a:	4b1e      	ldr	r3, [pc, #120]	; (2b94 <rt_sys_start+0x7c>)
    2b1c:	681a      	ldr	r2, [r3, #0]
    2b1e:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
    2b22:	601a      	str	r2, [r3, #0]
    2b24:	681b      	ldr	r3, [r3, #0]
    2b26:	021b      	lsls	r3, r3, #8
    2b28:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
    2b2c:	43db      	mvns	r3, r3
    2b2e:	fab3 f383 	clz	r3, r3
    2b32:	4a19      	ldr	r2, [pc, #100]	; (2b98 <rt_sys_start+0x80>)
    2b34:	b2db      	uxtb	r3, r3
    2b36:	6812      	ldr	r2, [r2, #0]
    2b38:	f1c3 0308 	rsb	r3, r3, #8
    2b3c:	f3c2 2202 	ubfx	r2, r2, #8, #3
    2b40:	4293      	cmp	r3, r2
    2b42:	bf98      	it	ls
    2b44:	1c53      	addls	r3, r2, #1
    2b46:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
    2b4a:	4814      	ldr	r0, [pc, #80]	; (2b9c <rt_sys_start+0x84>)
    2b4c:	fa02 f303 	lsl.w	r3, r2, r3
    2b50:	6801      	ldr	r1, [r0, #0]
    2b52:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
    2b56:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
    2b5a:	4313      	orrs	r3, r2
    2b5c:	6003      	str	r3, [r0, #0]
    2b5e:	f7ff f841 	bl	1be4 <os_tick_init>
    2b62:	4b0f      	ldr	r3, [pc, #60]	; (2ba0 <rt_sys_start+0x88>)
    2b64:	2800      	cmp	r0, #0
    2b66:	6018      	str	r0, [r3, #0]
    2b68:	db12      	blt.n	2b90 <rt_sys_start+0x78>
    2b6a:	22ff      	movs	r2, #255	; 0xff
    2b6c:	2101      	movs	r1, #1
    2b6e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
    2b72:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
    2b76:	7002      	strb	r2, [r0, #0]
    2b78:	681a      	ldr	r2, [r3, #0]
    2b7a:	0953      	lsrs	r3, r2, #5
    2b7c:	009b      	lsls	r3, r3, #2
    2b7e:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2b82:	f002 021f 	and.w	r2, r2, #31
    2b86:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
    2b8a:	fa01 f202 	lsl.w	r2, r1, r2
    2b8e:	601a      	str	r2, [r3, #0]
    2b90:	bd08      	pop	{r3, pc}
    2b92:	bf00      	nop
    2b94:	e000ed20 	.word	0xe000ed20
    2b98:	e000ed0c 	.word	0xe000ed0c
    2b9c:	e000ed1c 	.word	0xe000ed1c
    2ba0:	100025b0 	.word	0x100025b0

00002ba4 <rt_mut_init>:
    2ba4:	2303      	movs	r3, #3
    2ba6:	7003      	strb	r3, [r0, #0]
    2ba8:	2300      	movs	r3, #0
    2baa:	8043      	strh	r3, [r0, #2]
    2bac:	6043      	str	r3, [r0, #4]
    2bae:	6083      	str	r3, [r0, #8]
    2bb0:	60c3      	str	r3, [r0, #12]
    2bb2:	4770      	bx	lr

00002bb4 <rt_mut_release>:
    2bb4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    2bb8:	8843      	ldrh	r3, [r0, #2]
    2bba:	4605      	mov	r5, r0
    2bbc:	2b00      	cmp	r3, #0
    2bbe:	d063      	beq.n	2c88 <rt_mut_release+0xd4>
    2bc0:	4f32      	ldr	r7, [pc, #200]	; (2c8c <rt_mut_release+0xd8>)
    2bc2:	6881      	ldr	r1, [r0, #8]
    2bc4:	683a      	ldr	r2, [r7, #0]
    2bc6:	4291      	cmp	r1, r2
    2bc8:	d15e      	bne.n	2c88 <rt_mut_release+0xd4>
    2bca:	3b01      	subs	r3, #1
    2bcc:	b29b      	uxth	r3, r3
    2bce:	8043      	strh	r3, [r0, #2]
    2bd0:	b11b      	cbz	r3, 2bda <rt_mut_release+0x26>
    2bd2:	2400      	movs	r4, #0
    2bd4:	4620      	mov	r0, r4
    2bd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    2bda:	6a0b      	ldr	r3, [r1, #32]
    2bdc:	4298      	cmp	r0, r3
    2bde:	d129      	bne.n	2c34 <rt_mut_release+0x80>
    2be0:	68c3      	ldr	r3, [r0, #12]
    2be2:	620b      	str	r3, [r1, #32]
    2be4:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
    2be8:	6a0c      	ldr	r4, [r1, #32]
    2bea:	bb5c      	cbnz	r4, 2c44 <rt_mut_release+0x90>
    2bec:	708b      	strb	r3, [r1, #2]
    2bee:	686a      	ldr	r2, [r5, #4]
    2bf0:	f8df 809c 	ldr.w	r8, [pc, #156]	; 2c90 <rt_mut_release+0xdc>
    2bf4:	2a00      	cmp	r2, #0
    2bf6:	d03b      	beq.n	2c70 <rt_mut_release+0xbc>
    2bf8:	4628      	mov	r0, r5
    2bfa:	f7fe fec5 	bl	1988 <rt_get_first>
    2bfe:	4606      	mov	r6, r0
    2c00:	f04f 0901 	mov.w	r9, #1
    2c04:	4621      	mov	r1, r4
    2c06:	f7ff f881 	bl	1d0c <rt_ret_val>
    2c0a:	4630      	mov	r0, r6
    2c0c:	f7fe ff62 	bl	1ad4 <rt_rmv_dly>
    2c10:	6a33      	ldr	r3, [r6, #32]
    2c12:	6839      	ldr	r1, [r7, #0]
    2c14:	60eb      	str	r3, [r5, #12]
    2c16:	f8d8 3004 	ldr.w	r3, [r8, #4]
    2c1a:	f8a5 9002 	strh.w	r9, [r5, #2]
    2c1e:	60ae      	str	r6, [r5, #8]
    2c20:	6235      	str	r5, [r6, #32]
    2c22:	788a      	ldrb	r2, [r1, #2]
    2c24:	789b      	ldrb	r3, [r3, #2]
    2c26:	429a      	cmp	r2, r3
    2c28:	d314      	bcc.n	2c54 <rt_mut_release+0xa0>
    2c2a:	4630      	mov	r0, r6
    2c2c:	f7ff fd78 	bl	2720 <rt_dispatch>
    2c30:	e7d0      	b.n	2bd4 <rt_mut_release+0x20>
    2c32:	4613      	mov	r3, r2
    2c34:	2b00      	cmp	r3, #0
    2c36:	d0d5      	beq.n	2be4 <rt_mut_release+0x30>
    2c38:	68da      	ldr	r2, [r3, #12]
    2c3a:	4295      	cmp	r5, r2
    2c3c:	d1f9      	bne.n	2c32 <rt_mut_release+0x7e>
    2c3e:	68ea      	ldr	r2, [r5, #12]
    2c40:	60da      	str	r2, [r3, #12]
    2c42:	e7cf      	b.n	2be4 <rt_mut_release+0x30>
    2c44:	6862      	ldr	r2, [r4, #4]
    2c46:	b11a      	cbz	r2, 2c50 <rt_mut_release+0x9c>
    2c48:	7892      	ldrb	r2, [r2, #2]
    2c4a:	4293      	cmp	r3, r2
    2c4c:	bf38      	it	cc
    2c4e:	4613      	movcc	r3, r2
    2c50:	68e4      	ldr	r4, [r4, #12]
    2c52:	e7ca      	b.n	2bea <rt_mut_release+0x36>
    2c54:	4640      	mov	r0, r8
    2c56:	f7fe fe7f 	bl	1958 <rt_put_prio>
    2c5a:	4631      	mov	r1, r6
    2c5c:	4640      	mov	r0, r8
    2c5e:	f7fe fe7b 	bl	1958 <rt_put_prio>
    2c62:	683b      	ldr	r3, [r7, #0]
    2c64:	f883 9001 	strb.w	r9, [r3, #1]
    2c68:	f886 9001 	strb.w	r9, [r6, #1]
    2c6c:	4620      	mov	r0, r4
    2c6e:	e7dd      	b.n	2c2c <rt_mut_release+0x78>
    2c70:	f8d8 2004 	ldr.w	r2, [r8, #4]
    2c74:	7892      	ldrb	r2, [r2, #2]
    2c76:	429a      	cmp	r2, r3
    2c78:	d9ab      	bls.n	2bd2 <rt_mut_release+0x1e>
    2c7a:	4640      	mov	r0, r8
    2c7c:	f7fe fe6c 	bl	1958 <rt_put_prio>
    2c80:	2201      	movs	r2, #1
    2c82:	683b      	ldr	r3, [r7, #0]
    2c84:	705a      	strb	r2, [r3, #1]
    2c86:	e7f1      	b.n	2c6c <rt_mut_release+0xb8>
    2c88:	24ff      	movs	r4, #255	; 0xff
    2c8a:	e7a3      	b.n	2bd4 <rt_mut_release+0x20>
    2c8c:	100025cc 	.word	0x100025cc
    2c90:	10002580 	.word	0x10002580

00002c94 <rt_mut_wait>:
    2c94:	8843      	ldrh	r3, [r0, #2]
    2c96:	b570      	push	{r4, r5, r6, lr}
    2c98:	4604      	mov	r4, r0
    2c9a:	460e      	mov	r6, r1
    2c9c:	4d13      	ldr	r5, [pc, #76]	; (2cec <rt_mut_wait+0x58>)
    2c9e:	b943      	cbnz	r3, 2cb2 <rt_mut_wait+0x1e>
    2ca0:	682a      	ldr	r2, [r5, #0]
    2ca2:	6a11      	ldr	r1, [r2, #32]
    2ca4:	6082      	str	r2, [r0, #8]
    2ca6:	60c1      	str	r1, [r0, #12]
    2ca8:	6210      	str	r0, [r2, #32]
    2caa:	3301      	adds	r3, #1
    2cac:	8063      	strh	r3, [r4, #2]
    2cae:	2000      	movs	r0, #0
    2cb0:	bd70      	pop	{r4, r5, r6, pc}
    2cb2:	6880      	ldr	r0, [r0, #8]
    2cb4:	682a      	ldr	r2, [r5, #0]
    2cb6:	4290      	cmp	r0, r2
    2cb8:	d0f7      	beq.n	2caa <rt_mut_wait+0x16>
    2cba:	b181      	cbz	r1, 2cde <rt_mut_wait+0x4a>
    2cbc:	7893      	ldrb	r3, [r2, #2]
    2cbe:	7882      	ldrb	r2, [r0, #2]
    2cc0:	429a      	cmp	r2, r3
    2cc2:	d202      	bcs.n	2cca <rt_mut_wait+0x36>
    2cc4:	7083      	strb	r3, [r0, #2]
    2cc6:	f7fe feed 	bl	1aa4 <rt_resort_prio>
    2cca:	6862      	ldr	r2, [r4, #4]
    2ccc:	b14a      	cbz	r2, 2ce2 <rt_mut_wait+0x4e>
    2cce:	6829      	ldr	r1, [r5, #0]
    2cd0:	4620      	mov	r0, r4
    2cd2:	f7fe fe41 	bl	1958 <rt_put_prio>
    2cd6:	2109      	movs	r1, #9
    2cd8:	4630      	mov	r0, r6
    2cda:	f7ff fd43 	bl	2764 <rt_block>
    2cde:	2001      	movs	r0, #1
    2ce0:	bd70      	pop	{r4, r5, r6, pc}
    2ce2:	682b      	ldr	r3, [r5, #0]
    2ce4:	6063      	str	r3, [r4, #4]
    2ce6:	605a      	str	r2, [r3, #4]
    2ce8:	609c      	str	r4, [r3, #8]
    2cea:	e7f4      	b.n	2cd6 <rt_mut_wait+0x42>
    2cec:	100025cc 	.word	0x100025cc

00002cf0 <rt_dly_wait>:
    2cf0:	2103      	movs	r1, #3
    2cf2:	f7ff bd37 	b.w	2764 <rt_block>
	...

00002cf8 <rt_sem_psh>:
    2cf8:	6842      	ldr	r2, [r0, #4]
    2cfa:	b510      	push	{r4, lr}
    2cfc:	b17a      	cbz	r2, 2d1e <rt_sem_psh+0x26>
    2cfe:	f7fe fe43 	bl	1988 <rt_get_first>
    2d02:	4604      	mov	r4, r0
    2d04:	f7fe fee6 	bl	1ad4 <rt_rmv_dly>
    2d08:	2101      	movs	r1, #1
    2d0a:	4620      	mov	r0, r4
    2d0c:	7061      	strb	r1, [r4, #1]
    2d0e:	f7fe fffd 	bl	1d0c <rt_ret_val>
    2d12:	4621      	mov	r1, r4
    2d14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    2d18:	4803      	ldr	r0, [pc, #12]	; (2d28 <rt_sem_psh+0x30>)
    2d1a:	f7fe be1d 	b.w	1958 <rt_put_prio>
    2d1e:	8842      	ldrh	r2, [r0, #2]
    2d20:	3201      	adds	r2, #1
    2d22:	8042      	strh	r2, [r0, #2]
    2d24:	bd10      	pop	{r4, pc}
    2d26:	bf00      	nop
    2d28:	10002580 	.word	0x10002580

00002d2c <gpio_set>:
    2d2c:	b510      	push	{r4, lr}
    2d2e:	2100      	movs	r1, #0
    2d30:	4604      	mov	r4, r0
    2d32:	f000 fbc9 	bl	34c8 <pin_function>
    2d36:	2001      	movs	r0, #1
    2d38:	f004 041f 	and.w	r4, r4, #31
    2d3c:	40a0      	lsls	r0, r4
    2d3e:	bd10      	pop	{r4, pc}

00002d40 <gpio_init>:
    2d40:	b538      	push	{r3, r4, r5, lr}
    2d42:	4605      	mov	r5, r0
    2d44:	1c4b      	adds	r3, r1, #1
    2d46:	460c      	mov	r4, r1
    2d48:	6029      	str	r1, [r5, #0]
    2d4a:	d00f      	beq.n	2d6c <gpio_init+0x2c>
    2d4c:	4608      	mov	r0, r1
    2d4e:	f7ff ffed 	bl	2d2c <gpio_set>
    2d52:	f024 041f 	bic.w	r4, r4, #31
    2d56:	f104 0318 	add.w	r3, r4, #24
    2d5a:	60eb      	str	r3, [r5, #12]
    2d5c:	f104 031c 	add.w	r3, r4, #28
    2d60:	612b      	str	r3, [r5, #16]
    2d62:	f104 0314 	add.w	r3, r4, #20
    2d66:	6068      	str	r0, [r5, #4]
    2d68:	616b      	str	r3, [r5, #20]
    2d6a:	60ac      	str	r4, [r5, #8]
    2d6c:	bd38      	pop	{r3, r4, r5, pc}

00002d6e <gpio_mode>:
    2d6e:	6800      	ldr	r0, [r0, #0]
    2d70:	f000 bbc3 	b.w	34fa <pin_mode>

00002d74 <gpio_dir>:
    2d74:	b111      	cbz	r1, 2d7c <gpio_dir+0x8>
    2d76:	2901      	cmp	r1, #1
    2d78:	d007      	beq.n	2d8a <gpio_dir+0x16>
    2d7a:	4770      	bx	lr
    2d7c:	6882      	ldr	r2, [r0, #8]
    2d7e:	6841      	ldr	r1, [r0, #4]
    2d80:	6813      	ldr	r3, [r2, #0]
    2d82:	ea23 0301 	bic.w	r3, r3, r1
    2d86:	6013      	str	r3, [r2, #0]
    2d88:	4770      	bx	lr
    2d8a:	6882      	ldr	r2, [r0, #8]
    2d8c:	6841      	ldr	r1, [r0, #4]
    2d8e:	6813      	ldr	r3, [r2, #0]
    2d90:	430b      	orrs	r3, r1
    2d92:	e7f8      	b.n	2d86 <gpio_dir+0x12>

00002d94 <hal_sleep>:
    2d94:	b508      	push	{r3, lr}
    2d96:	f7fe fcbf 	bl	1718 <mbed_interface_disconnect>
    2d9a:	2200      	movs	r2, #0
    2d9c:	4b04      	ldr	r3, [pc, #16]	; (2db0 <hal_sleep+0x1c>)
    2d9e:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
    2da2:	4a04      	ldr	r2, [pc, #16]	; (2db4 <hal_sleep+0x20>)
    2da4:	6913      	ldr	r3, [r2, #16]
    2da6:	f023 0304 	bic.w	r3, r3, #4
    2daa:	6113      	str	r3, [r2, #16]
    2dac:	bf30      	wfi
    2dae:	bd08      	pop	{r3, pc}
    2db0:	400fc000 	.word	0x400fc000
    2db4:	e000ed00 	.word	0xe000ed00

00002db8 <uart_irq>:
    2db8:	2801      	cmp	r0, #1
    2dba:	b410      	push	{r4}
    2dbc:	d008      	beq.n	2dd0 <uart_irq+0x18>
    2dbe:	2802      	cmp	r0, #2
    2dc0:	d008      	beq.n	2dd4 <uart_irq+0x1c>
    2dc2:	bc10      	pop	{r4}
    2dc4:	4770      	bx	lr
    2dc6:	6850      	ldr	r0, [r2, #4]
    2dc8:	f020 0001 	bic.w	r0, r0, #1
    2dcc:	6050      	str	r0, [r2, #4]
    2dce:	e010      	b.n	2df2 <uart_irq+0x3a>
    2dd0:	4603      	mov	r3, r0
    2dd2:	e00e      	b.n	2df2 <uart_irq+0x3a>
    2dd4:	2338      	movs	r3, #56	; 0x38
    2dd6:	480f      	ldr	r0, [pc, #60]	; (2e14 <uart_irq+0x5c>)
    2dd8:	fb03 0301 	mla	r3, r3, r1, r0
    2ddc:	6858      	ldr	r0, [r3, #4]
    2dde:	3001      	adds	r0, #1
    2de0:	d006      	beq.n	2df0 <uart_irq+0x38>
    2de2:	6918      	ldr	r0, [r3, #16]
    2de4:	689c      	ldr	r4, [r3, #8]
    2de6:	6004      	str	r4, [r0, #0]
    2de8:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
    2dec:	2b00      	cmp	r3, #0
    2dee:	d0ea      	beq.n	2dc6 <uart_irq+0xe>
    2df0:	2300      	movs	r3, #0
    2df2:	2238      	movs	r2, #56	; 0x38
    2df4:	4351      	muls	r1, r2
    2df6:	4807      	ldr	r0, [pc, #28]	; (2e14 <uart_irq+0x5c>)
    2df8:	1842      	adds	r2, r0, r1
    2dfa:	5840      	ldr	r0, [r0, r1]
    2dfc:	2800      	cmp	r0, #0
    2dfe:	d0e0      	beq.n	2dc2 <uart_irq+0xa>
    2e00:	b91b      	cbnz	r3, 2e0a <uart_irq+0x52>
    2e02:	f892 2036 	ldrb.w	r2, [r2, #54]	; 0x36
    2e06:	2a00      	cmp	r2, #0
    2e08:	d0db      	beq.n	2dc2 <uart_irq+0xa>
    2e0a:	4a03      	ldr	r2, [pc, #12]	; (2e18 <uart_irq+0x60>)
    2e0c:	4619      	mov	r1, r3
    2e0e:	6812      	ldr	r2, [r2, #0]
    2e10:	bc10      	pop	{r4}
    2e12:	4710      	bx	r2
    2e14:	100019c0 	.word	0x100019c0
    2e18:	100019b8 	.word	0x100019b8

00002e1c <uart0_irq>:
    2e1c:	4a03      	ldr	r2, [pc, #12]	; (2e2c <uart0_irq+0x10>)
    2e1e:	2100      	movs	r1, #0
    2e20:	6890      	ldr	r0, [r2, #8]
    2e22:	f3c0 0042 	ubfx	r0, r0, #1, #3
    2e26:	f7ff bfc7 	b.w	2db8 <uart_irq>
    2e2a:	bf00      	nop
    2e2c:	4000c000 	.word	0x4000c000

00002e30 <uart1_irq>:
    2e30:	4a03      	ldr	r2, [pc, #12]	; (2e40 <uart1_irq+0x10>)
    2e32:	2101      	movs	r1, #1
    2e34:	6890      	ldr	r0, [r2, #8]
    2e36:	f3c0 0042 	ubfx	r0, r0, #1, #3
    2e3a:	f7ff bfbd 	b.w	2db8 <uart_irq>
    2e3e:	bf00      	nop
    2e40:	40010000 	.word	0x40010000

00002e44 <uart2_irq>:
    2e44:	4a03      	ldr	r2, [pc, #12]	; (2e54 <uart2_irq+0x10>)
    2e46:	2102      	movs	r1, #2
    2e48:	6890      	ldr	r0, [r2, #8]
    2e4a:	f3c0 0042 	ubfx	r0, r0, #1, #3
    2e4e:	f7ff bfb3 	b.w	2db8 <uart_irq>
    2e52:	bf00      	nop
    2e54:	40098000 	.word	0x40098000

00002e58 <uart3_irq>:
    2e58:	4a03      	ldr	r2, [pc, #12]	; (2e68 <uart3_irq+0x10>)
    2e5a:	2103      	movs	r1, #3
    2e5c:	6890      	ldr	r0, [r2, #8]
    2e5e:	f3c0 0042 	ubfx	r0, r0, #1, #3
    2e62:	f7ff bfa9 	b.w	2db8 <uart_irq>
    2e66:	bf00      	nop
    2e68:	4009c000 	.word	0x4009c000

00002e6c <serial_irq_set_internal>:
    2e6c:	b570      	push	{r4, r5, r6, lr}
    2e6e:	460b      	mov	r3, r1
    2e70:	6806      	ldr	r6, [r0, #0]
    2e72:	4929      	ldr	r1, [pc, #164]	; (2f18 <serial_irq_set_internal+0xac>)
    2e74:	428e      	cmp	r6, r1
    2e76:	d022      	beq.n	2ebe <serial_irq_set_internal+0x52>
    2e78:	dc06      	bgt.n	2e88 <serial_irq_set_internal+0x1c>
    2e7a:	f5a1 4180 	sub.w	r1, r1, #16384	; 0x4000
    2e7e:	428e      	cmp	r6, r1
    2e80:	d00c      	beq.n	2e9c <serial_irq_set_internal+0x30>
    2e82:	2100      	movs	r1, #0
    2e84:	460c      	mov	r4, r1
    2e86:	e00b      	b.n	2ea0 <serial_irq_set_internal+0x34>
    2e88:	4924      	ldr	r1, [pc, #144]	; (2f1c <serial_irq_set_internal+0xb0>)
    2e8a:	428e      	cmp	r6, r1
    2e8c:	d01a      	beq.n	2ec4 <serial_irq_set_internal+0x58>
    2e8e:	f501 4180 	add.w	r1, r1, #16384	; 0x4000
    2e92:	428e      	cmp	r6, r1
    2e94:	d1f5      	bne.n	2e82 <serial_irq_set_internal+0x16>
    2e96:	4922      	ldr	r1, [pc, #136]	; (2f20 <serial_irq_set_internal+0xb4>)
    2e98:	2408      	movs	r4, #8
    2e9a:	e001      	b.n	2ea0 <serial_irq_set_internal+0x34>
    2e9c:	2405      	movs	r4, #5
    2e9e:	4921      	ldr	r1, [pc, #132]	; (2f24 <serial_irq_set_internal+0xb8>)
    2ea0:	b19a      	cbz	r2, 2eca <serial_irq_set_internal+0x5e>
    2ea2:	2501      	movs	r5, #1
    2ea4:	6872      	ldr	r2, [r6, #4]
    2ea6:	fa05 f303 	lsl.w	r3, r5, r3
    2eaa:	4313      	orrs	r3, r2
    2eac:	6073      	str	r3, [r6, #4]
    2eae:	4620      	mov	r0, r4
    2eb0:	f000 fb50 	bl	3554 <__NVIC_SetVector>
    2eb4:	4b1c      	ldr	r3, [pc, #112]	; (2f28 <serial_irq_set_internal+0xbc>)
    2eb6:	fa05 f404 	lsl.w	r4, r5, r4
    2eba:	601c      	str	r4, [r3, #0]
    2ebc:	bd70      	pop	{r4, r5, r6, pc}
    2ebe:	491b      	ldr	r1, [pc, #108]	; (2f2c <serial_irq_set_internal+0xc0>)
    2ec0:	2406      	movs	r4, #6
    2ec2:	e7ed      	b.n	2ea0 <serial_irq_set_internal+0x34>
    2ec4:	491a      	ldr	r1, [pc, #104]	; (2f30 <serial_irq_set_internal+0xc4>)
    2ec6:	2407      	movs	r4, #7
    2ec8:	e7ea      	b.n	2ea0 <serial_irq_set_internal+0x34>
    2eca:	2b01      	cmp	r3, #1
    2ecc:	d00a      	beq.n	2ee4 <serial_irq_set_internal+0x78>
    2ece:	6842      	ldr	r2, [r0, #4]
    2ed0:	2038      	movs	r0, #56	; 0x38
    2ed2:	4918      	ldr	r1, [pc, #96]	; (2f34 <serial_irq_set_internal+0xc8>)
    2ed4:	fb00 1202 	mla	r2, r0, r2, r1
    2ed8:	f892 1036 	ldrb.w	r1, [r2, #54]	; 0x36
    2edc:	f892 2035 	ldrb.w	r2, [r2, #53]	; 0x35
    2ee0:	42d1      	cmn	r1, r2
    2ee2:	d117      	bne.n	2f14 <serial_irq_set_internal+0xa8>
    2ee4:	2201      	movs	r2, #1
    2ee6:	fa02 f003 	lsl.w	r0, r2, r3
    2eea:	fab3 f383 	clz	r3, r3
    2eee:	6871      	ldr	r1, [r6, #4]
    2ef0:	095b      	lsrs	r3, r3, #5
    2ef2:	ea21 0100 	bic.w	r1, r1, r0
    2ef6:	6071      	str	r1, [r6, #4]
    2ef8:	6871      	ldr	r1, [r6, #4]
    2efa:	fa02 f303 	lsl.w	r3, r2, r3
    2efe:	420b      	tst	r3, r1
    2f00:	d108      	bne.n	2f14 <serial_irq_set_internal+0xa8>
    2f02:	4b09      	ldr	r3, [pc, #36]	; (2f28 <serial_irq_set_internal+0xbc>)
    2f04:	fa02 f404 	lsl.w	r4, r2, r4
    2f08:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
    2f0c:	f3bf 8f4f 	dsb	sy
    2f10:	f3bf 8f6f 	isb	sy
    2f14:	bd70      	pop	{r4, r5, r6, pc}
    2f16:	bf00      	nop
    2f18:	40010000 	.word	0x40010000
    2f1c:	40098000 	.word	0x40098000
    2f20:	00002e59 	.word	0x00002e59
    2f24:	00002e1d 	.word	0x00002e1d
    2f28:	e000e100 	.word	0xe000e100
    2f2c:	00002e31 	.word	0x00002e31
    2f30:	00002e45 	.word	0x00002e45
    2f34:	100019c0 	.word	0x100019c0

00002f38 <serial_baud>:
    2f38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    2f3c:	4b64      	ldr	r3, [pc, #400]	; (30d0 <serial_baud+0x198>)
    2f3e:	6804      	ldr	r4, [r0, #0]
    2f40:	b087      	sub	sp, #28
    2f42:	429c      	cmp	r4, r3
    2f44:	f000 808d 	beq.w	3062 <serial_baud+0x12a>
    2f48:	dc6a      	bgt.n	3020 <serial_baud+0xe8>
    2f4a:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
    2f4e:	429c      	cmp	r4, r3
    2f50:	d079      	beq.n	3046 <serial_baud+0x10e>
    2f52:	4b60      	ldr	r3, [pc, #384]	; (30d4 <serial_baud+0x19c>)
    2f54:	0108      	lsls	r0, r1, #4
    2f56:	f8d3 c000 	ldr.w	r12, [r3]
    2f5a:	fbbc f2f0 	udiv	r2, r12, r0
    2f5e:	b293      	uxth	r3, r2
    2f60:	fb00 c212 	mls	r2, r0, r2, r12
    2f64:	2a00      	cmp	r2, #0
    2f66:	f000 80aa 	beq.w	30be <serial_baud+0x186>
    2f6a:	2501      	movs	r5, #1
    2f6c:	46e6      	mov	lr, r12
    2f6e:	4699      	mov	r9, r3
    2f70:	46ab      	mov	r11, r5
    2f72:	f04f 0a00 	mov.w	r10, #0
    2f76:	9101      	str	r1, [sp, #4]
    2f78:	9103      	str	r1, [sp, #12]
    2f7a:	2600      	movs	r6, #0
    2f7c:	ea4f 034e 	mov.w	r3, lr, lsl #1
    2f80:	9304      	str	r3, [sp, #16]
    2f82:	f8dd 8004 	ldr.w	r8, [sp, #4]
    2f86:	ea4f 038e 	mov.w	r3, lr, lsl #2
    2f8a:	b2ef      	uxtb	r7, r5
    2f8c:	9305      	str	r3, [sp, #20]
    2f8e:	b2f3      	uxtb	r3, r6
    2f90:	9300      	str	r3, [sp, #0]
    2f92:	9b04      	ldr	r3, [sp, #16]
    2f94:	2b00      	cmp	r3, #0
    2f96:	bfab      	itete	ge
    2f98:	9b05      	ldrge	r3, [sp, #20]
    2f9a:	fbb3 f3f8 	udivlt	r3, r3, r8
    2f9e:	fbb3 f3f8 	udivge	r3, r3, r8
    2fa2:	091b      	lsrlt	r3, r3, #4
    2fa4:	bfa8      	it	ge
    2fa6:	095b      	lsrge	r3, r3, #5
    2fa8:	3301      	adds	r3, #1
    2faa:	f3c3 034f 	ubfx	r3, r3, #1, #16
    2fae:	2b00      	cmp	r3, #0
    2fb0:	f000 8088 	beq.w	30c4 <serial_baud+0x18c>
    2fb4:	b116      	cbz	r6, 2fbc <serial_baud+0x84>
    2fb6:	2b01      	cmp	r3, #1
    2fb8:	bf08      	it	eq
    2fba:	2302      	moveq	r3, #2
    2fbc:	19a8      	adds	r0, r5, r6
    2fbe:	4358      	muls	r0, r3
    2fc0:	00c0      	lsls	r0, r0, #3
    2fc2:	fbbe f0f0 	udiv	r0, lr, r0
    2fc6:	3001      	adds	r0, #1
    2fc8:	ebc1 0050 	rsb	r0, r1, r0, lsr #1
    2fcc:	2800      	cmp	r0, #0
    2fce:	bfb8      	it	lt
    2fd0:	4240      	neglt	r0, r0
    2fd2:	9002      	str	r0, [sp, #8]
    2fd4:	9a02      	ldr	r2, [sp, #8]
    2fd6:	9803      	ldr	r0, [sp, #12]
    2fd8:	4282      	cmp	r2, r0
    2fda:	da62      	bge.n	30a2 <serial_baud+0x16a>
    2fdc:	4291      	cmp	r1, r2
    2fde:	d15a      	bne.n	3096 <serial_baud+0x15e>
    2fe0:	2d0f      	cmp	r5, #15
    2fe2:	d107      	bne.n	2ff4 <serial_baud+0xbc>
    2fe4:	46bb      	mov	r11, r7
    2fe6:	4699      	mov	r9, r3
    2fe8:	f8dd a000 	ldr.w	r10, [sp]
    2fec:	465f      	mov	r7, r11
    2fee:	464b      	mov	r3, r9
    2ff0:	f8cd a000 	str.w	r10, [sp]
    2ff4:	7b21      	ldrb	r1, [r4, #12]
    2ff6:	f041 0180 	orr.w	r1, r1, #128	; 0x80
    2ffa:	7321      	strb	r1, [r4, #12]
    2ffc:	f3c3 2107 	ubfx	r1, r3, #8, #8
    3000:	b2db      	uxtb	r3, r3
    3002:	7121      	strb	r1, [r4, #4]
    3004:	7023      	strb	r3, [r4, #0]
    3006:	9b00      	ldr	r3, [sp, #0]
    3008:	ea43 1207 	orr.w	r2, r3, r7, lsl #4
    300c:	b2d2      	uxtb	r2, r2
    300e:	f884 2028 	strb.w	r2, [r4, #40]	; 0x28
    3012:	7b23      	ldrb	r3, [r4, #12]
    3014:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    3018:	7323      	strb	r3, [r4, #12]
    301a:	b007      	add	sp, #28
    301c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    3020:	4b2d      	ldr	r3, [pc, #180]	; (30d8 <serial_baud+0x1a0>)
    3022:	429c      	cmp	r4, r3
    3024:	d029      	beq.n	307a <serial_baud+0x142>
    3026:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    302a:	429c      	cmp	r4, r3
    302c:	d191      	bne.n	2f52 <serial_baud+0x1a>
    302e:	4b2b      	ldr	r3, [pc, #172]	; (30dc <serial_baud+0x1a4>)
    3030:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    3034:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
    3038:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    303c:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    3040:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
    3044:	e024      	b.n	3090 <serial_baud+0x158>
    3046:	4b25      	ldr	r3, [pc, #148]	; (30dc <serial_baud+0x1a4>)
    3048:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    304c:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
    3050:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    3054:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    3058:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    305c:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    3060:	e777      	b.n	2f52 <serial_baud+0x1a>
    3062:	4b1e      	ldr	r3, [pc, #120]	; (30dc <serial_baud+0x1a4>)
    3064:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    3068:	f422 7240 	bic.w	r2, r2, #768	; 0x300
    306c:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    3070:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    3074:	f442 7280 	orr.w	r2, r2, #256	; 0x100
    3078:	e7f0      	b.n	305c <serial_baud+0x124>
    307a:	4b18      	ldr	r3, [pc, #96]	; (30dc <serial_baud+0x1a4>)
    307c:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    3080:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
    3084:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    3088:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    308c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
    3090:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    3094:	e75d      	b.n	2f52 <serial_baud+0x1a>
    3096:	46bb      	mov	r11, r7
    3098:	4699      	mov	r9, r3
    309a:	9a02      	ldr	r2, [sp, #8]
    309c:	f8dd a000 	ldr.w	r10, [sp]
    30a0:	9203      	str	r2, [sp, #12]
    30a2:	3601      	adds	r6, #1
    30a4:	b2f3      	uxtb	r3, r6
    30a6:	42bb      	cmp	r3, r7
    30a8:	4488      	add	r8, r1
    30aa:	f4ff af70 	bcc.w	2f8e <serial_baud+0x56>
    30ae:	2d0f      	cmp	r5, #15
    30b0:	d09c      	beq.n	2fec <serial_baud+0xb4>
    30b2:	9b01      	ldr	r3, [sp, #4]
    30b4:	3501      	adds	r5, #1
    30b6:	440b      	add	r3, r1
    30b8:	44e6      	add	lr, r12
    30ba:	9301      	str	r3, [sp, #4]
    30bc:	e75d      	b.n	2f7a <serial_baud+0x42>
    30be:	2701      	movs	r7, #1
    30c0:	9200      	str	r2, [sp, #0]
    30c2:	e797      	b.n	2ff4 <serial_baud+0xbc>
    30c4:	2e00      	cmp	r6, #0
    30c6:	bf0c      	ite	eq
    30c8:	2301      	moveq	r3, #1
    30ca:	2302      	movne	r3, #2
    30cc:	e776      	b.n	2fbc <serial_baud+0x84>
    30ce:	bf00      	nop
    30d0:	40010000 	.word	0x40010000
    30d4:	100000e4 	.word	0x100000e4
    30d8:	40098000 	.word	0x40098000
    30dc:	400fc000 	.word	0x400fc000

000030e0 <serial_irq_handler>:
    30e0:	4b03      	ldr	r3, [pc, #12]	; (30f0 <serial_irq_handler+0x10>)
    30e2:	6019      	str	r1, [r3, #0]
    30e4:	2338      	movs	r3, #56	; 0x38
    30e6:	6841      	ldr	r1, [r0, #4]
    30e8:	434b      	muls	r3, r1
    30ea:	4902      	ldr	r1, [pc, #8]	; (30f4 <serial_irq_handler+0x14>)
    30ec:	50ca      	str	r2, [r1, r3]
    30ee:	4770      	bx	lr
    30f0:	100019b8 	.word	0x100019b8
    30f4:	100019c0 	.word	0x100019c0

000030f8 <serial_irq_set>:
    30f8:	b430      	push	{r4, r5}
    30fa:	b931      	cbnz	r1, 310a <serial_irq_set+0x12>
    30fc:	2538      	movs	r5, #56	; 0x38
    30fe:	6843      	ldr	r3, [r0, #4]
    3100:	4c03      	ldr	r4, [pc, #12]	; (3110 <serial_irq_set+0x18>)
    3102:	fb05 4303 	mla	r3, r5, r3, r4
    3106:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
    310a:	bc30      	pop	{r4, r5}
    310c:	f7ff beae 	b.w	2e6c <serial_irq_set_internal>
    3110:	100019c0 	.word	0x100019c0

00003114 <serial_getc>:
    3114:	b510      	push	{r4, lr}
    3116:	6802      	ldr	r2, [r0, #0]
    3118:	7d13      	ldrb	r3, [r2, #20]
    311a:	07db      	lsls	r3, r3, #31
    311c:	d5fc      	bpl.n	3118 <serial_getc+0x4>
    311e:	2438      	movs	r4, #56	; 0x38
    3120:	6843      	ldr	r3, [r0, #4]
    3122:	4808      	ldr	r0, [pc, #32]	; (3144 <serial_getc+0x30>)
    3124:	7811      	ldrb	r1, [r2, #0]
    3126:	fb04 0303 	mla	r3, r4, r3, r0
    312a:	6858      	ldr	r0, [r3, #4]
    312c:	b2c9      	uxtb	r1, r1
    312e:	3001      	adds	r0, #1
    3130:	d006      	beq.n	3140 <serial_getc+0x2c>
    3132:	6958      	ldr	r0, [r3, #20]
    3134:	689b      	ldr	r3, [r3, #8]
    3136:	6003      	str	r3, [r0, #0]
    3138:	6853      	ldr	r3, [r2, #4]
    313a:	f043 0301 	orr.w	r3, r3, #1
    313e:	6053      	str	r3, [r2, #4]
    3140:	4608      	mov	r0, r1
    3142:	bd10      	pop	{r4, pc}
    3144:	100019c0 	.word	0x100019c0

00003148 <serial_readable>:
    3148:	6803      	ldr	r3, [r0, #0]
    314a:	7d18      	ldrb	r0, [r3, #20]
    314c:	f000 0001 	and.w	r0, r0, #1
    3150:	4770      	bx	lr
	...

00003154 <serial_writable>:
    3154:	2138      	movs	r1, #56	; 0x38
    3156:	4a11      	ldr	r2, [pc, #68]	; (319c <serial_writable+0x48>)
    3158:	6843      	ldr	r3, [r0, #4]
    315a:	fb01 2303 	mla	r3, r1, r3, r2
    315e:	69da      	ldr	r2, [r3, #28]
    3160:	3201      	adds	r2, #1
    3162:	d009      	beq.n	3178 <serial_writable+0x24>
    3164:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    3166:	6a1b      	ldr	r3, [r3, #32]
    3168:	6812      	ldr	r2, [r2, #0]
    316a:	421a      	tst	r2, r3
    316c:	d114      	bne.n	3198 <serial_writable+0x44>
    316e:	6803      	ldr	r3, [r0, #0]
    3170:	7d18      	ldrb	r0, [r3, #20]
    3172:	f3c0 1080 	ubfx	r0, r0, #6, #1
    3176:	4770      	bx	lr
    3178:	6802      	ldr	r2, [r0, #0]
    317a:	7d12      	ldrb	r2, [r2, #20]
    317c:	0692      	lsls	r2, r2, #26
    317e:	d504      	bpl.n	318a <serial_writable+0x36>
    3180:	2200      	movs	r2, #0
    3182:	2001      	movs	r0, #1
    3184:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    3188:	4770      	bx	lr
    318a:	f893 0034 	ldrb.w	r0, [r3, #52]	; 0x34
    318e:	280f      	cmp	r0, #15
    3190:	bf8c      	ite	hi
    3192:	2000      	movhi	r0, #0
    3194:	2001      	movls	r0, #1
    3196:	4770      	bx	lr
    3198:	2000      	movs	r0, #0
    319a:	4770      	bx	lr
    319c:	100019c0 	.word	0x100019c0

000031a0 <serial_putc>:
    31a0:	b538      	push	{r3, r4, r5, lr}
    31a2:	4604      	mov	r4, r0
    31a4:	460d      	mov	r5, r1
    31a6:	4620      	mov	r0, r4
    31a8:	f7ff ffd4 	bl	3154 <serial_writable>
    31ac:	2800      	cmp	r0, #0
    31ae:	d0fa      	beq.n	31a6 <serial_putc+0x6>
    31b0:	2138      	movs	r1, #56	; 0x38
    31b2:	6823      	ldr	r3, [r4, #0]
    31b4:	b2ed      	uxtb	r5, r5
    31b6:	701d      	strb	r5, [r3, #0]
    31b8:	6863      	ldr	r3, [r4, #4]
    31ba:	4a04      	ldr	r2, [pc, #16]	; (31cc <serial_putc+0x2c>)
    31bc:	fb01 2303 	mla	r3, r1, r3, r2
    31c0:	f893 2034 	ldrb.w	r2, [r3, #52]	; 0x34
    31c4:	3201      	adds	r2, #1
    31c6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    31ca:	bd38      	pop	{r3, r4, r5, pc}
    31cc:	100019c0 	.word	0x100019c0

000031d0 <serial_set_flow_control>:
    31d0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    31d4:	469a      	mov	r10, r3
    31d6:	4c3c      	ldr	r4, [pc, #240]	; (32c8 <serial_set_flow_control+0xf8>)
    31d8:	6803      	ldr	r3, [r0, #0]
    31da:	4605      	mov	r5, r0
    31dc:	42a3      	cmp	r3, r4
    31de:	bf18      	it	ne
    31e0:	2400      	movne	r4, #0
    31e2:	4689      	mov	r9, r1
    31e4:	4690      	mov	r8, r2
    31e6:	6847      	ldr	r7, [r0, #4]
    31e8:	b11c      	cbz	r4, 31f2 <serial_set_flow_control+0x22>
    31ea:	7c23      	ldrb	r3, [r4, #16]
    31ec:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    31f0:	7423      	strb	r3, [r4, #16]
    31f2:	2338      	movs	r3, #56	; 0x38
    31f4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    31f8:	4e34      	ldr	r6, [pc, #208]	; (32cc <serial_set_flow_control+0xfc>)
    31fa:	4628      	mov	r0, r5
    31fc:	fb03 6307 	mla	r3, r3, r7, r6
    3200:	61da      	str	r2, [r3, #28]
    3202:	605a      	str	r2, [r3, #4]
    3204:	2200      	movs	r2, #0
    3206:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    320a:	4611      	mov	r1, r2
    320c:	f7ff fe2e 	bl	2e6c <serial_irq_set_internal>
    3210:	f1b9 0f00 	cmp.w	r9, #0
    3214:	d055      	beq.n	32c2 <serial_set_flow_control+0xf2>
    3216:	492e      	ldr	r1, [pc, #184]	; (32d0 <serial_set_flow_control+0x100>)
    3218:	4640      	mov	r0, r8
    321a:	f7fe fa5f 	bl	16dc <pinmap_find_peripheral>
    321e:	492d      	ldr	r1, [pc, #180]	; (32d4 <serial_set_flow_control+0x104>)
    3220:	4683      	mov	r11, r0
    3222:	4650      	mov	r0, r10
    3224:	f7fe fa5a 	bl	16dc <pinmap_find_peripheral>
    3228:	f1a9 0302 	sub.w	r3, r9, #2
    322c:	2b01      	cmp	r3, #1
    322e:	d81b      	bhi.n	3268 <serial_set_flow_control+0x98>
    3230:	f1ba 3fff 	cmp.w	r10, #4294967295	; 0xffffffff
    3234:	d00b      	beq.n	324e <serial_set_flow_control+0x7e>
    3236:	4b24      	ldr	r3, [pc, #144]	; (32c8 <serial_set_flow_control+0xf8>)
    3238:	4298      	cmp	r0, r3
    323a:	d10d      	bne.n	3258 <serial_set_flow_control+0x88>
    323c:	b164      	cbz	r4, 3258 <serial_set_flow_control+0x88>
    323e:	7c23      	ldrb	r3, [r4, #16]
    3240:	4924      	ldr	r1, [pc, #144]	; (32d4 <serial_set_flow_control+0x104>)
    3242:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    3246:	7423      	strb	r3, [r4, #16]
    3248:	4650      	mov	r0, r10
    324a:	f7fe fa19 	bl	1680 <pinmap_pinout>
    324e:	f1b9 0f03 	cmp.w	r9, #3
    3252:	d00c      	beq.n	326e <serial_set_flow_control+0x9e>
    3254:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
    3258:	2038      	movs	r0, #56	; 0x38
    325a:	fb00 6007 	mla	r0, r0, r7, r6
    325e:	4651      	mov	r1, r10
    3260:	301c      	adds	r0, #28
    3262:	f7fe f97b 	bl	155c <gpio_init_in>
    3266:	e7f2      	b.n	324e <serial_set_flow_control+0x7e>
    3268:	f1b9 0f01 	cmp.w	r9, #1
    326c:	d129      	bne.n	32c2 <serial_set_flow_control+0xf2>
    326e:	f1b8 3fff 	cmp.w	r8, #4294967295	; 0xffffffff
    3272:	d101      	bne.n	3278 <serial_set_flow_control+0xa8>
    3274:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
    3278:	2207      	movs	r2, #7
    327a:	682b      	ldr	r3, [r5, #0]
    327c:	721a      	strb	r2, [r3, #8]
    327e:	4b12      	ldr	r3, [pc, #72]	; (32c8 <serial_set_flow_control+0xf8>)
    3280:	459b      	cmp	r11, r3
    3282:	d10a      	bne.n	329a <serial_set_flow_control+0xca>
    3284:	b14c      	cbz	r4, 329a <serial_set_flow_control+0xca>
    3286:	7c23      	ldrb	r3, [r4, #16]
    3288:	4640      	mov	r0, r8
    328a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    328e:	7423      	strb	r3, [r4, #16]
    3290:	490f      	ldr	r1, [pc, #60]	; (32d0 <serial_set_flow_control+0x100>)
    3292:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    3296:	f7fe b9f3 	b.w	1680 <pinmap_pinout>
    329a:	2438      	movs	r4, #56	; 0x38
    329c:	fb04 6007 	mla	r0, r4, r7, r6
    32a0:	4641      	mov	r1, r8
    32a2:	2200      	movs	r2, #0
    32a4:	3004      	adds	r0, #4
    32a6:	f7fe f95e 	bl	1566 <gpio_init_out_ex>
    32aa:	2201      	movs	r2, #1
    32ac:	686b      	ldr	r3, [r5, #4]
    32ae:	4628      	mov	r0, r5
    32b0:	fb04 6603 	mla	r6, r4, r3, r6
    32b4:	f886 2035 	strb.w	r2, [r6, #53]	; 0x35
    32b8:	2100      	movs	r1, #0
    32ba:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    32be:	f7ff bdd5 	b.w	2e6c <serial_irq_set_internal>
    32c2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
    32c6:	bf00      	nop
    32c8:	40010000 	.word	0x40010000
    32cc:	100019c0 	.word	0x100019c0
    32d0:	00004ee0 	.word	0x00004ee0
    32d4:	00004ebc 	.word	0x00004ebc

000032d8 <serial_init>:
    32d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    32dc:	460f      	mov	r7, r1
    32de:	4605      	mov	r5, r0
    32e0:	4946      	ldr	r1, [pc, #280]	; (33fc <serial_init+0x124>)
    32e2:	4638      	mov	r0, r7
    32e4:	4616      	mov	r6, r2
    32e6:	f7fe fa05 	bl	16f4 <pinmap_peripheral>
    32ea:	4945      	ldr	r1, [pc, #276]	; (3400 <serial_init+0x128>)
    32ec:	4604      	mov	r4, r0
    32ee:	4630      	mov	r0, r6
    32f0:	f7fe fa00 	bl	16f4 <pinmap_peripheral>
    32f4:	4601      	mov	r1, r0
    32f6:	4620      	mov	r0, r4
    32f8:	f7fe f9de 	bl	16b8 <pinmap_merge>
    32fc:	4b41      	ldr	r3, [pc, #260]	; (3404 <serial_init+0x12c>)
    32fe:	4604      	mov	r4, r0
    3300:	4298      	cmp	r0, r3
    3302:	6028      	str	r0, [r5, #0]
    3304:	d05d      	beq.n	33c2 <serial_init+0xea>
    3306:	d847      	bhi.n	3398 <serial_init+0xc0>
    3308:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
    330c:	4298      	cmp	r0, r3
    330e:	d050      	beq.n	33b2 <serial_init+0xda>
    3310:	2301      	movs	r3, #1
    3312:	f04f 0800 	mov.w	r8, #0
    3316:	7223      	strb	r3, [r4, #8]
    3318:	f44f 5116 	mov.w	r1, #9600	; 0x2580
    331c:	4628      	mov	r0, r5
    331e:	f8c4 8004 	str.w	r8, [r4, #4]
    3322:	f7ff fe09 	bl	2f38 <serial_baud>
    3326:	2203      	movs	r2, #3
    3328:	682b      	ldr	r3, [r5, #0]
    332a:	4934      	ldr	r1, [pc, #208]	; (33fc <serial_init+0x124>)
    332c:	731a      	strb	r2, [r3, #12]
    332e:	4638      	mov	r0, r7
    3330:	f7fe f9a6 	bl	1680 <pinmap_pinout>
    3334:	4932      	ldr	r1, [pc, #200]	; (3400 <serial_init+0x128>)
    3336:	4630      	mov	r0, r6
    3338:	f7fe f9a2 	bl	1680 <pinmap_pinout>
    333c:	1c7a      	adds	r2, r7, #1
    333e:	d003      	beq.n	3348 <serial_init+0x70>
    3340:	4641      	mov	r1, r8
    3342:	4638      	mov	r0, r7
    3344:	f000 f8d9 	bl	34fa <pin_mode>
    3348:	1c73      	adds	r3, r6, #1
    334a:	d003      	beq.n	3354 <serial_init+0x7c>
    334c:	2100      	movs	r1, #0
    334e:	4630      	mov	r0, r6
    3350:	f000 f8d3 	bl	34fa <pin_mode>
    3354:	4b2b      	ldr	r3, [pc, #172]	; (3404 <serial_init+0x12c>)
    3356:	429c      	cmp	r4, r3
    3358:	d04b      	beq.n	33f2 <serial_init+0x11a>
    335a:	d83e      	bhi.n	33da <serial_init+0x102>
    335c:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
    3360:	429c      	cmp	r4, r3
    3362:	d043      	beq.n	33ec <serial_init+0x114>
    3364:	2138      	movs	r1, #56	; 0x38
    3366:	686a      	ldr	r2, [r5, #4]
    3368:	4b27      	ldr	r3, [pc, #156]	; (3408 <serial_init+0x130>)
    336a:	4628      	mov	r0, r5
    336c:	fb01 3202 	mla	r2, r1, r2, r3
    3370:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    3374:	2100      	movs	r1, #0
    3376:	6053      	str	r3, [r2, #4]
    3378:	61d3      	str	r3, [r2, #28]
    337a:	461a      	mov	r2, r3
    337c:	f7ff ff28 	bl	31d0 <serial_set_flow_control>
    3380:	4b22      	ldr	r3, [pc, #136]	; (340c <serial_init+0x134>)
    3382:	429c      	cmp	r4, r3
    3384:	d106      	bne.n	3394 <serial_init+0xbc>
    3386:	2201      	movs	r2, #1
    3388:	4b21      	ldr	r3, [pc, #132]	; (3410 <serial_init+0x138>)
    338a:	6869      	ldr	r1, [r5, #4]
    338c:	601a      	str	r2, [r3, #0]
    338e:	6828      	ldr	r0, [r5, #0]
    3390:	4b20      	ldr	r3, [pc, #128]	; (3414 <serial_init+0x13c>)
    3392:	c303      	stmia	r3!, {r0, r1}
    3394:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3398:	4b1f      	ldr	r3, [pc, #124]	; (3418 <serial_init+0x140>)
    339a:	4298      	cmp	r0, r3
    339c:	d017      	beq.n	33ce <serial_init+0xf6>
    339e:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    33a2:	4298      	cmp	r0, r3
    33a4:	d1b4      	bne.n	3310 <serial_init+0x38>
    33a6:	4a1d      	ldr	r2, [pc, #116]	; (341c <serial_init+0x144>)
    33a8:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    33ac:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
    33b0:	e004      	b.n	33bc <serial_init+0xe4>
    33b2:	4a1a      	ldr	r2, [pc, #104]	; (341c <serial_init+0x144>)
    33b4:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    33b8:	f043 0308 	orr.w	r3, r3, #8
    33bc:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
    33c0:	e7a6      	b.n	3310 <serial_init+0x38>
    33c2:	4a16      	ldr	r2, [pc, #88]	; (341c <serial_init+0x144>)
    33c4:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    33c8:	f043 0310 	orr.w	r3, r3, #16
    33cc:	e7f6      	b.n	33bc <serial_init+0xe4>
    33ce:	4a13      	ldr	r2, [pc, #76]	; (341c <serial_init+0x144>)
    33d0:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    33d4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
    33d8:	e7f0      	b.n	33bc <serial_init+0xe4>
    33da:	4b0f      	ldr	r3, [pc, #60]	; (3418 <serial_init+0x140>)
    33dc:	429c      	cmp	r4, r3
    33de:	d00a      	beq.n	33f6 <serial_init+0x11e>
    33e0:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    33e4:	429c      	cmp	r4, r3
    33e6:	d1bd      	bne.n	3364 <serial_init+0x8c>
    33e8:	2303      	movs	r3, #3
    33ea:	e000      	b.n	33ee <serial_init+0x116>
    33ec:	2300      	movs	r3, #0
    33ee:	606b      	str	r3, [r5, #4]
    33f0:	e7b8      	b.n	3364 <serial_init+0x8c>
    33f2:	2301      	movs	r3, #1
    33f4:	e7fb      	b.n	33ee <serial_init+0x116>
    33f6:	2302      	movs	r3, #2
    33f8:	e7f9      	b.n	33ee <serial_init+0x116>
    33fa:	bf00      	nop
    33fc:	00004f70 	.word	0x00004f70
    3400:	00004f04 	.word	0x00004f04
    3404:	40010000 	.word	0x40010000
    3408:	100019c0 	.word	0x100019c0
    340c:	4000c000 	.word	0x4000c000
    3410:	100019bc 	.word	0x100019bc
    3414:	10002618 	.word	0x10002618
    3418:	40098000 	.word	0x40098000
    341c:	400fc000 	.word	0x400fc000

00003420 <us_ticker_init>:
    3420:	b508      	push	{r3, lr}
    3422:	4b10      	ldr	r3, [pc, #64]	; (3464 <us_ticker_init+0x44>)
    3424:	6818      	ldr	r0, [r3, #0]
    3426:	b9e0      	cbnz	r0, 3462 <us_ticker_init+0x42>
    3428:	2101      	movs	r1, #1
    342a:	4a0f      	ldr	r2, [pc, #60]	; (3468 <us_ticker_init+0x48>)
    342c:	6019      	str	r1, [r3, #0]
    342e:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    3432:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
    3436:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
    343a:	f5a2 22d0 	sub.w	r2, r2, #425984	; 0x68000
    343e:	6710      	str	r0, [r2, #112]	; 0x70
    3440:	2002      	movs	r0, #2
    3442:	4b0a      	ldr	r3, [pc, #40]	; (346c <us_ticker_init+0x4c>)
    3444:	681b      	ldr	r3, [r3, #0]
    3446:	6050      	str	r0, [r2, #4]
    3448:	4809      	ldr	r0, [pc, #36]	; (3470 <us_ticker_init+0x50>)
    344a:	fbb3 f3f0 	udiv	r3, r3, r0
    344e:	3b01      	subs	r3, #1
    3450:	60d3      	str	r3, [r2, #12]
    3452:	2004      	movs	r0, #4
    3454:	6051      	str	r1, [r2, #4]
    3456:	4907      	ldr	r1, [pc, #28]	; (3474 <us_ticker_init+0x54>)
    3458:	f000 f87c 	bl	3554 <__NVIC_SetVector>
    345c:	2210      	movs	r2, #16
    345e:	4b06      	ldr	r3, [pc, #24]	; (3478 <us_ticker_init+0x58>)
    3460:	601a      	str	r2, [r3, #0]
    3462:	bd08      	pop	{r3, pc}
    3464:	10001aa0 	.word	0x10001aa0
    3468:	400fc000 	.word	0x400fc000
    346c:	100000e4 	.word	0x100000e4
    3470:	003d0900 	.word	0x003d0900
    3474:	00001595 	.word	0x00001595
    3478:	e000e100 	.word	0xe000e100

0000347c <us_ticker_read>:
    347c:	b508      	push	{r3, lr}
    347e:	4b04      	ldr	r3, [pc, #16]	; (3490 <us_ticker_read+0x14>)
    3480:	681b      	ldr	r3, [r3, #0]
    3482:	b90b      	cbnz	r3, 3488 <us_ticker_read+0xc>
    3484:	f7ff ffcc 	bl	3420 <us_ticker_init>
    3488:	4b02      	ldr	r3, [pc, #8]	; (3494 <us_ticker_read+0x18>)
    348a:	6898      	ldr	r0, [r3, #8]
    348c:	bd08      	pop	{r3, pc}
    348e:	bf00      	nop
    3490:	10001aa0 	.word	0x10001aa0
    3494:	40094000 	.word	0x40094000

00003498 <us_ticker_set_interrupt>:
    3498:	4b03      	ldr	r3, [pc, #12]	; (34a8 <us_ticker_set_interrupt+0x10>)
    349a:	6198      	str	r0, [r3, #24]
    349c:	695a      	ldr	r2, [r3, #20]
    349e:	f042 0201 	orr.w	r2, r2, #1
    34a2:	615a      	str	r2, [r3, #20]
    34a4:	4770      	bx	lr
    34a6:	bf00      	nop
    34a8:	40094000 	.word	0x40094000

000034ac <us_ticker_disable_interrupt>:
    34ac:	4a02      	ldr	r2, [pc, #8]	; (34b8 <us_ticker_disable_interrupt+0xc>)
    34ae:	6953      	ldr	r3, [r2, #20]
    34b0:	f023 0301 	bic.w	r3, r3, #1
    34b4:	6153      	str	r3, [r2, #20]
    34b6:	4770      	bx	lr
    34b8:	40094000 	.word	0x40094000

000034bc <us_ticker_clear_interrupt>:
    34bc:	2201      	movs	r2, #1
    34be:	4b01      	ldr	r3, [pc, #4]	; (34c4 <us_ticker_clear_interrupt+0x8>)
    34c0:	601a      	str	r2, [r3, #0]
    34c2:	4770      	bx	lr
    34c4:	40094000 	.word	0x40094000

000034c8 <pin_function>:
    34c8:	b510      	push	{r4, lr}
    34ca:	2403      	movs	r4, #3
    34cc:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
    34d0:	f5a0 201c 	sub.w	r0, r0, #638976	; 0x9c000
    34d4:	0043      	lsls	r3, r0, #1
    34d6:	0900      	lsrs	r0, r0, #4
    34d8:	0080      	lsls	r0, r0, #2
    34da:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
    34de:	f500 3030 	add.w	r0, r0, #180224	; 0x2c000
    34e2:	6802      	ldr	r2, [r0, #0]
    34e4:	f003 031e 	and.w	r3, r3, #30
    34e8:	409c      	lsls	r4, r3
    34ea:	ea22 0204 	bic.w	r2, r2, r4
    34ee:	6002      	str	r2, [r0, #0]
    34f0:	6802      	ldr	r2, [r0, #0]
    34f2:	4099      	lsls	r1, r3
    34f4:	4311      	orrs	r1, r2
    34f6:	6001      	str	r1, [r0, #0]
    34f8:	bd10      	pop	{r4, pc}

000034fa <pin_mode>:
    34fa:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
    34fe:	f5a0 201c 	sub.w	r0, r0, #638976	; 0x9c000
    3502:	0943      	lsrs	r3, r0, #5
    3504:	009b      	lsls	r3, r3, #2
    3506:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    350a:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
    350e:	b530      	push	{r4, r5, lr}
    3510:	f000 021f 	and.w	r2, r0, #31
    3514:	6e9c      	ldr	r4, [r3, #104]	; 0x68
    3516:	f3c1 0580 	ubfx	r5, r1, #2, #1
    351a:	fa05 f202 	lsl.w	r2, r5, r2
    351e:	ea24 0402 	bic.w	r4, r4, r2
    3522:	669c      	str	r4, [r3, #104]	; 0x68
    3524:	6e9c      	ldr	r4, [r3, #104]	; 0x68
    3526:	4322      	orrs	r2, r4
    3528:	669a      	str	r2, [r3, #104]	; 0x68
    352a:	b995      	cbnz	r5, 3552 <pin_mode+0x58>
    352c:	2403      	movs	r4, #3
    352e:	0043      	lsls	r3, r0, #1
    3530:	0900      	lsrs	r0, r0, #4
    3532:	0080      	lsls	r0, r0, #2
    3534:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
    3538:	f500 3030 	add.w	r0, r0, #180224	; 0x2c000
    353c:	6c02      	ldr	r2, [r0, #64]	; 0x40
    353e:	f003 031e 	and.w	r3, r3, #30
    3542:	409c      	lsls	r4, r3
    3544:	ea22 0204 	bic.w	r2, r2, r4
    3548:	6402      	str	r2, [r0, #64]	; 0x40
    354a:	6c02      	ldr	r2, [r0, #64]	; 0x40
    354c:	4099      	lsls	r1, r3
    354e:	4311      	orrs	r1, r2
    3550:	6401      	str	r1, [r0, #64]	; 0x40
    3552:	bd30      	pop	{r4, r5, pc}

00003554 <__NVIC_SetVector>:
    3554:	b530      	push	{r4, r5, lr}
    3556:	4c0c      	ldr	r4, [pc, #48]	; (3588 <__NVIC_SetVector+0x34>)
    3558:	68a2      	ldr	r2, [r4, #8]
    355a:	68a4      	ldr	r4, [r4, #8]
    355c:	4613      	mov	r3, r2
    355e:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
    3562:	d20c      	bcs.n	357e <__NVIC_SetVector+0x2a>
    3564:	1f13      	subs	r3, r2, #4
    3566:	4c09      	ldr	r4, [pc, #36]	; (358c <__NVIC_SetVector+0x38>)
    3568:	4a09      	ldr	r2, [pc, #36]	; (3590 <__NVIC_SetVector+0x3c>)
    356a:	f853 5f04 	ldr.w	r5, [r3, #4]!
    356e:	f842 5f04 	str.w	r5, [r2, #4]!
    3572:	42a2      	cmp	r2, r4
    3574:	d1f9      	bne.n	356a <__NVIC_SetVector+0x16>
    3576:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    357a:	4a03      	ldr	r2, [pc, #12]	; (3588 <__NVIC_SetVector+0x34>)
    357c:	6093      	str	r3, [r2, #8]
    357e:	3010      	adds	r0, #16
    3580:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
    3584:	bd30      	pop	{r4, r5, pc}
    3586:	bf00      	nop
    3588:	e000ed00 	.word	0xe000ed00
    358c:	100000c0 	.word	0x100000c0
    3590:	0ffffffc 	.word	0x0ffffffc

00003594 <SystemInit>:
    3594:	2220      	movs	r2, #32
    3596:	4b26      	ldr	r3, [pc, #152]	; (3630 <SystemInit+0x9c>)
    3598:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
    359c:	f8d3 21a0 	ldr.w	r2, [r3, #416]	; 0x1a0
    35a0:	0692      	lsls	r2, r2, #26
    35a2:	d503      	bpl.n	35ac <SystemInit+0x18>
    35a4:	f8d3 21a0 	ldr.w	r2, [r3, #416]	; 0x1a0
    35a8:	0650      	lsls	r0, r2, #25
    35aa:	d5fb      	bpl.n	35a4 <SystemInit+0x10>
    35ac:	2202      	movs	r2, #2
    35ae:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
    35b2:	2200      	movs	r2, #0
    35b4:	2001      	movs	r0, #1
    35b6:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    35ba:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    35be:	220b      	movs	r2, #11
    35c0:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
    35c4:	21aa      	movs	r1, #170	; 0xaa
    35c6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    35ca:	2255      	movs	r2, #85	; 0x55
    35cc:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
    35d0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    35d4:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
    35d8:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
    35dc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    35e0:	4b13      	ldr	r3, [pc, #76]	; (3630 <SystemInit+0x9c>)
    35e2:	461a      	mov	r2, r3
    35e4:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
    35e8:	0149      	lsls	r1, r1, #5
    35ea:	d5fb      	bpl.n	35e4 <SystemInit+0x50>
    35ec:	2103      	movs	r1, #3
    35ee:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
    35f2:	21aa      	movs	r1, #170	; 0xaa
    35f4:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
    35f8:	2155      	movs	r1, #85	; 0x55
    35fa:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
    35fe:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
    3602:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
    3606:	d0fa      	beq.n	35fe <SystemInit+0x6a>
    3608:	2305      	movs	r3, #5
    360a:	f8c2 3108 	str.w	r3, [r2, #264]	; 0x108
    360e:	4b09      	ldr	r3, [pc, #36]	; (3634 <SystemInit+0xa0>)
    3610:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
    3614:	2300      	movs	r3, #0
    3616:	f8c2 31c8 	str.w	r3, [r2, #456]	; 0x1c8
    361a:	6813      	ldr	r3, [r2, #0]
    361c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
    3620:	f023 033a 	bic.w	r3, r3, #58	; 0x3a
    3624:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
    3628:	f043 033a 	orr.w	r3, r3, #58	; 0x3a
    362c:	6013      	str	r3, [r2, #0]
    362e:	4770      	bx	lr
    3630:	400fc000 	.word	0x400fc000
    3634:	042887de 	.word	0x042887de

00003638 <mbed::Ticker::handler()>:
    3638:	b510      	push	{r4, lr}
    363a:	4604      	mov	r4, r0
    363c:	6943      	ldr	r3, [r0, #20]
    363e:	6841      	ldr	r1, [r0, #4]
    3640:	4419      	add	r1, r3
    3642:	f000 f967 	bl	3914 <mbed::TimerEvent::insert(unsigned long)>
    3646:	6a63      	ldr	r3, [r4, #36]	; 0x24
    3648:	f104 0018 	add.w	r0, r4, #24
    364c:	681b      	ldr	r3, [r3, #0]
    364e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    3652:	4718      	bx	r3

00003654 <mbed::Ticker::setup(unsigned long)>:
    3654:	b538      	push	{r3, r4, r5, lr}
    3656:	4604      	mov	r4, r0
    3658:	460d      	mov	r5, r1
    365a:	f7fe f873 	bl	1744 <core_util_critical_section_enter>
    365e:	4620      	mov	r0, r4
    3660:	f000 f95e 	bl	3920 <mbed::TimerEvent::remove()>
    3664:	6165      	str	r5, [r4, #20]
    3666:	6920      	ldr	r0, [r4, #16]
    3668:	f7fe f807 	bl	167a <ticker_read>
    366c:	1829      	adds	r1, r5, r0
    366e:	4620      	mov	r0, r4
    3670:	f000 f950 	bl	3914 <mbed::TimerEvent::insert(unsigned long)>
    3674:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    3678:	f7fe b87a 	b.w	1770 <core_util_critical_section_exit>

0000367c <mbed::Ticker::detach()>:
    367c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    367e:	4606      	mov	r6, r0
    3680:	466d      	mov	r5, sp
    3682:	f7fe f85f 	bl	1744 <core_util_critical_section_enter>
    3686:	4630      	mov	r0, r6
    3688:	f000 f94a 	bl	3920 <mbed::TimerEvent::remove()>
    368c:	2300      	movs	r3, #0
    368e:	f106 0418 	add.w	r4, r6, #24
    3692:	42ac      	cmp	r4, r5
    3694:	9303      	str	r3, [sp, #12]
    3696:	d00b      	beq.n	36b0 <mbed::Ticker::detach()+0x34>
    3698:	4620      	mov	r0, r4
    369a:	f7fc fe5a 	bl	352 <mbed::Callback<void ()>::~Callback()>
    369e:	b13c      	cbz	r4, 36b0 <mbed::Ticker::detach()+0x34>
    36a0:	9b03      	ldr	r3, [sp, #12]
    36a2:	b11b      	cbz	r3, 36ac <mbed::Ticker::detach()+0x30>
    36a4:	685b      	ldr	r3, [r3, #4]
    36a6:	4669      	mov	r1, sp
    36a8:	4620      	mov	r0, r4
    36aa:	4798      	blx	r3
    36ac:	9b03      	ldr	r3, [sp, #12]
    36ae:	6273      	str	r3, [r6, #36]	; 0x24
    36b0:	4628      	mov	r0, r5
    36b2:	f7fc fe4e 	bl	352 <mbed::Callback<void ()>::~Callback()>
    36b6:	f7fe f85b 	bl	1770 <core_util_critical_section_exit>
    36ba:	b004      	add	sp, #16
    36bc:	bd70      	pop	{r4, r5, r6, pc}

000036be <mbed::RawSerial::lock()>:
    36be:	4770      	bx	lr

000036c0 <mbed::RawSerial::~RawSerial()>:
    36c0:	b510      	push	{r4, lr}
    36c2:	4604      	mov	r4, r0
    36c4:	4b02      	ldr	r3, [pc, #8]	; (36d0 <mbed::RawSerial::~RawSerial()+0x10>)
    36c6:	6003      	str	r3, [r0, #0]
    36c8:	f7fd fd88 	bl	11dc <mbed::SerialBase::~SerialBase()>
    36cc:	4620      	mov	r0, r4
    36ce:	bd10      	pop	{r4, pc}
    36d0:	00004ff8 	.word	0x00004ff8

000036d4 <mbed::RawSerial::~RawSerial()>:
    36d4:	b510      	push	{r4, lr}
    36d6:	4604      	mov	r4, r0
    36d8:	f7ff fff2 	bl	36c0 <mbed::RawSerial::~RawSerial()>
    36dc:	4620      	mov	r0, r4
    36de:	f000 fa75 	bl	3bcc <operator delete(void*)>
    36e2:	4620      	mov	r0, r4
    36e4:	bd10      	pop	{r4, pc}
	...

000036e8 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
    36e8:	b510      	push	{r4, lr}
    36ea:	4604      	mov	r4, r0
    36ec:	f000 f886 	bl	37fc <mbed::SerialBase::SerialBase(PinName, PinName, int)>
    36f0:	4b01      	ldr	r3, [pc, #4]	; (36f8 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
    36f2:	4620      	mov	r0, r4
    36f4:	6023      	str	r3, [r4, #0]
    36f6:	bd10      	pop	{r4, pc}
    36f8:	00004ff8 	.word	0x00004ff8

000036fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
    36fc:	4288      	cmp	r0, r1
    36fe:	b538      	push	{r3, r4, r5, lr}
    3700:	4604      	mov	r4, r0
    3702:	460d      	mov	r5, r1
    3704:	d00a      	beq.n	371c <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
    3706:	f7fc fe24 	bl	352 <mbed::Callback<void ()>::~Callback()>
    370a:	b13c      	cbz	r4, 371c <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
    370c:	68eb      	ldr	r3, [r5, #12]
    370e:	b11b      	cbz	r3, 3718 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
    3710:	685b      	ldr	r3, [r3, #4]
    3712:	4629      	mov	r1, r5
    3714:	4620      	mov	r0, r4
    3716:	4798      	blx	r3
    3718:	68eb      	ldr	r3, [r5, #12]
    371a:	60e3      	str	r3, [r4, #12]
    371c:	4620      	mov	r0, r4
    371e:	bd38      	pop	{r3, r4, r5, pc}

00003720 <mbed::Timer::start()>:
    3720:	b510      	push	{r4, lr}
    3722:	4604      	mov	r4, r0
    3724:	f7fe f80e 	bl	1744 <core_util_critical_section_enter>
    3728:	6823      	ldr	r3, [r4, #0]
    372a:	b92b      	cbnz	r3, 3738 <mbed::Timer::start()+0x18>
    372c:	68e0      	ldr	r0, [r4, #12]
    372e:	f7fd ffa4 	bl	167a <ticker_read>
    3732:	2301      	movs	r3, #1
    3734:	6060      	str	r0, [r4, #4]
    3736:	6023      	str	r3, [r4, #0]
    3738:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    373c:	f7fe b818 	b.w	1770 <core_util_critical_section_exit>

00003740 <mbed::Timer::slicetime()>:
    3740:	b538      	push	{r3, r4, r5, lr}
    3742:	4605      	mov	r5, r0
    3744:	f7fd fffe 	bl	1744 <core_util_critical_section_enter>
    3748:	682c      	ldr	r4, [r5, #0]
    374a:	b124      	cbz	r4, 3756 <mbed::Timer::slicetime()+0x16>
    374c:	68e8      	ldr	r0, [r5, #12]
    374e:	f7fd ff94 	bl	167a <ticker_read>
    3752:	686c      	ldr	r4, [r5, #4]
    3754:	1b04      	subs	r4, r0, r4
    3756:	f7fe f80b 	bl	1770 <core_util_critical_section_exit>
    375a:	4620      	mov	r0, r4
    375c:	bd38      	pop	{r3, r4, r5, pc}

0000375e <mbed::Timer::read_us()>:
    375e:	b538      	push	{r3, r4, r5, lr}
    3760:	4605      	mov	r5, r0
    3762:	f7fd ffef 	bl	1744 <core_util_critical_section_enter>
    3766:	4628      	mov	r0, r5
    3768:	68ac      	ldr	r4, [r5, #8]
    376a:	f7ff ffe9 	bl	3740 <mbed::Timer::slicetime()>
    376e:	4404      	add	r4, r0
    3770:	f7fd fffe 	bl	1770 <core_util_critical_section_exit>
    3774:	4620      	mov	r0, r4
    3776:	bd38      	pop	{r3, r4, r5, pc}

00003778 <mbed::Timer::read_ms()>:
    3778:	b508      	push	{r3, lr}
    377a:	f7ff fff0 	bl	375e <mbed::Timer::read_us()>
    377e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    3782:	fb90 f0f3 	sdiv	r0, r0, r3
    3786:	bd08      	pop	{r3, pc}

00003788 <mbed::Timer::reset()>:
    3788:	b510      	push	{r4, lr}
    378a:	4604      	mov	r4, r0
    378c:	f7fd ffda 	bl	1744 <core_util_critical_section_enter>
    3790:	68e0      	ldr	r0, [r4, #12]
    3792:	f7fd ff72 	bl	167a <ticker_read>
    3796:	2300      	movs	r3, #0
    3798:	6060      	str	r0, [r4, #4]
    379a:	60a3      	str	r3, [r4, #8]
    379c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    37a0:	f7fd bfe6 	b.w	1770 <core_util_critical_section_exit>

000037a4 <mbed::Timer::Timer()>:
    37a4:	2300      	movs	r3, #0
    37a6:	b510      	push	{r4, lr}
    37a8:	6003      	str	r3, [r0, #0]
    37aa:	6043      	str	r3, [r0, #4]
    37ac:	6083      	str	r3, [r0, #8]
    37ae:	4604      	mov	r4, r0
    37b0:	f7fd feec 	bl	158c <get_us_ticker_data>
    37b4:	60e0      	str	r0, [r4, #12]
    37b6:	4620      	mov	r0, r4
    37b8:	f7ff ffe6 	bl	3788 <mbed::Timer::reset()>
    37bc:	4620      	mov	r0, r4
    37be:	bd10      	pop	{r4, pc}

000037c0 <mbed::donothing()>:
    37c0:	4770      	bx	lr

000037c2 <mbed::SerialBase::lock()>:
    37c2:	4770      	bx	lr

000037c4 <mbed::SerialBase::unlock()>:
    37c4:	4770      	bx	lr

000037c6 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
    37c6:	eb00 1201 	add.w	r2, r0, r1, lsl #4
    37ca:	6993      	ldr	r3, [r2, #24]
    37cc:	f102 000c 	add.w	r0, r2, #12
    37d0:	681b      	ldr	r3, [r3, #0]
    37d2:	4718      	bx	r3

000037d4 <mbed::SerialBase::baud(int)>:
    37d4:	b570      	push	{r4, r5, r6, lr}
    37d6:	4605      	mov	r5, r0
    37d8:	460e      	mov	r6, r1
    37da:	4604      	mov	r4, r0
    37dc:	f855 3b04 	ldr.w	r3, [r5], #4
    37e0:	681b      	ldr	r3, [r3, #0]
    37e2:	4798      	blx	r3
    37e4:	4628      	mov	r0, r5
    37e6:	4631      	mov	r1, r6
    37e8:	f7ff fba6 	bl	2f38 <serial_baud>
    37ec:	6823      	ldr	r3, [r4, #0]
    37ee:	62e6      	str	r6, [r4, #44]	; 0x2c
    37f0:	4620      	mov	r0, r4
    37f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    37f6:	685b      	ldr	r3, [r3, #4]
    37f8:	4718      	bx	r3
	...

000037fc <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
    37fc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    3800:	460f      	mov	r7, r1
    3802:	2100      	movs	r1, #0
    3804:	4604      	mov	r4, r0
    3806:	4690      	mov	r8, r2
    3808:	4a17      	ldr	r2, [pc, #92]	; (3868 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x6c>)
    380a:	4e18      	ldr	r6, [pc, #96]	; (386c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x70>)
    380c:	4d18      	ldr	r5, [pc, #96]	; (3870 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x74>)
    380e:	62c3      	str	r3, [r0, #44]	; 0x2c
    3810:	6002      	str	r2, [r0, #0]
    3812:	6041      	str	r1, [r0, #4]
    3814:	6081      	str	r1, [r0, #8]
    3816:	6181      	str	r1, [r0, #24]
    3818:	6281      	str	r1, [r0, #40]	; 0x28
    381a:	4669      	mov	r1, sp
    381c:	300c      	adds	r0, #12
    381e:	9503      	str	r5, [sp, #12]
    3820:	9600      	str	r6, [sp, #0]
    3822:	f7ff ff6b 	bl	36fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
    3826:	4668      	mov	r0, sp
    3828:	f7fc fd93 	bl	352 <mbed::Callback<void ()>::~Callback()>
    382c:	4669      	mov	r1, sp
    382e:	f104 001c 	add.w	r0, r4, #28
    3832:	9503      	str	r5, [sp, #12]
    3834:	9600      	str	r6, [sp, #0]
    3836:	1d25      	adds	r5, r4, #4
    3838:	f7ff ff60 	bl	36fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
    383c:	4668      	mov	r0, sp
    383e:	f7fc fd88 	bl	352 <mbed::Callback<void ()>::~Callback()>
    3842:	4642      	mov	r2, r8
    3844:	4639      	mov	r1, r7
    3846:	4628      	mov	r0, r5
    3848:	f7ff fd46 	bl	32d8 <serial_init>
    384c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    384e:	4628      	mov	r0, r5
    3850:	f7ff fb72 	bl	2f38 <serial_baud>
    3854:	4628      	mov	r0, r5
    3856:	4622      	mov	r2, r4
    3858:	4906      	ldr	r1, [pc, #24]	; (3874 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x78>)
    385a:	f7ff fc41 	bl	30e0 <serial_irq_handler>
    385e:	4620      	mov	r0, r4
    3860:	b004      	add	sp, #16
    3862:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3866:	bf00      	nop
    3868:	00005010 	.word	0x00005010
    386c:	000037c1 	.word	0x000037c1
    3870:	00004b44 	.word	0x00004b44
    3874:	000037c7 	.word	0x000037c7

00003878 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
    3878:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    387c:	4605      	mov	r5, r0
    387e:	4688      	mov	r8, r1
    3880:	4616      	mov	r6, r2
    3882:	f855 3b04 	ldr.w	r3, [r5], #4
    3886:	4604      	mov	r4, r0
    3888:	681b      	ldr	r3, [r3, #0]
    388a:	4798      	blx	r3
    388c:	f7fd ff5a 	bl	1744 <core_util_critical_section_enter>
    3890:	f8d8 700c 	ldr.w	r7, [r8, #12]
    3894:	0130      	lsls	r0, r6, #4
    3896:	b197      	cbz	r7, 38be <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
    3898:	300c      	adds	r0, #12
    389a:	4641      	mov	r1, r8
    389c:	4420      	add	r0, r4
    389e:	f7ff ff2d 	bl	36fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
    38a2:	2201      	movs	r2, #1
    38a4:	4631      	mov	r1, r6
    38a6:	4628      	mov	r0, r5
    38a8:	f7ff fc26 	bl	30f8 <serial_irq_set>
    38ac:	f7fd ff60 	bl	1770 <core_util_critical_section_exit>
    38b0:	6823      	ldr	r3, [r4, #0]
    38b2:	4620      	mov	r0, r4
    38b4:	685b      	ldr	r3, [r3, #4]
    38b6:	4798      	blx	r3
    38b8:	b004      	add	sp, #16
    38ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    38be:	4b07      	ldr	r3, [pc, #28]	; (38dc <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
    38c0:	300c      	adds	r0, #12
    38c2:	9300      	str	r3, [sp, #0]
    38c4:	4b06      	ldr	r3, [pc, #24]	; (38e0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
    38c6:	4669      	mov	r1, sp
    38c8:	4420      	add	r0, r4
    38ca:	9303      	str	r3, [sp, #12]
    38cc:	f7ff ff16 	bl	36fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
    38d0:	4668      	mov	r0, sp
    38d2:	f7fc fd3e 	bl	352 <mbed::Callback<void ()>::~Callback()>
    38d6:	463a      	mov	r2, r7
    38d8:	e7e4      	b.n	38a4 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
    38da:	bf00      	nop
    38dc:	000037c1 	.word	0x000037c1
    38e0:	00004b44 	.word	0x00004b44

000038e4 <mbed::TimerEvent::irq(unsigned long)>:
    38e4:	6803      	ldr	r3, [r0, #0]
    38e6:	689b      	ldr	r3, [r3, #8]
    38e8:	4718      	bx	r3
	...

000038ec <mbed::TimerEvent::TimerEvent()>:
    38ec:	4b07      	ldr	r3, [pc, #28]	; (390c <mbed::TimerEvent::TimerEvent()+0x20>)
    38ee:	b510      	push	{r4, lr}
    38f0:	6003      	str	r3, [r0, #0]
    38f2:	2300      	movs	r3, #0
    38f4:	6043      	str	r3, [r0, #4]
    38f6:	6083      	str	r3, [r0, #8]
    38f8:	60c3      	str	r3, [r0, #12]
    38fa:	4604      	mov	r4, r0
    38fc:	f7fd fe46 	bl	158c <get_us_ticker_data>
    3900:	4903      	ldr	r1, [pc, #12]	; (3910 <mbed::TimerEvent::TimerEvent()+0x24>)
    3902:	6120      	str	r0, [r4, #16]
    3904:	f7fd fe4c 	bl	15a0 <ticker_set_handler>
    3908:	4620      	mov	r0, r4
    390a:	bd10      	pop	{r4, pc}
    390c:	00005028 	.word	0x00005028
    3910:	000038e5 	.word	0x000038e5

00003914 <mbed::TimerEvent::insert(unsigned long)>:
    3914:	4603      	mov	r3, r0
    3916:	460a      	mov	r2, r1
    3918:	1d01      	adds	r1, r0, #4
    391a:	6900      	ldr	r0, [r0, #16]
    391c:	f7fd be6c 	b.w	15f8 <ticker_insert_event>

00003920 <mbed::TimerEvent::remove()>:
    3920:	1d01      	adds	r1, r0, #4
    3922:	6900      	ldr	r0, [r0, #16]
    3924:	f7fd be89 	b.w	163a <ticker_remove_event>

00003928 <mbed::TimerEvent::~TimerEvent()>:
    3928:	b510      	push	{r4, lr}
    392a:	4604      	mov	r4, r0
    392c:	4b02      	ldr	r3, [pc, #8]	; (3938 <mbed::TimerEvent::~TimerEvent()+0x10>)
    392e:	6003      	str	r3, [r0, #0]
    3930:	f7ff fff6 	bl	3920 <mbed::TimerEvent::remove()>
    3934:	4620      	mov	r0, r4
    3936:	bd10      	pop	{r4, pc}
    3938:	00005028 	.word	0x00005028

0000393c <__wrap__malloc_r>:
    393c:	f000 bc58 	b.w	41f0 <_malloc_r>

00003940 <__wrap__realloc_r>:
    3940:	f000 bcb4 	b.w	42ac <_realloc_r>

00003944 <__wrap__free_r>:
    3944:	f000 bc08 	b.w	4158 <_free_r>

00003948 <wait_us>:
    3948:	b570      	push	{r4, r5, r6, lr}
    394a:	4605      	mov	r5, r0
    394c:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
    3950:	f7ff fd94 	bl	347c <us_ticker_read>
    3954:	fb95 f4f4 	sdiv	r4, r5, r4
    3958:	2c00      	cmp	r4, #0
    395a:	4606      	mov	r6, r0
    395c:	dd02      	ble.n	3964 <wait_us+0x1c>
    395e:	f7fd feea 	bl	1736 <core_util_are_interrupts_enabled>
    3962:	b928      	cbnz	r0, 3970 <wait_us+0x28>
    3964:	f7ff fd8a 	bl	347c <us_ticker_read>
    3968:	1b80      	subs	r0, r0, r6
    396a:	42a8      	cmp	r0, r5
    396c:	d3fa      	bcc.n	3964 <wait_us+0x1c>
    396e:	bd70      	pop	{r4, r5, r6, pc}
    3970:	4620      	mov	r0, r4
    3972:	f000 f935 	bl	3be0 <rtos::Thread::wait(unsigned long)>
    3976:	e7f5      	b.n	3964 <wait_us+0x1c>

00003978 <wait_ms>:
    3978:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    397c:	4358      	muls	r0, r3
    397e:	f7ff bfe3 	b.w	3948 <wait_us>
	...

00003984 <init_serial()>:
    3984:	b508      	push	{r3, lr}
    3986:	4b08      	ldr	r3, [pc, #32]	; (39a8 <init_serial()+0x24>)
    3988:	681b      	ldr	r3, [r3, #0]
    398a:	b95b      	cbnz	r3, 39a4 <init_serial()+0x20>
    398c:	4907      	ldr	r1, [pc, #28]	; (39ac <init_serial()+0x28>)
    398e:	4808      	ldr	r0, [pc, #32]	; (39b0 <init_serial()+0x2c>)
    3990:	4a08      	ldr	r2, [pc, #32]	; (39b4 <init_serial()+0x30>)
    3992:	f7ff fca1 	bl	32d8 <serial_init>
    3996:	f44f 5116 	mov.w	r1, #9600	; 0x2580
    399a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    399e:	4804      	ldr	r0, [pc, #16]	; (39b0 <init_serial()+0x2c>)
    39a0:	f7ff baca 	b.w	2f38 <serial_baud>
    39a4:	bd08      	pop	{r3, pc}
    39a6:	bf00      	nop
    39a8:	100019bc 	.word	0x100019bc
    39ac:	2009c002 	.word	0x2009c002
    39b0:	10002618 	.word	0x10002618
    39b4:	2009c003 	.word	0x2009c003

000039b8 <mbed_sdk_init>:
    39b8:	4770      	bx	lr
	...

000039bc <_close>:
    39bc:	2802      	cmp	r0, #2
    39be:	b510      	push	{r4, lr}
    39c0:	4604      	mov	r4, r0
    39c2:	dc01      	bgt.n	39c8 <_close+0xc>
    39c4:	2000      	movs	r0, #0
    39c6:	bd10      	pop	{r4, pc}
    39c8:	f000 f9c2 	bl	3d50 <__errno>
    39cc:	2309      	movs	r3, #9
    39ce:	2200      	movs	r2, #0
    39d0:	6003      	str	r3, [r0, #0]
    39d2:	4b09      	ldr	r3, [pc, #36]	; (39f8 <_close+0x3c>)
    39d4:	3c03      	subs	r4, #3
    39d6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    39da:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
    39de:	b140      	cbz	r0, 39f2 <_close+0x36>
    39e0:	6803      	ldr	r3, [r0, #0]
    39e2:	691b      	ldr	r3, [r3, #16]
    39e4:	4798      	blx	r3
    39e6:	1e04      	subs	r4, r0, #0
    39e8:	daec      	bge.n	39c4 <_close+0x8>
    39ea:	f000 f9b1 	bl	3d50 <__errno>
    39ee:	4264      	negs	r4, r4
    39f0:	6004      	str	r4, [r0, #0]
    39f2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    39f6:	bd10      	pop	{r4, pc}
    39f8:	10001aa4 	.word	0x10001aa4

000039fc <_write>:
    39fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    39fe:	4605      	mov	r5, r0
    3a00:	460e      	mov	r6, r1
    3a02:	4614      	mov	r4, r2
    3a04:	f000 f9a4 	bl	3d50 <__errno>
    3a08:	2309      	movs	r3, #9
    3a0a:	2d02      	cmp	r5, #2
    3a0c:	6003      	str	r3, [r0, #0]
    3a0e:	dc0f      	bgt.n	3a30 <_write+0x34>
    3a10:	4b12      	ldr	r3, [pc, #72]	; (3a5c <_write+0x60>)
    3a12:	681b      	ldr	r3, [r3, #0]
    3a14:	b90b      	cbnz	r3, 3a1a <_write+0x1e>
    3a16:	f7ff ffb5 	bl	3984 <init_serial()>
    3a1a:	4635      	mov	r5, r6
    3a1c:	1937      	adds	r7, r6, r4
    3a1e:	4e10      	ldr	r6, [pc, #64]	; (3a60 <_write+0x64>)
    3a20:	42bd      	cmp	r5, r7
    3a22:	d015      	beq.n	3a50 <_write+0x54>
    3a24:	f815 1b01 	ldrb.w	r1, [r5], #1
    3a28:	4630      	mov	r0, r6
    3a2a:	f7ff fbb9 	bl	31a0 <serial_putc>
    3a2e:	e7f7      	b.n	3a20 <_write+0x24>
    3a30:	4b0c      	ldr	r3, [pc, #48]	; (3a64 <_write+0x68>)
    3a32:	3d03      	subs	r5, #3
    3a34:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
    3a38:	b160      	cbz	r0, 3a54 <_write+0x58>
    3a3a:	6803      	ldr	r3, [r0, #0]
    3a3c:	4622      	mov	r2, r4
    3a3e:	68db      	ldr	r3, [r3, #12]
    3a40:	4631      	mov	r1, r6
    3a42:	4798      	blx	r3
    3a44:	1e04      	subs	r4, r0, #0
    3a46:	da03      	bge.n	3a50 <_write+0x54>
    3a48:	f000 f982 	bl	3d50 <__errno>
    3a4c:	4263      	negs	r3, r4
    3a4e:	6003      	str	r3, [r0, #0]
    3a50:	4620      	mov	r0, r4
    3a52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3a54:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
    3a58:	e7fa      	b.n	3a50 <_write+0x54>
    3a5a:	bf00      	nop
    3a5c:	100019bc 	.word	0x100019bc
    3a60:	10002618 	.word	0x10002618
    3a64:	10001aa4 	.word	0x10001aa4

00003a68 <_read>:
    3a68:	b570      	push	{r4, r5, r6, lr}
    3a6a:	4604      	mov	r4, r0
    3a6c:	460d      	mov	r5, r1
    3a6e:	4616      	mov	r6, r2
    3a70:	f000 f96e 	bl	3d50 <__errno>
    3a74:	2309      	movs	r3, #9
    3a76:	2c02      	cmp	r4, #2
    3a78:	6003      	str	r3, [r0, #0]
    3a7a:	dc0b      	bgt.n	3a94 <_read+0x2c>
    3a7c:	4b0f      	ldr	r3, [pc, #60]	; (3abc <_read+0x54>)
    3a7e:	681b      	ldr	r3, [r3, #0]
    3a80:	b90b      	cbnz	r3, 3a86 <_read+0x1e>
    3a82:	f7ff ff7f 	bl	3984 <init_serial()>
    3a86:	480e      	ldr	r0, [pc, #56]	; (3ac0 <_read+0x58>)
    3a88:	f7ff fb44 	bl	3114 <serial_getc>
    3a8c:	2401      	movs	r4, #1
    3a8e:	7028      	strb	r0, [r5, #0]
    3a90:	4620      	mov	r0, r4
    3a92:	bd70      	pop	{r4, r5, r6, pc}
    3a94:	4b0b      	ldr	r3, [pc, #44]	; (3ac4 <_read+0x5c>)
    3a96:	3c03      	subs	r4, #3
    3a98:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    3a9c:	b158      	cbz	r0, 3ab6 <_read+0x4e>
    3a9e:	6803      	ldr	r3, [r0, #0]
    3aa0:	4632      	mov	r2, r6
    3aa2:	689b      	ldr	r3, [r3, #8]
    3aa4:	4629      	mov	r1, r5
    3aa6:	4798      	blx	r3
    3aa8:	1e04      	subs	r4, r0, #0
    3aaa:	daf1      	bge.n	3a90 <_read+0x28>
    3aac:	f000 f950 	bl	3d50 <__errno>
    3ab0:	4263      	negs	r3, r4
    3ab2:	6003      	str	r3, [r0, #0]
    3ab4:	e7ec      	b.n	3a90 <_read+0x28>
    3ab6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
    3aba:	e7e9      	b.n	3a90 <_read+0x28>
    3abc:	100019bc 	.word	0x100019bc
    3ac0:	10002618 	.word	0x10002618
    3ac4:	10001aa4 	.word	0x10001aa4

00003ac8 <_lseek>:
    3ac8:	b570      	push	{r4, r5, r6, lr}
    3aca:	4604      	mov	r4, r0
    3acc:	460d      	mov	r5, r1
    3ace:	4616      	mov	r6, r2
    3ad0:	f000 f93e 	bl	3d50 <__errno>
    3ad4:	2309      	movs	r3, #9
    3ad6:	2c02      	cmp	r4, #2
    3ad8:	6003      	str	r3, [r0, #0]
    3ada:	dd0b      	ble.n	3af4 <_lseek+0x2c>
    3adc:	4b08      	ldr	r3, [pc, #32]	; (3b00 <_lseek+0x38>)
    3ade:	3c03      	subs	r4, #3
    3ae0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    3ae4:	b140      	cbz	r0, 3af8 <_lseek+0x30>
    3ae6:	6803      	ldr	r3, [r0, #0]
    3ae8:	4632      	mov	r2, r6
    3aea:	4629      	mov	r1, r5
    3aec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    3af0:	69db      	ldr	r3, [r3, #28]
    3af2:	4718      	bx	r3
    3af4:	2000      	movs	r0, #0
    3af6:	bd70      	pop	{r4, r5, r6, pc}
    3af8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    3afc:	bd70      	pop	{r4, r5, r6, pc}
    3afe:	bf00      	nop
    3b00:	10001aa4 	.word	0x10001aa4

00003b04 <software_init_hook>:
    3b04:	b508      	push	{r3, lr}
    3b06:	f7ff ff57 	bl	39b8 <mbed_sdk_init>
    3b0a:	f7fd ff09 	bl	1920 <software_init_hook_rtos>
    3b0e:	bd08      	pop	{r3, pc}

00003b10 <mbed_main>:
    3b10:	4770      	bx	lr

00003b12 <__wrap_main>:
    3b12:	b508      	push	{r3, lr}
    3b14:	f7ff fffc 	bl	3b10 <mbed_main>
    3b18:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    3b1c:	f7fd ba66 	b.w	fec <main>

00003b20 <_sbrk>:
    3b20:	4a0c      	ldr	r2, [pc, #48]	; (3b54 <_sbrk+0x34>)
    3b22:	b510      	push	{r4, lr}
    3b24:	6813      	ldr	r3, [r2, #0]
    3b26:	4418      	add	r0, r3
    3b28:	f3ef 8108 	mrs	r1, MSP
    3b2c:	4288      	cmp	r0, r1
    3b2e:	d305      	bcc.n	3b3c <_sbrk+0x1c>
    3b30:	220c      	movs	r2, #12
    3b32:	4b09      	ldr	r3, [pc, #36]	; (3b58 <_sbrk+0x38>)
    3b34:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    3b38:	601a      	str	r2, [r3, #0]
    3b3a:	bd10      	pop	{r4, pc}
    3b3c:	4907      	ldr	r1, [pc, #28]	; (3b5c <_sbrk+0x3c>)
    3b3e:	680c      	ldr	r4, [r1, #0]
    3b40:	b124      	cbz	r4, 3b4c <_sbrk+0x2c>
    3b42:	4907      	ldr	r1, [pc, #28]	; (3b60 <_sbrk+0x40>)
    3b44:	6809      	ldr	r1, [r1, #0]
    3b46:	4421      	add	r1, r4
    3b48:	4288      	cmp	r0, r1
    3b4a:	d2f1      	bcs.n	3b30 <_sbrk+0x10>
    3b4c:	6010      	str	r0, [r2, #0]
    3b4e:	4618      	mov	r0, r3
    3b50:	bd10      	pop	{r4, pc}
    3b52:	bf00      	nop
    3b54:	100000e8 	.word	0x100000e8
    3b58:	10002620 	.word	0x10002620
    3b5c:	10001ba4 	.word	0x10001ba4
    3b60:	10001ba8 	.word	0x10001ba8

00003b64 <_exit>:
    3b64:	4c09      	ldr	r4, [pc, #36]	; (3b8c <_exit+0x28>)
    3b66:	b508      	push	{r3, lr}
    3b68:	6823      	ldr	r3, [r4, #0]
    3b6a:	4605      	mov	r5, r0
    3b6c:	6898      	ldr	r0, [r3, #8]
    3b6e:	f000 f9a7 	bl	3ec0 <fflush>
    3b72:	6823      	ldr	r3, [r4, #0]
    3b74:	68d8      	ldr	r0, [r3, #12]
    3b76:	f000 f9a3 	bl	3ec0 <fflush>
    3b7a:	f7fd fdcb 	bl	1714 <mbed_interface_connected>
    3b7e:	b108      	cbz	r0, 3b84 <_exit+0x20>
    3b80:	f7fd fe0a 	bl	1798 <semihost_exit>
    3b84:	b10d      	cbz	r5, 3b8a <_exit+0x26>
    3b86:	f7fd fe27 	bl	17d8 <mbed_die>
    3b8a:	e7fe      	b.n	3b8a <_exit+0x26>
    3b8c:	100000ec 	.word	0x100000ec

00003b90 <__aeabi_atexit>:
    3b90:	2001      	movs	r0, #1
    3b92:	4770      	bx	lr

00003b94 <__wrap_exit>:
    3b94:	b508      	push	{r3, lr}
    3b96:	f7ff ffe5 	bl	3b64 <_exit>

00003b9a <__malloc_lock>:
    3b9a:	b508      	push	{r3, lr}
    3b9c:	f7fd fece 	bl	193c <__rtos_malloc_lock>
    3ba0:	bd08      	pop	{r3, pc}

00003ba2 <__malloc_unlock>:
    3ba2:	b508      	push	{r3, lr}
    3ba4:	f7fd fed2 	bl	194c <__rtos_malloc_unlock>
    3ba8:	bd08      	pop	{r3, pc}
	...

00003bac <operator new[](unsigned int)>:
    3bac:	b510      	push	{r4, lr}
    3bae:	f000 fa87 	bl	40c0 <malloc>
    3bb2:	4604      	mov	r4, r0
    3bb4:	b910      	cbnz	r0, 3bbc <operator new[](unsigned int)+0x10>
    3bb6:	4802      	ldr	r0, [pc, #8]	; (3bc0 <operator new[](unsigned int)+0x14>)
    3bb8:	f7fd fe4a 	bl	1850 <error>
    3bbc:	4620      	mov	r0, r4
    3bbe:	bd10      	pop	{r4, pc}
    3bc0:	00005034 	.word	0x00005034

00003bc4 <operator delete[](void*)>:
    3bc4:	b108      	cbz	r0, 3bca <operator delete[](void*)+0x6>
    3bc6:	f000 ba83 	b.w	40d0 <free>
    3bca:	4770      	bx	lr

00003bcc <operator delete(void*)>:
    3bcc:	f7ff bffa 	b.w	3bc4 <operator delete[](void*)>

00003bd0 <thread_terminate_hook>:
    3bd0:	4b02      	ldr	r3, [pc, #8]	; (3bdc <thread_terminate_hook+0xc>)
    3bd2:	681b      	ldr	r3, [r3, #0]
    3bd4:	b103      	cbz	r3, 3bd8 <thread_terminate_hook+0x8>
    3bd6:	4718      	bx	r3
    3bd8:	4770      	bx	lr
    3bda:	bf00      	nop
    3bdc:	10001bac 	.word	0x10001bac

00003be0 <rtos::Thread::wait(unsigned long)>:
    3be0:	f7fe bb72 	b.w	22c8 <osDelay>

00003be4 <rt_set_PSP>:
    3be4:	f380 8809 	msr	PSP, r0
    3be8:	4770      	bx	lr

00003bea <rt_get_PSP>:
    3bea:	f3ef 8009 	mrs	r0, PSP
    3bee:	4770      	bx	lr

00003bf0 <os_set_env>:
    3bf0:	4668      	mov	r0, sp
    3bf2:	f380 8809 	msr	PSP, r0
    3bf6:	483f      	ldr	r0, [pc, #252]	; (3cf4 <OS_Tick_Handler+0xc>)
    3bf8:	7800      	ldrb	r0, [r0, #0]
    3bfa:	07c0      	lsls	r0, r0, #31
    3bfc:	bf14      	ite	ne
    3bfe:	2002      	movne	r0, #2
    3c00:	2003      	moveq	r0, #3
    3c02:	f380 8814 	msr	CONTROL, r0
    3c06:	4770      	bx	lr

00003c08 <_alloc_box>:
    3c08:	f8df c0ec 	ldr.w	r12, [pc, #236]	; 3cf8 <OS_Tick_Handler+0x10>
    3c0c:	f3ef 8305 	mrs	r3, IPSR
    3c10:	061b      	lsls	r3, r3, #24
    3c12:	bf18      	it	ne
    3c14:	4760      	bxne	r12
    3c16:	f3ef 8314 	mrs	r3, CONTROL
    3c1a:	07db      	lsls	r3, r3, #31
    3c1c:	bf08      	it	eq
    3c1e:	4760      	bxeq	r12
    3c20:	df00      	svc	0
    3c22:	4770      	bx	lr

00003c24 <_free_box>:
    3c24:	f8df c0d4 	ldr.w	r12, [pc, #212]	; 3cfc <OS_Tick_Handler+0x14>
    3c28:	f3ef 8305 	mrs	r3, IPSR
    3c2c:	061b      	lsls	r3, r3, #24
    3c2e:	bf18      	it	ne
    3c30:	4760      	bxne	r12
    3c32:	f3ef 8314 	mrs	r3, CONTROL
    3c36:	07db      	lsls	r3, r3, #31
    3c38:	bf08      	it	eq
    3c3a:	4760      	bxeq	r12
    3c3c:	df00      	svc	0
    3c3e:	4770      	bx	lr

00003c40 <SVC_Handler>:
    3c40:	f3ef 8009 	mrs	r0, PSP
    3c44:	6981      	ldr	r1, [r0, #24]
    3c46:	f811 1c02 	ldrb.w	r1, [r1, #-2]
    3c4a:	b9f1      	cbnz	r1, 3c8a <SVC_User>
    3c4c:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
    3c50:	47e0      	blx	r12
    3c52:	f3ef 8c09 	mrs	r12, PSP
    3c56:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
    3c5a:	4b29      	ldr	r3, [pc, #164]	; (3d00 <OS_Tick_Handler+0x18>)
    3c5c:	e893 0006 	ldmia.w	r3, {r1, r2}
    3c60:	4291      	cmp	r1, r2
    3c62:	d00f      	beq.n	3c84 <SVC_Exit>
    3c64:	b139      	cbz	r1, 3c76 <SVC_Next>
    3c66:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
    3c6a:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
    3c6e:	b40c      	push	{r2, r3}
    3c70:	f7fd fff0 	bl	1c54 <rt_stk_check>
    3c74:	bc0c      	pop	{r2, r3}

00003c76 <SVC_Next>:
    3c76:	601a      	str	r2, [r3, #0]
    3c78:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
    3c7c:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
    3c80:	f38c 8809 	msr	PSP, r12

00003c84 <SVC_Exit>:
    3c84:	f06f 0e02 	mvn.w	lr, #2
    3c88:	4770      	bx	lr

00003c8a <SVC_User>:
    3c8a:	b510      	push	{r4, lr}
    3c8c:	4a1d      	ldr	r2, [pc, #116]	; (3d04 <OS_Tick_Handler+0x1c>)
    3c8e:	6812      	ldr	r2, [r2, #0]
    3c90:	4291      	cmp	r1, r2
    3c92:	d809      	bhi.n	3ca8 <SVC_Done>
    3c94:	4c1c      	ldr	r4, [pc, #112]	; (3d08 <OS_Tick_Handler+0x20>)
    3c96:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
    3c9a:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
    3c9e:	47a0      	blx	r4
    3ca0:	f3ef 8c09 	mrs	r12, PSP
    3ca4:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

00003ca8 <SVC_Done>:
    3ca8:	bd10      	pop	{r4, pc}

00003caa <PendSV_Handler>:
    3caa:	f7fd ff5f 	bl	1b6c <rt_pop_req>

00003cae <Sys_Switch>:
    3cae:	4b14      	ldr	r3, [pc, #80]	; (3d00 <OS_Tick_Handler+0x18>)
    3cb0:	e893 0006 	ldmia.w	r3, {r1, r2}
    3cb4:	4291      	cmp	r1, r2
    3cb6:	d010      	beq.n	3cda <Sys_Exit>
    3cb8:	f3ef 8c09 	mrs	r12, PSP
    3cbc:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
    3cc0:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
    3cc4:	b40c      	push	{r2, r3}
    3cc6:	f7fd ffc5 	bl	1c54 <rt_stk_check>
    3cca:	bc0c      	pop	{r2, r3}
    3ccc:	601a      	str	r2, [r3, #0]
    3cce:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
    3cd2:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
    3cd6:	f38c 8809 	msr	PSP, r12

00003cda <Sys_Exit>:
    3cda:	f06f 0e02 	mvn.w	lr, #2
    3cde:	4770      	bx	lr

00003ce0 <SysTick_Handler>:
    3ce0:	f7fd ff9a 	bl	1c18 <rt_systick>
    3ce4:	f7ff bfe3 	b.w	3cae <Sys_Switch>

00003ce8 <OS_Tick_Handler>:
    3ce8:	f7fd ff94 	bl	1c14 <os_tick_irqack>
    3cec:	f7fd ff94 	bl	1c18 <rt_systick>
    3cf0:	f7ff bfdd 	b.w	3cae <Sys_Switch>
    3cf4:	00004e7e 	.word	0x00004e7e
    3cf8:	00001d65 	.word	0x00001d65
    3cfc:	00001d7f 	.word	0x00001d7f
    3d00:	100025cc 	.word	0x100025cc
    3d04:	00000000 	.word	0x00000000
    3d08:	fffffffc 	.word	0xfffffffc

00003d0c <Reset_Handler>:
    3d0c:	4906      	ldr	r1, [pc, #24]	; (3d28 <Reset_Handler+0x1c>)
    3d0e:	4a07      	ldr	r2, [pc, #28]	; (3d2c <Reset_Handler+0x20>)
    3d10:	4b07      	ldr	r3, [pc, #28]	; (3d30 <Reset_Handler+0x24>)
    3d12:	429a      	cmp	r2, r3
    3d14:	bfbe      	ittt	lt
    3d16:	f851 0b04 	ldrlt.w	r0, [r1], #4
    3d1a:	f842 0b04 	strlt.w	r0, [r2], #4
    3d1e:	e7f8      	blt.n	3d12 <Reset_Handler+0x6>
    3d20:	4804      	ldr	r0, [pc, #16]	; (3d34 <Reset_Handler+0x28>)
    3d22:	4780      	blx	r0
    3d24:	4804      	ldr	r0, [pc, #16]	; (3d38 <Reset_Handler+0x2c>)
    3d26:	4700      	bx	r0
    3d28:	000050f8 	.word	0x000050f8
    3d2c:	100000c8 	.word	0x100000c8
    3d30:	1000015c 	.word	0x1000015c
    3d34:	00003595 	.word	0x00003595
    3d38:	00001131 	.word	0x00001131

00003d3c <NMI_Handler>:
    3d3c:	e7fe      	b.n	3d3c <NMI_Handler>

00003d3e <HardFault_Handler>:
    3d3e:	e7fe      	b.n	3d3e <HardFault_Handler>

00003d40 <MemManage_Handler>:
    3d40:	e7fe      	b.n	3d40 <MemManage_Handler>

00003d42 <BusFault_Handler>:
    3d42:	e7fe      	b.n	3d42 <BusFault_Handler>

00003d44 <UsageFault_Handler>:
    3d44:	e7fe      	b.n	3d44 <UsageFault_Handler>
    3d46:	e7fe      	b.n	3d46 <UsageFault_Handler+0x2>

00003d48 <DebugMon_Handler>:
    3d48:	e7fe      	b.n	3d48 <DebugMon_Handler>
    3d4a:	e7fe      	b.n	3d4a <DebugMon_Handler+0x2>
    3d4c:	e7fe      	b.n	3d4c <DebugMon_Handler+0x4>

00003d4e <ADC_IRQHandler>:
    3d4e:	e7fe      	b.n	3d4e <ADC_IRQHandler>

00003d50 <__errno>:
    3d50:	4b01      	ldr	r3, [pc, #4]	; (3d58 <__errno+0x8>)
    3d52:	6818      	ldr	r0, [r3, #0]
    3d54:	4770      	bx	lr
    3d56:	bf00      	nop
    3d58:	100000ec 	.word	0x100000ec

00003d5c <__sflush_r>:
    3d5c:	898a      	ldrh	r2, [r1, #12]
    3d5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3d62:	4605      	mov	r5, r0
    3d64:	0710      	lsls	r0, r2, #28
    3d66:	460c      	mov	r4, r1
    3d68:	d45a      	bmi.n	3e20 <__sflush_r+0xc4>
    3d6a:	684b      	ldr	r3, [r1, #4]
    3d6c:	2b00      	cmp	r3, #0
    3d6e:	dc05      	bgt.n	3d7c <__sflush_r+0x20>
    3d70:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    3d72:	2b00      	cmp	r3, #0
    3d74:	dc02      	bgt.n	3d7c <__sflush_r+0x20>
    3d76:	2000      	movs	r0, #0
    3d78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3d7c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    3d7e:	2e00      	cmp	r6, #0
    3d80:	d0f9      	beq.n	3d76 <__sflush_r+0x1a>
    3d82:	2300      	movs	r3, #0
    3d84:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
    3d88:	682f      	ldr	r7, [r5, #0]
    3d8a:	602b      	str	r3, [r5, #0]
    3d8c:	d033      	beq.n	3df6 <__sflush_r+0x9a>
    3d8e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    3d90:	89a3      	ldrh	r3, [r4, #12]
    3d92:	075a      	lsls	r2, r3, #29
    3d94:	d505      	bpl.n	3da2 <__sflush_r+0x46>
    3d96:	6863      	ldr	r3, [r4, #4]
    3d98:	1ac0      	subs	r0, r0, r3
    3d9a:	6b63      	ldr	r3, [r4, #52]	; 0x34
    3d9c:	b10b      	cbz	r3, 3da2 <__sflush_r+0x46>
    3d9e:	6c23      	ldr	r3, [r4, #64]	; 0x40
    3da0:	1ac0      	subs	r0, r0, r3
    3da2:	2300      	movs	r3, #0
    3da4:	4602      	mov	r2, r0
    3da6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    3da8:	6a21      	ldr	r1, [r4, #32]
    3daa:	4628      	mov	r0, r5
    3dac:	47b0      	blx	r6
    3dae:	1c43      	adds	r3, r0, #1
    3db0:	89a3      	ldrh	r3, [r4, #12]
    3db2:	d106      	bne.n	3dc2 <__sflush_r+0x66>
    3db4:	6829      	ldr	r1, [r5, #0]
    3db6:	291d      	cmp	r1, #29
    3db8:	d84b      	bhi.n	3e52 <__sflush_r+0xf6>
    3dba:	4a2b      	ldr	r2, [pc, #172]	; (3e68 <__sflush_r+0x10c>)
    3dbc:	40ca      	lsrs	r2, r1
    3dbe:	07d6      	lsls	r6, r2, #31
    3dc0:	d547      	bpl.n	3e52 <__sflush_r+0xf6>
    3dc2:	2200      	movs	r2, #0
    3dc4:	6062      	str	r2, [r4, #4]
    3dc6:	6922      	ldr	r2, [r4, #16]
    3dc8:	04d9      	lsls	r1, r3, #19
    3dca:	6022      	str	r2, [r4, #0]
    3dcc:	d504      	bpl.n	3dd8 <__sflush_r+0x7c>
    3dce:	1c42      	adds	r2, r0, #1
    3dd0:	d101      	bne.n	3dd6 <__sflush_r+0x7a>
    3dd2:	682b      	ldr	r3, [r5, #0]
    3dd4:	b903      	cbnz	r3, 3dd8 <__sflush_r+0x7c>
    3dd6:	6560      	str	r0, [r4, #84]	; 0x54
    3dd8:	6b61      	ldr	r1, [r4, #52]	; 0x34
    3dda:	602f      	str	r7, [r5, #0]
    3ddc:	2900      	cmp	r1, #0
    3dde:	d0ca      	beq.n	3d76 <__sflush_r+0x1a>
    3de0:	f104 0344 	add.w	r3, r4, #68	; 0x44
    3de4:	4299      	cmp	r1, r3
    3de6:	d002      	beq.n	3dee <__sflush_r+0x92>
    3de8:	4628      	mov	r0, r5
    3dea:	f7ff fdab 	bl	3944 <__wrap__free_r>
    3dee:	2000      	movs	r0, #0
    3df0:	6360      	str	r0, [r4, #52]	; 0x34
    3df2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3df6:	6a21      	ldr	r1, [r4, #32]
    3df8:	2301      	movs	r3, #1
    3dfa:	4628      	mov	r0, r5
    3dfc:	47b0      	blx	r6
    3dfe:	1c41      	adds	r1, r0, #1
    3e00:	d1c6      	bne.n	3d90 <__sflush_r+0x34>
    3e02:	682b      	ldr	r3, [r5, #0]
    3e04:	2b00      	cmp	r3, #0
    3e06:	d0c3      	beq.n	3d90 <__sflush_r+0x34>
    3e08:	2b1d      	cmp	r3, #29
    3e0a:	d001      	beq.n	3e10 <__sflush_r+0xb4>
    3e0c:	2b16      	cmp	r3, #22
    3e0e:	d101      	bne.n	3e14 <__sflush_r+0xb8>
    3e10:	602f      	str	r7, [r5, #0]
    3e12:	e7b0      	b.n	3d76 <__sflush_r+0x1a>
    3e14:	89a3      	ldrh	r3, [r4, #12]
    3e16:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    3e1a:	81a3      	strh	r3, [r4, #12]
    3e1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3e20:	690f      	ldr	r7, [r1, #16]
    3e22:	2f00      	cmp	r7, #0
    3e24:	d0a7      	beq.n	3d76 <__sflush_r+0x1a>
    3e26:	0793      	lsls	r3, r2, #30
    3e28:	bf18      	it	ne
    3e2a:	2300      	movne	r3, #0
    3e2c:	680e      	ldr	r6, [r1, #0]
    3e2e:	bf08      	it	eq
    3e30:	694b      	ldreq	r3, [r1, #20]
    3e32:	eba6 0807 	sub.w	r8, r6, r7
    3e36:	600f      	str	r7, [r1, #0]
    3e38:	608b      	str	r3, [r1, #8]
    3e3a:	f1b8 0f00 	cmp.w	r8, #0
    3e3e:	dd9a      	ble.n	3d76 <__sflush_r+0x1a>
    3e40:	4643      	mov	r3, r8
    3e42:	463a      	mov	r2, r7
    3e44:	6a21      	ldr	r1, [r4, #32]
    3e46:	4628      	mov	r0, r5
    3e48:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    3e4a:	47b0      	blx	r6
    3e4c:	2800      	cmp	r0, #0
    3e4e:	dc07      	bgt.n	3e60 <__sflush_r+0x104>
    3e50:	89a3      	ldrh	r3, [r4, #12]
    3e52:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    3e56:	81a3      	strh	r3, [r4, #12]
    3e58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    3e5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3e60:	4407      	add	r7, r0
    3e62:	eba8 0800 	sub.w	r8, r8, r0
    3e66:	e7e8      	b.n	3e3a <__sflush_r+0xde>
    3e68:	20400001 	.word	0x20400001

00003e6c <_fflush_r>:
    3e6c:	b538      	push	{r3, r4, r5, lr}
    3e6e:	690b      	ldr	r3, [r1, #16]
    3e70:	4605      	mov	r5, r0
    3e72:	460c      	mov	r4, r1
    3e74:	b1db      	cbz	r3, 3eae <_fflush_r+0x42>
    3e76:	b118      	cbz	r0, 3e80 <_fflush_r+0x14>
    3e78:	6983      	ldr	r3, [r0, #24]
    3e7a:	b90b      	cbnz	r3, 3e80 <_fflush_r+0x14>
    3e7c:	f000 f872 	bl	3f64 <__sinit>
    3e80:	4b0c      	ldr	r3, [pc, #48]	; (3eb4 <_fflush_r+0x48>)
    3e82:	429c      	cmp	r4, r3
    3e84:	d109      	bne.n	3e9a <_fflush_r+0x2e>
    3e86:	686c      	ldr	r4, [r5, #4]
    3e88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    3e8c:	b17b      	cbz	r3, 3eae <_fflush_r+0x42>
    3e8e:	4621      	mov	r1, r4
    3e90:	4628      	mov	r0, r5
    3e92:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    3e96:	f7ff bf61 	b.w	3d5c <__sflush_r>
    3e9a:	4b07      	ldr	r3, [pc, #28]	; (3eb8 <_fflush_r+0x4c>)
    3e9c:	429c      	cmp	r4, r3
    3e9e:	d101      	bne.n	3ea4 <_fflush_r+0x38>
    3ea0:	68ac      	ldr	r4, [r5, #8]
    3ea2:	e7f1      	b.n	3e88 <_fflush_r+0x1c>
    3ea4:	4b05      	ldr	r3, [pc, #20]	; (3ebc <_fflush_r+0x50>)
    3ea6:	429c      	cmp	r4, r3
    3ea8:	bf08      	it	eq
    3eaa:	68ec      	ldreq	r4, [r5, #12]
    3eac:	e7ec      	b.n	3e88 <_fflush_r+0x1c>
    3eae:	2000      	movs	r0, #0
    3eb0:	bd38      	pop	{r3, r4, r5, pc}
    3eb2:	bf00      	nop
    3eb4:	00005074 	.word	0x00005074
    3eb8:	00005094 	.word	0x00005094
    3ebc:	00005054 	.word	0x00005054

00003ec0 <fflush>:
    3ec0:	4601      	mov	r1, r0
    3ec2:	b920      	cbnz	r0, 3ece <fflush+0xe>
    3ec4:	4b04      	ldr	r3, [pc, #16]	; (3ed8 <fflush+0x18>)
    3ec6:	4905      	ldr	r1, [pc, #20]	; (3edc <fflush+0x1c>)
    3ec8:	6818      	ldr	r0, [r3, #0]
    3eca:	f000 b8b7 	b.w	403c <_fwalk_reent>
    3ece:	4b04      	ldr	r3, [pc, #16]	; (3ee0 <fflush+0x20>)
    3ed0:	6818      	ldr	r0, [r3, #0]
    3ed2:	f7ff bfcb 	b.w	3e6c <_fflush_r>
    3ed6:	bf00      	nop
    3ed8:	000050b4 	.word	0x000050b4
    3edc:	00003e6d 	.word	0x00003e6d
    3ee0:	100000ec 	.word	0x100000ec

00003ee4 <_cleanup_r>:
    3ee4:	4901      	ldr	r1, [pc, #4]	; (3eec <_cleanup_r+0x8>)
    3ee6:	f000 b8a9 	b.w	403c <_fwalk_reent>
    3eea:	bf00      	nop
    3eec:	00003e6d 	.word	0x00003e6d

00003ef0 <std.isra.0>:
    3ef0:	2300      	movs	r3, #0
    3ef2:	b510      	push	{r4, lr}
    3ef4:	4604      	mov	r4, r0
    3ef6:	6003      	str	r3, [r0, #0]
    3ef8:	6043      	str	r3, [r0, #4]
    3efa:	6083      	str	r3, [r0, #8]
    3efc:	8181      	strh	r1, [r0, #12]
    3efe:	6643      	str	r3, [r0, #100]	; 0x64
    3f00:	81c2      	strh	r2, [r0, #14]
    3f02:	6103      	str	r3, [r0, #16]
    3f04:	6143      	str	r3, [r0, #20]
    3f06:	6183      	str	r3, [r0, #24]
    3f08:	4619      	mov	r1, r3
    3f0a:	2208      	movs	r2, #8
    3f0c:	305c      	adds	r0, #92	; 0x5c
    3f0e:	f000 f91a 	bl	4146 <memset>
    3f12:	4b05      	ldr	r3, [pc, #20]	; (3f28 <std.isra.0+0x38>)
    3f14:	6224      	str	r4, [r4, #32]
    3f16:	6263      	str	r3, [r4, #36]	; 0x24
    3f18:	4b04      	ldr	r3, [pc, #16]	; (3f2c <std.isra.0+0x3c>)
    3f1a:	62a3      	str	r3, [r4, #40]	; 0x28
    3f1c:	4b04      	ldr	r3, [pc, #16]	; (3f30 <std.isra.0+0x40>)
    3f1e:	62e3      	str	r3, [r4, #44]	; 0x2c
    3f20:	4b04      	ldr	r3, [pc, #16]	; (3f34 <std.isra.0+0x44>)
    3f22:	6323      	str	r3, [r4, #48]	; 0x30
    3f24:	bd10      	pop	{r4, pc}
    3f26:	bf00      	nop
    3f28:	00004659 	.word	0x00004659
    3f2c:	0000467b 	.word	0x0000467b
    3f30:	000046b3 	.word	0x000046b3
    3f34:	000046d7 	.word	0x000046d7

00003f38 <__sfmoreglue>:
    3f38:	b570      	push	{r4, r5, r6, lr}
    3f3a:	2568      	movs	r5, #104	; 0x68
    3f3c:	1e4a      	subs	r2, r1, #1
    3f3e:	4355      	muls	r5, r2
    3f40:	460e      	mov	r6, r1
    3f42:	f105 0174 	add.w	r1, r5, #116	; 0x74
    3f46:	f7ff fcf9 	bl	393c <__wrap__malloc_r>
    3f4a:	4604      	mov	r4, r0
    3f4c:	b140      	cbz	r0, 3f60 <__sfmoreglue+0x28>
    3f4e:	2100      	movs	r1, #0
    3f50:	e880 0042 	stmia.w	r0, {r1, r6}
    3f54:	300c      	adds	r0, #12
    3f56:	60a0      	str	r0, [r4, #8]
    3f58:	f105 0268 	add.w	r2, r5, #104	; 0x68
    3f5c:	f000 f8f3 	bl	4146 <memset>
    3f60:	4620      	mov	r0, r4
    3f62:	bd70      	pop	{r4, r5, r6, pc}

00003f64 <__sinit>:
    3f64:	6983      	ldr	r3, [r0, #24]
    3f66:	b510      	push	{r4, lr}
    3f68:	4604      	mov	r4, r0
    3f6a:	bb33      	cbnz	r3, 3fba <__sinit+0x56>
    3f6c:	6483      	str	r3, [r0, #72]	; 0x48
    3f6e:	64c3      	str	r3, [r0, #76]	; 0x4c
    3f70:	6503      	str	r3, [r0, #80]	; 0x50
    3f72:	4b12      	ldr	r3, [pc, #72]	; (3fbc <__sinit+0x58>)
    3f74:	4a12      	ldr	r2, [pc, #72]	; (3fc0 <__sinit+0x5c>)
    3f76:	681b      	ldr	r3, [r3, #0]
    3f78:	6282      	str	r2, [r0, #40]	; 0x28
    3f7a:	4298      	cmp	r0, r3
    3f7c:	bf04      	itt	eq
    3f7e:	2301      	moveq	r3, #1
    3f80:	6183      	streq	r3, [r0, #24]
    3f82:	f000 f81f 	bl	3fc4 <__sfp>
    3f86:	6060      	str	r0, [r4, #4]
    3f88:	4620      	mov	r0, r4
    3f8a:	f000 f81b 	bl	3fc4 <__sfp>
    3f8e:	60a0      	str	r0, [r4, #8]
    3f90:	4620      	mov	r0, r4
    3f92:	f000 f817 	bl	3fc4 <__sfp>
    3f96:	2200      	movs	r2, #0
    3f98:	60e0      	str	r0, [r4, #12]
    3f9a:	2104      	movs	r1, #4
    3f9c:	6860      	ldr	r0, [r4, #4]
    3f9e:	f7ff ffa7 	bl	3ef0 <std.isra.0>
    3fa2:	2201      	movs	r2, #1
    3fa4:	2109      	movs	r1, #9
    3fa6:	68a0      	ldr	r0, [r4, #8]
    3fa8:	f7ff ffa2 	bl	3ef0 <std.isra.0>
    3fac:	2202      	movs	r2, #2
    3fae:	2112      	movs	r1, #18
    3fb0:	68e0      	ldr	r0, [r4, #12]
    3fb2:	f7ff ff9d 	bl	3ef0 <std.isra.0>
    3fb6:	2301      	movs	r3, #1
    3fb8:	61a3      	str	r3, [r4, #24]
    3fba:	bd10      	pop	{r4, pc}
    3fbc:	000050b4 	.word	0x000050b4
    3fc0:	00003ee5 	.word	0x00003ee5

00003fc4 <__sfp>:
    3fc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3fc6:	4b1c      	ldr	r3, [pc, #112]	; (4038 <__sfp+0x74>)
    3fc8:	4607      	mov	r7, r0
    3fca:	681e      	ldr	r6, [r3, #0]
    3fcc:	69b3      	ldr	r3, [r6, #24]
    3fce:	b913      	cbnz	r3, 3fd6 <__sfp+0x12>
    3fd0:	4630      	mov	r0, r6
    3fd2:	f7ff ffc7 	bl	3f64 <__sinit>
    3fd6:	3648      	adds	r6, #72	; 0x48
    3fd8:	68b4      	ldr	r4, [r6, #8]
    3fda:	6873      	ldr	r3, [r6, #4]
    3fdc:	3b01      	subs	r3, #1
    3fde:	d503      	bpl.n	3fe8 <__sfp+0x24>
    3fe0:	6833      	ldr	r3, [r6, #0]
    3fe2:	b133      	cbz	r3, 3ff2 <__sfp+0x2e>
    3fe4:	6836      	ldr	r6, [r6, #0]
    3fe6:	e7f7      	b.n	3fd8 <__sfp+0x14>
    3fe8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
    3fec:	b16d      	cbz	r5, 400a <__sfp+0x46>
    3fee:	3468      	adds	r4, #104	; 0x68
    3ff0:	e7f4      	b.n	3fdc <__sfp+0x18>
    3ff2:	2104      	movs	r1, #4
    3ff4:	4638      	mov	r0, r7
    3ff6:	f7ff ff9f 	bl	3f38 <__sfmoreglue>
    3ffa:	6030      	str	r0, [r6, #0]
    3ffc:	2800      	cmp	r0, #0
    3ffe:	d1f1      	bne.n	3fe4 <__sfp+0x20>
    4000:	230c      	movs	r3, #12
    4002:	4604      	mov	r4, r0
    4004:	603b      	str	r3, [r7, #0]
    4006:	4620      	mov	r0, r4
    4008:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    400a:	f64f 73ff 	movw	r3, #65535	; 0xffff
    400e:	81e3      	strh	r3, [r4, #14]
    4010:	2301      	movs	r3, #1
    4012:	6665      	str	r5, [r4, #100]	; 0x64
    4014:	81a3      	strh	r3, [r4, #12]
    4016:	6025      	str	r5, [r4, #0]
    4018:	60a5      	str	r5, [r4, #8]
    401a:	6065      	str	r5, [r4, #4]
    401c:	6125      	str	r5, [r4, #16]
    401e:	6165      	str	r5, [r4, #20]
    4020:	61a5      	str	r5, [r4, #24]
    4022:	2208      	movs	r2, #8
    4024:	4629      	mov	r1, r5
    4026:	f104 005c 	add.w	r0, r4, #92	; 0x5c
    402a:	f000 f88c 	bl	4146 <memset>
    402e:	6365      	str	r5, [r4, #52]	; 0x34
    4030:	63a5      	str	r5, [r4, #56]	; 0x38
    4032:	64a5      	str	r5, [r4, #72]	; 0x48
    4034:	64e5      	str	r5, [r4, #76]	; 0x4c
    4036:	e7e6      	b.n	4006 <__sfp+0x42>
    4038:	000050b4 	.word	0x000050b4

0000403c <_fwalk_reent>:
    403c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    4040:	4680      	mov	r8, r0
    4042:	4689      	mov	r9, r1
    4044:	2600      	movs	r6, #0
    4046:	f100 0448 	add.w	r4, r0, #72	; 0x48
    404a:	b914      	cbnz	r4, 4052 <_fwalk_reent+0x16>
    404c:	4630      	mov	r0, r6
    404e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    4052:	68a5      	ldr	r5, [r4, #8]
    4054:	6867      	ldr	r7, [r4, #4]
    4056:	3f01      	subs	r7, #1
    4058:	d501      	bpl.n	405e <_fwalk_reent+0x22>
    405a:	6824      	ldr	r4, [r4, #0]
    405c:	e7f5      	b.n	404a <_fwalk_reent+0xe>
    405e:	89ab      	ldrh	r3, [r5, #12]
    4060:	2b01      	cmp	r3, #1
    4062:	d907      	bls.n	4074 <_fwalk_reent+0x38>
    4064:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    4068:	3301      	adds	r3, #1
    406a:	d003      	beq.n	4074 <_fwalk_reent+0x38>
    406c:	4629      	mov	r1, r5
    406e:	4640      	mov	r0, r8
    4070:	47c8      	blx	r9
    4072:	4306      	orrs	r6, r0
    4074:	3568      	adds	r5, #104	; 0x68
    4076:	e7ee      	b.n	4056 <_fwalk_reent+0x1a>

00004078 <__libc_init_array>:
    4078:	b570      	push	{r4, r5, r6, lr}
    407a:	2500      	movs	r5, #0
    407c:	4e0c      	ldr	r6, [pc, #48]	; (40b0 <__libc_init_array+0x38>)
    407e:	4c0d      	ldr	r4, [pc, #52]	; (40b4 <__libc_init_array+0x3c>)
    4080:	1ba4      	subs	r4, r4, r6
    4082:	10a4      	asrs	r4, r4, #2
    4084:	42a5      	cmp	r5, r4
    4086:	d109      	bne.n	409c <__libc_init_array+0x24>
    4088:	f000 fcf2 	bl	4a70 <_init>
    408c:	2500      	movs	r5, #0
    408e:	4e0a      	ldr	r6, [pc, #40]	; (40b8 <__libc_init_array+0x40>)
    4090:	4c0a      	ldr	r4, [pc, #40]	; (40bc <__libc_init_array+0x44>)
    4092:	1ba4      	subs	r4, r4, r6
    4094:	10a4      	asrs	r4, r4, #2
    4096:	42a5      	cmp	r5, r4
    4098:	d105      	bne.n	40a6 <__libc_init_array+0x2e>
    409a:	bd70      	pop	{r4, r5, r6, pc}
    409c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
    40a0:	4798      	blx	r3
    40a2:	3501      	adds	r5, #1
    40a4:	e7ee      	b.n	4084 <__libc_init_array+0xc>
    40a6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
    40aa:	4798      	blx	r3
    40ac:	3501      	adds	r5, #1
    40ae:	e7f2      	b.n	4096 <__libc_init_array+0x1e>
    40b0:	10000150 	.word	0x10000150
    40b4:	10000150 	.word	0x10000150
    40b8:	10000150 	.word	0x10000150
    40bc:	10000158 	.word	0x10000158

000040c0 <malloc>:
    40c0:	4b02      	ldr	r3, [pc, #8]	; (40cc <malloc+0xc>)
    40c2:	4601      	mov	r1, r0
    40c4:	6818      	ldr	r0, [r3, #0]
    40c6:	f7ff bc39 	b.w	393c <__wrap__malloc_r>
    40ca:	bf00      	nop
    40cc:	100000ec 	.word	0x100000ec

000040d0 <free>:
    40d0:	4b02      	ldr	r3, [pc, #8]	; (40dc <free+0xc>)
    40d2:	4601      	mov	r1, r0
    40d4:	6818      	ldr	r0, [r3, #0]
    40d6:	f7ff bc35 	b.w	3944 <__wrap__free_r>
    40da:	bf00      	nop
    40dc:	100000ec 	.word	0x100000ec

000040e0 <memchr>:
    40e0:	b510      	push	{r4, lr}
    40e2:	b2c9      	uxtb	r1, r1
    40e4:	4402      	add	r2, r0
    40e6:	4290      	cmp	r0, r2
    40e8:	4603      	mov	r3, r0
    40ea:	d101      	bne.n	40f0 <memchr+0x10>
    40ec:	2000      	movs	r0, #0
    40ee:	bd10      	pop	{r4, pc}
    40f0:	781c      	ldrb	r4, [r3, #0]
    40f2:	3001      	adds	r0, #1
    40f4:	428c      	cmp	r4, r1
    40f6:	d1f6      	bne.n	40e6 <memchr+0x6>
    40f8:	4618      	mov	r0, r3
    40fa:	bd10      	pop	{r4, pc}

000040fc <memcpy>:
    40fc:	b510      	push	{r4, lr}
    40fe:	1e43      	subs	r3, r0, #1
    4100:	440a      	add	r2, r1
    4102:	4291      	cmp	r1, r2
    4104:	d100      	bne.n	4108 <memcpy+0xc>
    4106:	bd10      	pop	{r4, pc}
    4108:	f811 4b01 	ldrb.w	r4, [r1], #1
    410c:	f803 4f01 	strb.w	r4, [r3, #1]!
    4110:	e7f7      	b.n	4102 <memcpy+0x6>

00004112 <memmove>:
    4112:	4288      	cmp	r0, r1
    4114:	b510      	push	{r4, lr}
    4116:	eb01 0302 	add.w	r3, r1, r2
    411a:	d803      	bhi.n	4124 <memmove+0x12>
    411c:	1e42      	subs	r2, r0, #1
    411e:	4299      	cmp	r1, r3
    4120:	d10c      	bne.n	413c <memmove+0x2a>
    4122:	bd10      	pop	{r4, pc}
    4124:	4298      	cmp	r0, r3
    4126:	d2f9      	bcs.n	411c <memmove+0xa>
    4128:	1881      	adds	r1, r0, r2
    412a:	1ad2      	subs	r2, r2, r3
    412c:	42d3      	cmn	r3, r2
    412e:	d100      	bne.n	4132 <memmove+0x20>
    4130:	bd10      	pop	{r4, pc}
    4132:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
    4136:	f801 4d01 	strb.w	r4, [r1, #-1]!
    413a:	e7f7      	b.n	412c <memmove+0x1a>
    413c:	f811 4b01 	ldrb.w	r4, [r1], #1
    4140:	f802 4f01 	strb.w	r4, [r2, #1]!
    4144:	e7eb      	b.n	411e <memmove+0xc>

00004146 <memset>:
    4146:	4603      	mov	r3, r0
    4148:	4402      	add	r2, r0
    414a:	4293      	cmp	r3, r2
    414c:	d100      	bne.n	4150 <memset+0xa>
    414e:	4770      	bx	lr
    4150:	f803 1b01 	strb.w	r1, [r3], #1
    4154:	e7f9      	b.n	414a <memset+0x4>
	...

00004158 <_free_r>:
    4158:	b538      	push	{r3, r4, r5, lr}
    415a:	4605      	mov	r5, r0
    415c:	2900      	cmp	r1, #0
    415e:	d043      	beq.n	41e8 <_free_r+0x90>
    4160:	f851 3c04 	ldr.w	r3, [r1, #-4]
    4164:	1f0c      	subs	r4, r1, #4
    4166:	2b00      	cmp	r3, #0
    4168:	bfb8      	it	lt
    416a:	18e4      	addlt	r4, r4, r3
    416c:	f7ff fd15 	bl	3b9a <__malloc_lock>
    4170:	4a1e      	ldr	r2, [pc, #120]	; (41ec <_free_r+0x94>)
    4172:	6813      	ldr	r3, [r2, #0]
    4174:	4610      	mov	r0, r2
    4176:	b933      	cbnz	r3, 4186 <_free_r+0x2e>
    4178:	6063      	str	r3, [r4, #4]
    417a:	6014      	str	r4, [r2, #0]
    417c:	4628      	mov	r0, r5
    417e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    4182:	f7ff bd0e 	b.w	3ba2 <__malloc_unlock>
    4186:	42a3      	cmp	r3, r4
    4188:	d90b      	bls.n	41a2 <_free_r+0x4a>
    418a:	6821      	ldr	r1, [r4, #0]
    418c:	1862      	adds	r2, r4, r1
    418e:	4293      	cmp	r3, r2
    4190:	bf01      	itttt	eq
    4192:	681a      	ldreq	r2, [r3, #0]
    4194:	685b      	ldreq	r3, [r3, #4]
    4196:	1852      	addeq	r2, r2, r1
    4198:	6022      	streq	r2, [r4, #0]
    419a:	6063      	str	r3, [r4, #4]
    419c:	6004      	str	r4, [r0, #0]
    419e:	e7ed      	b.n	417c <_free_r+0x24>
    41a0:	4613      	mov	r3, r2
    41a2:	685a      	ldr	r2, [r3, #4]
    41a4:	b10a      	cbz	r2, 41aa <_free_r+0x52>
    41a6:	42a2      	cmp	r2, r4
    41a8:	d9fa      	bls.n	41a0 <_free_r+0x48>
    41aa:	6819      	ldr	r1, [r3, #0]
    41ac:	1858      	adds	r0, r3, r1
    41ae:	42a0      	cmp	r0, r4
    41b0:	d10b      	bne.n	41ca <_free_r+0x72>
    41b2:	6820      	ldr	r0, [r4, #0]
    41b4:	4401      	add	r1, r0
    41b6:	1858      	adds	r0, r3, r1
    41b8:	4282      	cmp	r2, r0
    41ba:	6019      	str	r1, [r3, #0]
    41bc:	d1de      	bne.n	417c <_free_r+0x24>
    41be:	6810      	ldr	r0, [r2, #0]
    41c0:	6852      	ldr	r2, [r2, #4]
    41c2:	4401      	add	r1, r0
    41c4:	6019      	str	r1, [r3, #0]
    41c6:	605a      	str	r2, [r3, #4]
    41c8:	e7d8      	b.n	417c <_free_r+0x24>
    41ca:	d902      	bls.n	41d2 <_free_r+0x7a>
    41cc:	230c      	movs	r3, #12
    41ce:	602b      	str	r3, [r5, #0]
    41d0:	e7d4      	b.n	417c <_free_r+0x24>
    41d2:	6820      	ldr	r0, [r4, #0]
    41d4:	1821      	adds	r1, r4, r0
    41d6:	428a      	cmp	r2, r1
    41d8:	bf01      	itttt	eq
    41da:	6811      	ldreq	r1, [r2, #0]
    41dc:	6852      	ldreq	r2, [r2, #4]
    41de:	1809      	addeq	r1, r1, r0
    41e0:	6021      	streq	r1, [r4, #0]
    41e2:	6062      	str	r2, [r4, #4]
    41e4:	605c      	str	r4, [r3, #4]
    41e6:	e7c9      	b.n	417c <_free_r+0x24>
    41e8:	bd38      	pop	{r3, r4, r5, pc}
    41ea:	bf00      	nop
    41ec:	10001bb0 	.word	0x10001bb0

000041f0 <_malloc_r>:
    41f0:	b570      	push	{r4, r5, r6, lr}
    41f2:	1ccd      	adds	r5, r1, #3
    41f4:	f025 0503 	bic.w	r5, r5, #3
    41f8:	3508      	adds	r5, #8
    41fa:	2d0c      	cmp	r5, #12
    41fc:	bf38      	it	cc
    41fe:	250c      	movcc	r5, #12
    4200:	2d00      	cmp	r5, #0
    4202:	4606      	mov	r6, r0
    4204:	db01      	blt.n	420a <_malloc_r+0x1a>
    4206:	42a9      	cmp	r1, r5
    4208:	d903      	bls.n	4212 <_malloc_r+0x22>
    420a:	230c      	movs	r3, #12
    420c:	6033      	str	r3, [r6, #0]
    420e:	2000      	movs	r0, #0
    4210:	bd70      	pop	{r4, r5, r6, pc}
    4212:	f7ff fcc2 	bl	3b9a <__malloc_lock>
    4216:	4a23      	ldr	r2, [pc, #140]	; (42a4 <_malloc_r+0xb4>)
    4218:	6814      	ldr	r4, [r2, #0]
    421a:	4621      	mov	r1, r4
    421c:	b991      	cbnz	r1, 4244 <_malloc_r+0x54>
    421e:	4c22      	ldr	r4, [pc, #136]	; (42a8 <_malloc_r+0xb8>)
    4220:	6823      	ldr	r3, [r4, #0]
    4222:	b91b      	cbnz	r3, 422c <_malloc_r+0x3c>
    4224:	4630      	mov	r0, r6
    4226:	f000 fa07 	bl	4638 <_sbrk_r>
    422a:	6020      	str	r0, [r4, #0]
    422c:	4629      	mov	r1, r5
    422e:	4630      	mov	r0, r6
    4230:	f000 fa02 	bl	4638 <_sbrk_r>
    4234:	1c43      	adds	r3, r0, #1
    4236:	d126      	bne.n	4286 <_malloc_r+0x96>
    4238:	230c      	movs	r3, #12
    423a:	4630      	mov	r0, r6
    423c:	6033      	str	r3, [r6, #0]
    423e:	f7ff fcb0 	bl	3ba2 <__malloc_unlock>
    4242:	e7e4      	b.n	420e <_malloc_r+0x1e>
    4244:	680b      	ldr	r3, [r1, #0]
    4246:	1b5b      	subs	r3, r3, r5
    4248:	d41a      	bmi.n	4280 <_malloc_r+0x90>
    424a:	2b0b      	cmp	r3, #11
    424c:	d90f      	bls.n	426e <_malloc_r+0x7e>
    424e:	600b      	str	r3, [r1, #0]
    4250:	18cc      	adds	r4, r1, r3
    4252:	50cd      	str	r5, [r1, r3]
    4254:	4630      	mov	r0, r6
    4256:	f7ff fca4 	bl	3ba2 <__malloc_unlock>
    425a:	f104 000b 	add.w	r0, r4, #11
    425e:	1d23      	adds	r3, r4, #4
    4260:	f020 0007 	bic.w	r0, r0, #7
    4264:	1ac3      	subs	r3, r0, r3
    4266:	d01b      	beq.n	42a0 <_malloc_r+0xb0>
    4268:	425a      	negs	r2, r3
    426a:	50e2      	str	r2, [r4, r3]
    426c:	bd70      	pop	{r4, r5, r6, pc}
    426e:	428c      	cmp	r4, r1
    4270:	bf0b      	itete	eq
    4272:	6863      	ldreq	r3, [r4, #4]
    4274:	684b      	ldrne	r3, [r1, #4]
    4276:	6013      	streq	r3, [r2, #0]
    4278:	6063      	strne	r3, [r4, #4]
    427a:	bf18      	it	ne
    427c:	460c      	movne	r4, r1
    427e:	e7e9      	b.n	4254 <_malloc_r+0x64>
    4280:	460c      	mov	r4, r1
    4282:	6849      	ldr	r1, [r1, #4]
    4284:	e7ca      	b.n	421c <_malloc_r+0x2c>
    4286:	1cc4      	adds	r4, r0, #3
    4288:	f024 0403 	bic.w	r4, r4, #3
    428c:	42a0      	cmp	r0, r4
    428e:	d005      	beq.n	429c <_malloc_r+0xac>
    4290:	1a21      	subs	r1, r4, r0
    4292:	4630      	mov	r0, r6
    4294:	f000 f9d0 	bl	4638 <_sbrk_r>
    4298:	3001      	adds	r0, #1
    429a:	d0cd      	beq.n	4238 <_malloc_r+0x48>
    429c:	6025      	str	r5, [r4, #0]
    429e:	e7d9      	b.n	4254 <_malloc_r+0x64>
    42a0:	bd70      	pop	{r4, r5, r6, pc}
    42a2:	bf00      	nop
    42a4:	10001bb0 	.word	0x10001bb0
    42a8:	10001bb4 	.word	0x10001bb4

000042ac <_realloc_r>:
    42ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    42ae:	4607      	mov	r7, r0
    42b0:	4614      	mov	r4, r2
    42b2:	460e      	mov	r6, r1
    42b4:	b921      	cbnz	r1, 42c0 <_realloc_r+0x14>
    42b6:	4611      	mov	r1, r2
    42b8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    42bc:	f7ff bb3e 	b.w	393c <__wrap__malloc_r>
    42c0:	b922      	cbnz	r2, 42cc <_realloc_r+0x20>
    42c2:	f7ff fb3f 	bl	3944 <__wrap__free_r>
    42c6:	4625      	mov	r5, r4
    42c8:	4628      	mov	r0, r5
    42ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    42cc:	f000 fa66 	bl	479c <_malloc_usable_size_r>
    42d0:	4284      	cmp	r4, r0
    42d2:	d90f      	bls.n	42f4 <_realloc_r+0x48>
    42d4:	4621      	mov	r1, r4
    42d6:	4638      	mov	r0, r7
    42d8:	f7ff fb30 	bl	393c <__wrap__malloc_r>
    42dc:	4605      	mov	r5, r0
    42de:	2800      	cmp	r0, #0
    42e0:	d0f2      	beq.n	42c8 <_realloc_r+0x1c>
    42e2:	4631      	mov	r1, r6
    42e4:	4622      	mov	r2, r4
    42e6:	f7ff ff09 	bl	40fc <memcpy>
    42ea:	4631      	mov	r1, r6
    42ec:	4638      	mov	r0, r7
    42ee:	f7ff fb29 	bl	3944 <__wrap__free_r>
    42f2:	e7e9      	b.n	42c8 <_realloc_r+0x1c>
    42f4:	4635      	mov	r5, r6
    42f6:	e7e7      	b.n	42c8 <_realloc_r+0x1c>

000042f8 <_printf_common>:
    42f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    42fc:	4691      	mov	r9, r2
    42fe:	461f      	mov	r7, r3
    4300:	688a      	ldr	r2, [r1, #8]
    4302:	690b      	ldr	r3, [r1, #16]
    4304:	4606      	mov	r6, r0
    4306:	4293      	cmp	r3, r2
    4308:	bfb8      	it	lt
    430a:	4613      	movlt	r3, r2
    430c:	f8c9 3000 	str.w	r3, [r9]
    4310:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
    4314:	460c      	mov	r4, r1
    4316:	f8dd 8020 	ldr.w	r8, [sp, #32]
    431a:	b112      	cbz	r2, 4322 <_printf_common+0x2a>
    431c:	3301      	adds	r3, #1
    431e:	f8c9 3000 	str.w	r3, [r9]
    4322:	6823      	ldr	r3, [r4, #0]
    4324:	0699      	lsls	r1, r3, #26
    4326:	bf42      	ittt	mi
    4328:	f8d9 3000 	ldrmi.w	r3, [r9]
    432c:	3302      	addmi	r3, #2
    432e:	f8c9 3000 	strmi.w	r3, [r9]
    4332:	6825      	ldr	r5, [r4, #0]
    4334:	f015 0506 	ands.w	r5, r5, #6
    4338:	d107      	bne.n	434a <_printf_common+0x52>
    433a:	f104 0a19 	add.w	r10, r4, #25
    433e:	68e3      	ldr	r3, [r4, #12]
    4340:	f8d9 2000 	ldr.w	r2, [r9]
    4344:	1a9b      	subs	r3, r3, r2
    4346:	429d      	cmp	r5, r3
    4348:	db2a      	blt.n	43a0 <_printf_common+0xa8>
    434a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
    434e:	6822      	ldr	r2, [r4, #0]
    4350:	3300      	adds	r3, #0
    4352:	bf18      	it	ne
    4354:	2301      	movne	r3, #1
    4356:	0692      	lsls	r2, r2, #26
    4358:	d42f      	bmi.n	43ba <_printf_common+0xc2>
    435a:	f104 0243 	add.w	r2, r4, #67	; 0x43
    435e:	4639      	mov	r1, r7
    4360:	4630      	mov	r0, r6
    4362:	47c0      	blx	r8
    4364:	3001      	adds	r0, #1
    4366:	d022      	beq.n	43ae <_printf_common+0xb6>
    4368:	6823      	ldr	r3, [r4, #0]
    436a:	68e5      	ldr	r5, [r4, #12]
    436c:	f003 0306 	and.w	r3, r3, #6
    4370:	2b04      	cmp	r3, #4
    4372:	bf18      	it	ne
    4374:	2500      	movne	r5, #0
    4376:	f8d9 2000 	ldr.w	r2, [r9]
    437a:	f04f 0900 	mov.w	r9, #0
    437e:	bf08      	it	eq
    4380:	1aad      	subeq	r5, r5, r2
    4382:	68a3      	ldr	r3, [r4, #8]
    4384:	6922      	ldr	r2, [r4, #16]
    4386:	bf08      	it	eq
    4388:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
    438c:	4293      	cmp	r3, r2
    438e:	bfc4      	itt	gt
    4390:	1a9b      	subgt	r3, r3, r2
    4392:	18ed      	addgt	r5, r5, r3
    4394:	341a      	adds	r4, #26
    4396:	454d      	cmp	r5, r9
    4398:	d11b      	bne.n	43d2 <_printf_common+0xda>
    439a:	2000      	movs	r0, #0
    439c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
    43a0:	2301      	movs	r3, #1
    43a2:	4652      	mov	r2, r10
    43a4:	4639      	mov	r1, r7
    43a6:	4630      	mov	r0, r6
    43a8:	47c0      	blx	r8
    43aa:	3001      	adds	r0, #1
    43ac:	d103      	bne.n	43b6 <_printf_common+0xbe>
    43ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    43b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
    43b6:	3501      	adds	r5, #1
    43b8:	e7c1      	b.n	433e <_printf_common+0x46>
    43ba:	2030      	movs	r0, #48	; 0x30
    43bc:	18e1      	adds	r1, r4, r3
    43be:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
    43c2:	1c5a      	adds	r2, r3, #1
    43c4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
    43c8:	4422      	add	r2, r4
    43ca:	3302      	adds	r3, #2
    43cc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
    43d0:	e7c3      	b.n	435a <_printf_common+0x62>
    43d2:	2301      	movs	r3, #1
    43d4:	4622      	mov	r2, r4
    43d6:	4639      	mov	r1, r7
    43d8:	4630      	mov	r0, r6
    43da:	47c0      	blx	r8
    43dc:	3001      	adds	r0, #1
    43de:	d0e6      	beq.n	43ae <_printf_common+0xb6>
    43e0:	f109 0901 	add.w	r9, r9, #1
    43e4:	e7d7      	b.n	4396 <_printf_common+0x9e>
	...

000043e8 <_printf_i>:
    43e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    43ec:	4617      	mov	r7, r2
    43ee:	7e0a      	ldrb	r2, [r1, #24]
    43f0:	b085      	sub	sp, #20
    43f2:	2a6e      	cmp	r2, #110	; 0x6e
    43f4:	4698      	mov	r8, r3
    43f6:	4606      	mov	r6, r0
    43f8:	460c      	mov	r4, r1
    43fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    43fc:	f101 0e43 	add.w	lr, r1, #67	; 0x43
    4400:	f000 80bc 	beq.w	457c <_printf_i+0x194>
    4404:	d81a      	bhi.n	443c <_printf_i+0x54>
    4406:	2a63      	cmp	r2, #99	; 0x63
    4408:	d02e      	beq.n	4468 <_printf_i+0x80>
    440a:	d80a      	bhi.n	4422 <_printf_i+0x3a>
    440c:	2a00      	cmp	r2, #0
    440e:	f000 80c8 	beq.w	45a2 <_printf_i+0x1ba>
    4412:	2a58      	cmp	r2, #88	; 0x58
    4414:	f000 808a 	beq.w	452c <_printf_i+0x144>
    4418:	f104 0542 	add.w	r5, r4, #66	; 0x42
    441c:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    4420:	e02a      	b.n	4478 <_printf_i+0x90>
    4422:	2a64      	cmp	r2, #100	; 0x64
    4424:	d001      	beq.n	442a <_printf_i+0x42>
    4426:	2a69      	cmp	r2, #105	; 0x69
    4428:	d1f6      	bne.n	4418 <_printf_i+0x30>
    442a:	6821      	ldr	r1, [r4, #0]
    442c:	681a      	ldr	r2, [r3, #0]
    442e:	f011 0f80 	tst.w	r1, #128	; 0x80
    4432:	d023      	beq.n	447c <_printf_i+0x94>
    4434:	1d11      	adds	r1, r2, #4
    4436:	6019      	str	r1, [r3, #0]
    4438:	6813      	ldr	r3, [r2, #0]
    443a:	e027      	b.n	448c <_printf_i+0xa4>
    443c:	2a73      	cmp	r2, #115	; 0x73
    443e:	f000 80b4 	beq.w	45aa <_printf_i+0x1c2>
    4442:	d808      	bhi.n	4456 <_printf_i+0x6e>
    4444:	2a6f      	cmp	r2, #111	; 0x6f
    4446:	d02a      	beq.n	449e <_printf_i+0xb6>
    4448:	2a70      	cmp	r2, #112	; 0x70
    444a:	d1e5      	bne.n	4418 <_printf_i+0x30>
    444c:	680a      	ldr	r2, [r1, #0]
    444e:	f042 0220 	orr.w	r2, r2, #32
    4452:	600a      	str	r2, [r1, #0]
    4454:	e003      	b.n	445e <_printf_i+0x76>
    4456:	2a75      	cmp	r2, #117	; 0x75
    4458:	d021      	beq.n	449e <_printf_i+0xb6>
    445a:	2a78      	cmp	r2, #120	; 0x78
    445c:	d1dc      	bne.n	4418 <_printf_i+0x30>
    445e:	2278      	movs	r2, #120	; 0x78
    4460:	496f      	ldr	r1, [pc, #444]	; (4620 <_printf_i+0x238>)
    4462:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
    4466:	e064      	b.n	4532 <_printf_i+0x14a>
    4468:	681a      	ldr	r2, [r3, #0]
    446a:	f101 0542 	add.w	r5, r1, #66	; 0x42
    446e:	1d11      	adds	r1, r2, #4
    4470:	6019      	str	r1, [r3, #0]
    4472:	6813      	ldr	r3, [r2, #0]
    4474:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    4478:	2301      	movs	r3, #1
    447a:	e0a3      	b.n	45c4 <_printf_i+0x1dc>
    447c:	f011 0f40 	tst.w	r1, #64	; 0x40
    4480:	f102 0104 	add.w	r1, r2, #4
    4484:	6019      	str	r1, [r3, #0]
    4486:	d0d7      	beq.n	4438 <_printf_i+0x50>
    4488:	f9b2 3000 	ldrsh.w	r3, [r2]
    448c:	2b00      	cmp	r3, #0
    448e:	da03      	bge.n	4498 <_printf_i+0xb0>
    4490:	222d      	movs	r2, #45	; 0x2d
    4492:	425b      	negs	r3, r3
    4494:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
    4498:	4962      	ldr	r1, [pc, #392]	; (4624 <_printf_i+0x23c>)
    449a:	220a      	movs	r2, #10
    449c:	e017      	b.n	44ce <_printf_i+0xe6>
    449e:	6820      	ldr	r0, [r4, #0]
    44a0:	6819      	ldr	r1, [r3, #0]
    44a2:	f010 0f80 	tst.w	r0, #128	; 0x80
    44a6:	d003      	beq.n	44b0 <_printf_i+0xc8>
    44a8:	1d08      	adds	r0, r1, #4
    44aa:	6018      	str	r0, [r3, #0]
    44ac:	680b      	ldr	r3, [r1, #0]
    44ae:	e006      	b.n	44be <_printf_i+0xd6>
    44b0:	f010 0f40 	tst.w	r0, #64	; 0x40
    44b4:	f101 0004 	add.w	r0, r1, #4
    44b8:	6018      	str	r0, [r3, #0]
    44ba:	d0f7      	beq.n	44ac <_printf_i+0xc4>
    44bc:	880b      	ldrh	r3, [r1, #0]
    44be:	2a6f      	cmp	r2, #111	; 0x6f
    44c0:	bf14      	ite	ne
    44c2:	220a      	movne	r2, #10
    44c4:	2208      	moveq	r2, #8
    44c6:	4957      	ldr	r1, [pc, #348]	; (4624 <_printf_i+0x23c>)
    44c8:	2000      	movs	r0, #0
    44ca:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
    44ce:	6865      	ldr	r5, [r4, #4]
    44d0:	2d00      	cmp	r5, #0
    44d2:	60a5      	str	r5, [r4, #8]
    44d4:	f2c0 809c 	blt.w	4610 <_printf_i+0x228>
    44d8:	6820      	ldr	r0, [r4, #0]
    44da:	f020 0004 	bic.w	r0, r0, #4
    44de:	6020      	str	r0, [r4, #0]
    44e0:	2b00      	cmp	r3, #0
    44e2:	d13f      	bne.n	4564 <_printf_i+0x17c>
    44e4:	2d00      	cmp	r5, #0
    44e6:	f040 8095 	bne.w	4614 <_printf_i+0x22c>
    44ea:	4675      	mov	r5, lr
    44ec:	2a08      	cmp	r2, #8
    44ee:	d10b      	bne.n	4508 <_printf_i+0x120>
    44f0:	6823      	ldr	r3, [r4, #0]
    44f2:	07da      	lsls	r2, r3, #31
    44f4:	d508      	bpl.n	4508 <_printf_i+0x120>
    44f6:	6923      	ldr	r3, [r4, #16]
    44f8:	6862      	ldr	r2, [r4, #4]
    44fa:	429a      	cmp	r2, r3
    44fc:	bfde      	ittt	le
    44fe:	2330      	movle	r3, #48	; 0x30
    4500:	f805 3c01 	strble.w	r3, [r5, #-1]
    4504:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
    4508:	ebae 0305 	sub.w	r3, lr, r5
    450c:	6123      	str	r3, [r4, #16]
    450e:	f8cd 8000 	str.w	r8, [sp]
    4512:	463b      	mov	r3, r7
    4514:	aa03      	add	r2, sp, #12
    4516:	4621      	mov	r1, r4
    4518:	4630      	mov	r0, r6
    451a:	f7ff feed 	bl	42f8 <_printf_common>
    451e:	3001      	adds	r0, #1
    4520:	d155      	bne.n	45ce <_printf_i+0x1e6>
    4522:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    4526:	b005      	add	sp, #20
    4528:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    452c:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
    4530:	493c      	ldr	r1, [pc, #240]	; (4624 <_printf_i+0x23c>)
    4532:	6822      	ldr	r2, [r4, #0]
    4534:	6818      	ldr	r0, [r3, #0]
    4536:	f012 0f80 	tst.w	r2, #128	; 0x80
    453a:	f100 0504 	add.w	r5, r0, #4
    453e:	601d      	str	r5, [r3, #0]
    4540:	d001      	beq.n	4546 <_printf_i+0x15e>
    4542:	6803      	ldr	r3, [r0, #0]
    4544:	e002      	b.n	454c <_printf_i+0x164>
    4546:	0655      	lsls	r5, r2, #25
    4548:	d5fb      	bpl.n	4542 <_printf_i+0x15a>
    454a:	8803      	ldrh	r3, [r0, #0]
    454c:	07d0      	lsls	r0, r2, #31
    454e:	bf44      	itt	mi
    4550:	f042 0220 	orrmi.w	r2, r2, #32
    4554:	6022      	strmi	r2, [r4, #0]
    4556:	b91b      	cbnz	r3, 4560 <_printf_i+0x178>
    4558:	6822      	ldr	r2, [r4, #0]
    455a:	f022 0220 	bic.w	r2, r2, #32
    455e:	6022      	str	r2, [r4, #0]
    4560:	2210      	movs	r2, #16
    4562:	e7b1      	b.n	44c8 <_printf_i+0xe0>
    4564:	4675      	mov	r5, lr
    4566:	fbb3 f0f2 	udiv	r0, r3, r2
    456a:	fb02 3310 	mls	r3, r2, r0, r3
    456e:	5ccb      	ldrb	r3, [r1, r3]
    4570:	f805 3d01 	strb.w	r3, [r5, #-1]!
    4574:	4603      	mov	r3, r0
    4576:	2800      	cmp	r0, #0
    4578:	d1f5      	bne.n	4566 <_printf_i+0x17e>
    457a:	e7b7      	b.n	44ec <_printf_i+0x104>
    457c:	6808      	ldr	r0, [r1, #0]
    457e:	681a      	ldr	r2, [r3, #0]
    4580:	f010 0f80 	tst.w	r0, #128	; 0x80
    4584:	6949      	ldr	r1, [r1, #20]
    4586:	d004      	beq.n	4592 <_printf_i+0x1aa>
    4588:	1d10      	adds	r0, r2, #4
    458a:	6018      	str	r0, [r3, #0]
    458c:	6813      	ldr	r3, [r2, #0]
    458e:	6019      	str	r1, [r3, #0]
    4590:	e007      	b.n	45a2 <_printf_i+0x1ba>
    4592:	f010 0f40 	tst.w	r0, #64	; 0x40
    4596:	f102 0004 	add.w	r0, r2, #4
    459a:	6018      	str	r0, [r3, #0]
    459c:	6813      	ldr	r3, [r2, #0]
    459e:	d0f6      	beq.n	458e <_printf_i+0x1a6>
    45a0:	8019      	strh	r1, [r3, #0]
    45a2:	2300      	movs	r3, #0
    45a4:	4675      	mov	r5, lr
    45a6:	6123      	str	r3, [r4, #16]
    45a8:	e7b1      	b.n	450e <_printf_i+0x126>
    45aa:	681a      	ldr	r2, [r3, #0]
    45ac:	1d11      	adds	r1, r2, #4
    45ae:	6019      	str	r1, [r3, #0]
    45b0:	6815      	ldr	r5, [r2, #0]
    45b2:	2100      	movs	r1, #0
    45b4:	6862      	ldr	r2, [r4, #4]
    45b6:	4628      	mov	r0, r5
    45b8:	f7ff fd92 	bl	40e0 <memchr>
    45bc:	b108      	cbz	r0, 45c2 <_printf_i+0x1da>
    45be:	1b40      	subs	r0, r0, r5
    45c0:	6060      	str	r0, [r4, #4]
    45c2:	6863      	ldr	r3, [r4, #4]
    45c4:	6123      	str	r3, [r4, #16]
    45c6:	2300      	movs	r3, #0
    45c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    45cc:	e79f      	b.n	450e <_printf_i+0x126>
    45ce:	6923      	ldr	r3, [r4, #16]
    45d0:	462a      	mov	r2, r5
    45d2:	4639      	mov	r1, r7
    45d4:	4630      	mov	r0, r6
    45d6:	47c0      	blx	r8
    45d8:	3001      	adds	r0, #1
    45da:	d0a2      	beq.n	4522 <_printf_i+0x13a>
    45dc:	6823      	ldr	r3, [r4, #0]
    45de:	079b      	lsls	r3, r3, #30
    45e0:	d507      	bpl.n	45f2 <_printf_i+0x20a>
    45e2:	2500      	movs	r5, #0
    45e4:	f104 0919 	add.w	r9, r4, #25
    45e8:	68e3      	ldr	r3, [r4, #12]
    45ea:	9a03      	ldr	r2, [sp, #12]
    45ec:	1a9b      	subs	r3, r3, r2
    45ee:	429d      	cmp	r5, r3
    45f0:	db05      	blt.n	45fe <_printf_i+0x216>
    45f2:	68e0      	ldr	r0, [r4, #12]
    45f4:	9b03      	ldr	r3, [sp, #12]
    45f6:	4298      	cmp	r0, r3
    45f8:	bfb8      	it	lt
    45fa:	4618      	movlt	r0, r3
    45fc:	e793      	b.n	4526 <_printf_i+0x13e>
    45fe:	2301      	movs	r3, #1
    4600:	464a      	mov	r2, r9
    4602:	4639      	mov	r1, r7
    4604:	4630      	mov	r0, r6
    4606:	47c0      	blx	r8
    4608:	3001      	adds	r0, #1
    460a:	d08a      	beq.n	4522 <_printf_i+0x13a>
    460c:	3501      	adds	r5, #1
    460e:	e7eb      	b.n	45e8 <_printf_i+0x200>
    4610:	2b00      	cmp	r3, #0
    4612:	d1a7      	bne.n	4564 <_printf_i+0x17c>
    4614:	780b      	ldrb	r3, [r1, #0]
    4616:	f104 0542 	add.w	r5, r4, #66	; 0x42
    461a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    461e:	e765      	b.n	44ec <_printf_i+0x104>
    4620:	000050c9 	.word	0x000050c9
    4624:	000050b8 	.word	0x000050b8

00004628 <realloc>:
    4628:	4b02      	ldr	r3, [pc, #8]	; (4634 <realloc+0xc>)
    462a:	460a      	mov	r2, r1
    462c:	4601      	mov	r1, r0
    462e:	6818      	ldr	r0, [r3, #0]
    4630:	f7ff b986 	b.w	3940 <__wrap__realloc_r>
    4634:	100000ec 	.word	0x100000ec

00004638 <_sbrk_r>:
    4638:	b538      	push	{r3, r4, r5, lr}
    463a:	2300      	movs	r3, #0
    463c:	4c05      	ldr	r4, [pc, #20]	; (4654 <_sbrk_r+0x1c>)
    463e:	4605      	mov	r5, r0
    4640:	4608      	mov	r0, r1
    4642:	6023      	str	r3, [r4, #0]
    4644:	f7ff fa6c 	bl	3b20 <_sbrk>
    4648:	1c43      	adds	r3, r0, #1
    464a:	d102      	bne.n	4652 <_sbrk_r+0x1a>
    464c:	6823      	ldr	r3, [r4, #0]
    464e:	b103      	cbz	r3, 4652 <_sbrk_r+0x1a>
    4650:	602b      	str	r3, [r5, #0]
    4652:	bd38      	pop	{r3, r4, r5, pc}
    4654:	10002620 	.word	0x10002620

00004658 <__sread>:
    4658:	b510      	push	{r4, lr}
    465a:	460c      	mov	r4, r1
    465c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    4660:	f000 f9f4 	bl	4a4c <_read_r>
    4664:	2800      	cmp	r0, #0
    4666:	bfab      	itete	ge
    4668:	6d63      	ldrge	r3, [r4, #84]	; 0x54
    466a:	89a3      	ldrhlt	r3, [r4, #12]
    466c:	181b      	addge	r3, r3, r0
    466e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
    4672:	bfac      	ite	ge
    4674:	6563      	strge	r3, [r4, #84]	; 0x54
    4676:	81a3      	strhlt	r3, [r4, #12]
    4678:	bd10      	pop	{r4, pc}

0000467a <__swrite>:
    467a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    467e:	461f      	mov	r7, r3
    4680:	898b      	ldrh	r3, [r1, #12]
    4682:	4605      	mov	r5, r0
    4684:	05db      	lsls	r3, r3, #23
    4686:	460c      	mov	r4, r1
    4688:	4616      	mov	r6, r2
    468a:	d505      	bpl.n	4698 <__swrite+0x1e>
    468c:	2302      	movs	r3, #2
    468e:	2200      	movs	r2, #0
    4690:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    4694:	f000 f870 	bl	4778 <_lseek_r>
    4698:	89a3      	ldrh	r3, [r4, #12]
    469a:	4632      	mov	r2, r6
    469c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    46a0:	81a3      	strh	r3, [r4, #12]
    46a2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    46a6:	463b      	mov	r3, r7
    46a8:	4628      	mov	r0, r5
    46aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    46ae:	f000 b841 	b.w	4734 <_write_r>

000046b2 <__sseek>:
    46b2:	b510      	push	{r4, lr}
    46b4:	460c      	mov	r4, r1
    46b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    46ba:	f000 f85d 	bl	4778 <_lseek_r>
    46be:	1c43      	adds	r3, r0, #1
    46c0:	89a3      	ldrh	r3, [r4, #12]
    46c2:	bf15      	itete	ne
    46c4:	6560      	strne	r0, [r4, #84]	; 0x54
    46c6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    46ca:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    46ce:	81a3      	strheq	r3, [r4, #12]
    46d0:	bf18      	it	ne
    46d2:	81a3      	strhne	r3, [r4, #12]
    46d4:	bd10      	pop	{r4, pc}

000046d6 <__sclose>:
    46d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    46da:	f000 b83d 	b.w	4758 <_close_r>

000046de <strlen>:
    46de:	4603      	mov	r3, r0
    46e0:	f813 2b01 	ldrb.w	r2, [r3], #1
    46e4:	2a00      	cmp	r2, #0
    46e6:	d1fb      	bne.n	46e0 <strlen+0x2>
    46e8:	1a18      	subs	r0, r3, r0
    46ea:	3801      	subs	r0, #1
    46ec:	4770      	bx	lr

000046ee <_vsiprintf_r>:
    46ee:	b510      	push	{r4, lr}
    46f0:	b09a      	sub	sp, #104	; 0x68
    46f2:	9100      	str	r1, [sp, #0]
    46f4:	9104      	str	r1, [sp, #16]
    46f6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    46fa:	9102      	str	r1, [sp, #8]
    46fc:	9105      	str	r1, [sp, #20]
    46fe:	f64f 71ff 	movw	r1, #65535	; 0xffff
    4702:	f44f 7402 	mov.w	r4, #520	; 0x208
    4706:	f8ad 100e 	strh.w	r1, [sp, #14]
    470a:	4669      	mov	r1, sp
    470c:	f8ad 400c 	strh.w	r4, [sp, #12]
    4710:	f000 f8a8 	bl	4864 <_svfiprintf_r>
    4714:	2200      	movs	r2, #0
    4716:	9b00      	ldr	r3, [sp, #0]
    4718:	701a      	strb	r2, [r3, #0]
    471a:	b01a      	add	sp, #104	; 0x68
    471c:	bd10      	pop	{r4, pc}
	...

00004720 <vsiprintf>:
    4720:	4613      	mov	r3, r2
    4722:	460a      	mov	r2, r1
    4724:	4601      	mov	r1, r0
    4726:	4802      	ldr	r0, [pc, #8]	; (4730 <vsiprintf+0x10>)
    4728:	6800      	ldr	r0, [r0, #0]
    472a:	f7ff bfe0 	b.w	46ee <_vsiprintf_r>
    472e:	bf00      	nop
    4730:	100000ec 	.word	0x100000ec

00004734 <_write_r>:
    4734:	b538      	push	{r3, r4, r5, lr}
    4736:	4605      	mov	r5, r0
    4738:	4608      	mov	r0, r1
    473a:	4611      	mov	r1, r2
    473c:	2200      	movs	r2, #0
    473e:	4c05      	ldr	r4, [pc, #20]	; (4754 <_write_r+0x20>)
    4740:	6022      	str	r2, [r4, #0]
    4742:	461a      	mov	r2, r3
    4744:	f7ff f95a 	bl	39fc <_write>
    4748:	1c43      	adds	r3, r0, #1
    474a:	d102      	bne.n	4752 <_write_r+0x1e>
    474c:	6823      	ldr	r3, [r4, #0]
    474e:	b103      	cbz	r3, 4752 <_write_r+0x1e>
    4750:	602b      	str	r3, [r5, #0]
    4752:	bd38      	pop	{r3, r4, r5, pc}
    4754:	10002620 	.word	0x10002620

00004758 <_close_r>:
    4758:	b538      	push	{r3, r4, r5, lr}
    475a:	2300      	movs	r3, #0
    475c:	4c05      	ldr	r4, [pc, #20]	; (4774 <_close_r+0x1c>)
    475e:	4605      	mov	r5, r0
    4760:	4608      	mov	r0, r1
    4762:	6023      	str	r3, [r4, #0]
    4764:	f7ff f92a 	bl	39bc <_close>
    4768:	1c43      	adds	r3, r0, #1
    476a:	d102      	bne.n	4772 <_close_r+0x1a>
    476c:	6823      	ldr	r3, [r4, #0]
    476e:	b103      	cbz	r3, 4772 <_close_r+0x1a>
    4770:	602b      	str	r3, [r5, #0]
    4772:	bd38      	pop	{r3, r4, r5, pc}
    4774:	10002620 	.word	0x10002620

00004778 <_lseek_r>:
    4778:	b538      	push	{r3, r4, r5, lr}
    477a:	4605      	mov	r5, r0
    477c:	4608      	mov	r0, r1
    477e:	4611      	mov	r1, r2
    4780:	2200      	movs	r2, #0
    4782:	4c05      	ldr	r4, [pc, #20]	; (4798 <_lseek_r+0x20>)
    4784:	6022      	str	r2, [r4, #0]
    4786:	461a      	mov	r2, r3
    4788:	f7ff f99e 	bl	3ac8 <_lseek>
    478c:	1c43      	adds	r3, r0, #1
    478e:	d102      	bne.n	4796 <_lseek_r+0x1e>
    4790:	6823      	ldr	r3, [r4, #0]
    4792:	b103      	cbz	r3, 4796 <_lseek_r+0x1e>
    4794:	602b      	str	r3, [r5, #0]
    4796:	bd38      	pop	{r3, r4, r5, pc}
    4798:	10002620 	.word	0x10002620

0000479c <_malloc_usable_size_r>:
    479c:	f851 0c04 	ldr.w	r0, [r1, #-4]
    47a0:	2800      	cmp	r0, #0
    47a2:	f1a0 0004 	sub.w	r0, r0, #4
    47a6:	bfbc      	itt	lt
    47a8:	580b      	ldrlt	r3, [r1, r0]
    47aa:	18c0      	addlt	r0, r0, r3
    47ac:	4770      	bx	lr

000047ae <__ssputs_r>:
    47ae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    47b2:	688e      	ldr	r6, [r1, #8]
    47b4:	4682      	mov	r10, r0
    47b6:	429e      	cmp	r6, r3
    47b8:	460c      	mov	r4, r1
    47ba:	4691      	mov	r9, r2
    47bc:	4698      	mov	r8, r3
    47be:	d835      	bhi.n	482c <__ssputs_r+0x7e>
    47c0:	898a      	ldrh	r2, [r1, #12]
    47c2:	f412 6f90 	tst.w	r2, #1152	; 0x480
    47c6:	d031      	beq.n	482c <__ssputs_r+0x7e>
    47c8:	2302      	movs	r3, #2
    47ca:	6825      	ldr	r5, [r4, #0]
    47cc:	6909      	ldr	r1, [r1, #16]
    47ce:	1a6f      	subs	r7, r5, r1
    47d0:	6965      	ldr	r5, [r4, #20]
    47d2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
    47d6:	fb95 f5f3 	sdiv	r5, r5, r3
    47da:	f108 0301 	add.w	r3, r8, #1
    47de:	443b      	add	r3, r7
    47e0:	429d      	cmp	r5, r3
    47e2:	bf38      	it	cc
    47e4:	461d      	movcc	r5, r3
    47e6:	0553      	lsls	r3, r2, #21
    47e8:	d531      	bpl.n	484e <__ssputs_r+0xa0>
    47ea:	4629      	mov	r1, r5
    47ec:	f7ff f8a6 	bl	393c <__wrap__malloc_r>
    47f0:	4606      	mov	r6, r0
    47f2:	b950      	cbnz	r0, 480a <__ssputs_r+0x5c>
    47f4:	230c      	movs	r3, #12
    47f6:	f8ca 3000 	str.w	r3, [r10]
    47fa:	89a3      	ldrh	r3, [r4, #12]
    47fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    4800:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    4804:	81a3      	strh	r3, [r4, #12]
    4806:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
    480a:	463a      	mov	r2, r7
    480c:	6921      	ldr	r1, [r4, #16]
    480e:	f7ff fc75 	bl	40fc <memcpy>
    4812:	89a3      	ldrh	r3, [r4, #12]
    4814:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    4818:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    481c:	81a3      	strh	r3, [r4, #12]
    481e:	6126      	str	r6, [r4, #16]
    4820:	443e      	add	r6, r7
    4822:	6026      	str	r6, [r4, #0]
    4824:	4646      	mov	r6, r8
    4826:	6165      	str	r5, [r4, #20]
    4828:	1bed      	subs	r5, r5, r7
    482a:	60a5      	str	r5, [r4, #8]
    482c:	4546      	cmp	r6, r8
    482e:	bf28      	it	cs
    4830:	4646      	movcs	r6, r8
    4832:	4649      	mov	r1, r9
    4834:	4632      	mov	r2, r6
    4836:	6820      	ldr	r0, [r4, #0]
    4838:	f7ff fc6b 	bl	4112 <memmove>
    483c:	68a3      	ldr	r3, [r4, #8]
    483e:	2000      	movs	r0, #0
    4840:	1b9b      	subs	r3, r3, r6
    4842:	60a3      	str	r3, [r4, #8]
    4844:	6823      	ldr	r3, [r4, #0]
    4846:	441e      	add	r6, r3
    4848:	6026      	str	r6, [r4, #0]
    484a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
    484e:	462a      	mov	r2, r5
    4850:	f7ff f876 	bl	3940 <__wrap__realloc_r>
    4854:	4606      	mov	r6, r0
    4856:	2800      	cmp	r0, #0
    4858:	d1e1      	bne.n	481e <__ssputs_r+0x70>
    485a:	6921      	ldr	r1, [r4, #16]
    485c:	4650      	mov	r0, r10
    485e:	f7ff f871 	bl	3944 <__wrap__free_r>
    4862:	e7c7      	b.n	47f4 <__ssputs_r+0x46>

00004864 <_svfiprintf_r>:
    4864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4868:	b09d      	sub	sp, #116	; 0x74
    486a:	9303      	str	r3, [sp, #12]
    486c:	898b      	ldrh	r3, [r1, #12]
    486e:	4680      	mov	r8, r0
    4870:	061c      	lsls	r4, r3, #24
    4872:	460d      	mov	r5, r1
    4874:	4616      	mov	r6, r2
    4876:	d50f      	bpl.n	4898 <_svfiprintf_r+0x34>
    4878:	690b      	ldr	r3, [r1, #16]
    487a:	b96b      	cbnz	r3, 4898 <_svfiprintf_r+0x34>
    487c:	2140      	movs	r1, #64	; 0x40
    487e:	f7ff f85d 	bl	393c <__wrap__malloc_r>
    4882:	6028      	str	r0, [r5, #0]
    4884:	6128      	str	r0, [r5, #16]
    4886:	b928      	cbnz	r0, 4894 <_svfiprintf_r+0x30>
    4888:	230c      	movs	r3, #12
    488a:	f8c8 3000 	str.w	r3, [r8]
    488e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    4892:	e0c4      	b.n	4a1e <_svfiprintf_r+0x1ba>
    4894:	2340      	movs	r3, #64	; 0x40
    4896:	616b      	str	r3, [r5, #20]
    4898:	2300      	movs	r3, #0
    489a:	9309      	str	r3, [sp, #36]	; 0x24
    489c:	2320      	movs	r3, #32
    489e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    48a2:	2330      	movs	r3, #48	; 0x30
    48a4:	f04f 0b01 	mov.w	r11, #1
    48a8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    48ac:	4637      	mov	r7, r6
    48ae:	463c      	mov	r4, r7
    48b0:	f814 3b01 	ldrb.w	r3, [r4], #1
    48b4:	2b00      	cmp	r3, #0
    48b6:	d13c      	bne.n	4932 <_svfiprintf_r+0xce>
    48b8:	ebb7 0a06 	subs.w	r10, r7, r6
    48bc:	d00b      	beq.n	48d6 <_svfiprintf_r+0x72>
    48be:	4653      	mov	r3, r10
    48c0:	4632      	mov	r2, r6
    48c2:	4629      	mov	r1, r5
    48c4:	4640      	mov	r0, r8
    48c6:	f7ff ff72 	bl	47ae <__ssputs_r>
    48ca:	3001      	adds	r0, #1
    48cc:	f000 80a2 	beq.w	4a14 <_svfiprintf_r+0x1b0>
    48d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    48d2:	4453      	add	r3, r10
    48d4:	9309      	str	r3, [sp, #36]	; 0x24
    48d6:	783b      	ldrb	r3, [r7, #0]
    48d8:	2b00      	cmp	r3, #0
    48da:	f000 809b 	beq.w	4a14 <_svfiprintf_r+0x1b0>
    48de:	2300      	movs	r3, #0
    48e0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    48e4:	9304      	str	r3, [sp, #16]
    48e6:	9307      	str	r3, [sp, #28]
    48e8:	9205      	str	r2, [sp, #20]
    48ea:	9306      	str	r3, [sp, #24]
    48ec:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    48f0:	931a      	str	r3, [sp, #104]	; 0x68
    48f2:	2205      	movs	r2, #5
    48f4:	7821      	ldrb	r1, [r4, #0]
    48f6:	4850      	ldr	r0, [pc, #320]	; (4a38 <_svfiprintf_r+0x1d4>)
    48f8:	f7ff fbf2 	bl	40e0 <memchr>
    48fc:	1c67      	adds	r7, r4, #1
    48fe:	9b04      	ldr	r3, [sp, #16]
    4900:	b9d8      	cbnz	r0, 493a <_svfiprintf_r+0xd6>
    4902:	06d9      	lsls	r1, r3, #27
    4904:	bf44      	itt	mi
    4906:	2220      	movmi	r2, #32
    4908:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    490c:	071a      	lsls	r2, r3, #28
    490e:	bf44      	itt	mi
    4910:	222b      	movmi	r2, #43	; 0x2b
    4912:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    4916:	7822      	ldrb	r2, [r4, #0]
    4918:	2a2a      	cmp	r2, #42	; 0x2a
    491a:	d016      	beq.n	494a <_svfiprintf_r+0xe6>
    491c:	2100      	movs	r1, #0
    491e:	200a      	movs	r0, #10
    4920:	9a07      	ldr	r2, [sp, #28]
    4922:	4627      	mov	r7, r4
    4924:	783b      	ldrb	r3, [r7, #0]
    4926:	3401      	adds	r4, #1
    4928:	3b30      	subs	r3, #48	; 0x30
    492a:	2b09      	cmp	r3, #9
    492c:	d950      	bls.n	49d0 <_svfiprintf_r+0x16c>
    492e:	b1c9      	cbz	r1, 4964 <_svfiprintf_r+0x100>
    4930:	e011      	b.n	4956 <_svfiprintf_r+0xf2>
    4932:	2b25      	cmp	r3, #37	; 0x25
    4934:	d0c0      	beq.n	48b8 <_svfiprintf_r+0x54>
    4936:	4627      	mov	r7, r4
    4938:	e7b9      	b.n	48ae <_svfiprintf_r+0x4a>
    493a:	4a3f      	ldr	r2, [pc, #252]	; (4a38 <_svfiprintf_r+0x1d4>)
    493c:	463c      	mov	r4, r7
    493e:	1a80      	subs	r0, r0, r2
    4940:	fa0b f000 	lsl.w	r0, r11, r0
    4944:	4318      	orrs	r0, r3
    4946:	9004      	str	r0, [sp, #16]
    4948:	e7d3      	b.n	48f2 <_svfiprintf_r+0x8e>
    494a:	9a03      	ldr	r2, [sp, #12]
    494c:	1d11      	adds	r1, r2, #4
    494e:	6812      	ldr	r2, [r2, #0]
    4950:	9103      	str	r1, [sp, #12]
    4952:	2a00      	cmp	r2, #0
    4954:	db01      	blt.n	495a <_svfiprintf_r+0xf6>
    4956:	9207      	str	r2, [sp, #28]
    4958:	e004      	b.n	4964 <_svfiprintf_r+0x100>
    495a:	4252      	negs	r2, r2
    495c:	f043 0302 	orr.w	r3, r3, #2
    4960:	9207      	str	r2, [sp, #28]
    4962:	9304      	str	r3, [sp, #16]
    4964:	783b      	ldrb	r3, [r7, #0]
    4966:	2b2e      	cmp	r3, #46	; 0x2e
    4968:	d10d      	bne.n	4986 <_svfiprintf_r+0x122>
    496a:	787b      	ldrb	r3, [r7, #1]
    496c:	1c79      	adds	r1, r7, #1
    496e:	2b2a      	cmp	r3, #42	; 0x2a
    4970:	d132      	bne.n	49d8 <_svfiprintf_r+0x174>
    4972:	9b03      	ldr	r3, [sp, #12]
    4974:	3702      	adds	r7, #2
    4976:	1d1a      	adds	r2, r3, #4
    4978:	681b      	ldr	r3, [r3, #0]
    497a:	9203      	str	r2, [sp, #12]
    497c:	2b00      	cmp	r3, #0
    497e:	bfb8      	it	lt
    4980:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    4984:	9305      	str	r3, [sp, #20]
    4986:	4c2d      	ldr	r4, [pc, #180]	; (4a3c <_svfiprintf_r+0x1d8>)
    4988:	2203      	movs	r2, #3
    498a:	7839      	ldrb	r1, [r7, #0]
    498c:	4620      	mov	r0, r4
    498e:	f7ff fba7 	bl	40e0 <memchr>
    4992:	b138      	cbz	r0, 49a4 <_svfiprintf_r+0x140>
    4994:	2340      	movs	r3, #64	; 0x40
    4996:	1b00      	subs	r0, r0, r4
    4998:	fa03 f000 	lsl.w	r0, r3, r0
    499c:	9b04      	ldr	r3, [sp, #16]
    499e:	3701      	adds	r7, #1
    49a0:	4303      	orrs	r3, r0
    49a2:	9304      	str	r3, [sp, #16]
    49a4:	7839      	ldrb	r1, [r7, #0]
    49a6:	2206      	movs	r2, #6
    49a8:	4825      	ldr	r0, [pc, #148]	; (4a40 <_svfiprintf_r+0x1dc>)
    49aa:	1c7e      	adds	r6, r7, #1
    49ac:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    49b0:	f7ff fb96 	bl	40e0 <memchr>
    49b4:	2800      	cmp	r0, #0
    49b6:	d035      	beq.n	4a24 <_svfiprintf_r+0x1c0>
    49b8:	4b22      	ldr	r3, [pc, #136]	; (4a44 <_svfiprintf_r+0x1e0>)
    49ba:	b9fb      	cbnz	r3, 49fc <_svfiprintf_r+0x198>
    49bc:	9b03      	ldr	r3, [sp, #12]
    49be:	3307      	adds	r3, #7
    49c0:	f023 0307 	bic.w	r3, r3, #7
    49c4:	3308      	adds	r3, #8
    49c6:	9303      	str	r3, [sp, #12]
    49c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    49ca:	444b      	add	r3, r9
    49cc:	9309      	str	r3, [sp, #36]	; 0x24
    49ce:	e76d      	b.n	48ac <_svfiprintf_r+0x48>
    49d0:	fb00 3202 	mla	r2, r0, r2, r3
    49d4:	2101      	movs	r1, #1
    49d6:	e7a4      	b.n	4922 <_svfiprintf_r+0xbe>
    49d8:	2300      	movs	r3, #0
    49da:	240a      	movs	r4, #10
    49dc:	4618      	mov	r0, r3
    49de:	9305      	str	r3, [sp, #20]
    49e0:	460f      	mov	r7, r1
    49e2:	783a      	ldrb	r2, [r7, #0]
    49e4:	3101      	adds	r1, #1
    49e6:	3a30      	subs	r2, #48	; 0x30
    49e8:	2a09      	cmp	r2, #9
    49ea:	d903      	bls.n	49f4 <_svfiprintf_r+0x190>
    49ec:	2b00      	cmp	r3, #0
    49ee:	d0ca      	beq.n	4986 <_svfiprintf_r+0x122>
    49f0:	9005      	str	r0, [sp, #20]
    49f2:	e7c8      	b.n	4986 <_svfiprintf_r+0x122>
    49f4:	fb04 2000 	mla	r0, r4, r0, r2
    49f8:	2301      	movs	r3, #1
    49fa:	e7f1      	b.n	49e0 <_svfiprintf_r+0x17c>
    49fc:	ab03      	add	r3, sp, #12
    49fe:	9300      	str	r3, [sp, #0]
    4a00:	462a      	mov	r2, r5
    4a02:	4b11      	ldr	r3, [pc, #68]	; (4a48 <_svfiprintf_r+0x1e4>)
    4a04:	a904      	add	r1, sp, #16
    4a06:	4640      	mov	r0, r8
    4a08:	f3af 8000 	nop.w
    4a0c:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    4a10:	4681      	mov	r9, r0
    4a12:	d1d9      	bne.n	49c8 <_svfiprintf_r+0x164>
    4a14:	89ab      	ldrh	r3, [r5, #12]
    4a16:	065b      	lsls	r3, r3, #25
    4a18:	f53f af39 	bmi.w	488e <_svfiprintf_r+0x2a>
    4a1c:	9809      	ldr	r0, [sp, #36]	; 0x24
    4a1e:	b01d      	add	sp, #116	; 0x74
    4a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    4a24:	ab03      	add	r3, sp, #12
    4a26:	9300      	str	r3, [sp, #0]
    4a28:	462a      	mov	r2, r5
    4a2a:	4b07      	ldr	r3, [pc, #28]	; (4a48 <_svfiprintf_r+0x1e4>)
    4a2c:	a904      	add	r1, sp, #16
    4a2e:	4640      	mov	r0, r8
    4a30:	f7ff fcda 	bl	43e8 <_printf_i>
    4a34:	e7ea      	b.n	4a0c <_svfiprintf_r+0x1a8>
    4a36:	bf00      	nop
    4a38:	000050da 	.word	0x000050da
    4a3c:	000050e0 	.word	0x000050e0
    4a40:	000050e4 	.word	0x000050e4
    4a44:	00000000 	.word	0x00000000
    4a48:	000047af 	.word	0x000047af

00004a4c <_read_r>:
    4a4c:	b538      	push	{r3, r4, r5, lr}
    4a4e:	4605      	mov	r5, r0
    4a50:	4608      	mov	r0, r1
    4a52:	4611      	mov	r1, r2
    4a54:	2200      	movs	r2, #0
    4a56:	4c05      	ldr	r4, [pc, #20]	; (4a6c <_read_r+0x20>)
    4a58:	6022      	str	r2, [r4, #0]
    4a5a:	461a      	mov	r2, r3
    4a5c:	f7ff f804 	bl	3a68 <_read>
    4a60:	1c43      	adds	r3, r0, #1
    4a62:	d102      	bne.n	4a6a <_read_r+0x1e>
    4a64:	6823      	ldr	r3, [r4, #0]
    4a66:	b103      	cbz	r3, 4a6a <_read_r+0x1e>
    4a68:	602b      	str	r3, [r5, #0]
    4a6a:	bd38      	pop	{r3, r4, r5, pc}
    4a6c:	10002620 	.word	0x10002620

00004a70 <_init>:
    4a70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4a72:	bf00      	nop
    4a74:	bcf8      	pop	{r3, r4, r5, r6, r7}
    4a76:	bc08      	pop	{r3}
    4a78:	469e      	mov	lr, r3
    4a7a:	4770      	bx	lr

00004a7c <_fini>:
    4a7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4a7e:	bf00      	nop
    4a80:	bcf8      	pop	{r3, r4, r5, r6, r7}
    4a82:	bc08      	pop	{r3}
    4a84:	469e      	mov	lr, r3
    4a86:	4770      	bx	lr

00004a88 <vtable for std_msgs::Time>:
	...
    4a90:	0139 0000 0161 0000 019d 0000 01a5 0000     9...a...........

00004aa0 <vtable for rosserial_msgs::TopicInfo>:
	...
    4aa8:	051b 0000 05f5 0000 01ad 0000 01b5 0000     ................

00004ab8 <vtable for rosserial_msgs::Log>:
	...
    4ac0:	04ef 0000 05bf 0000 01bd 0000 01c5 0000     ................

00004ad0 <vtable for rosserial_msgs::RequestParamResponse>:
	...
    4ad8:	0411 0000 06ab 0000 01cd 0000 01d5 0000     ................

00004ae8 <vtable for std_msgs::MultiArrayDimension>:
	...
    4af0:	03c5 0000 07d3 0000 01dd 0000 01e5 0000     ................

00004b00 <vtable for std_msgs::MultiArrayLayout>:
	...
    4b08:	01ed 0000 083d 0000 0239 0000 0241 0000     ....=...9...A...

00004b18 <vtable for std_msgs::Int32MultiArray>:
	...
    4b20:	0249 0000 08af 0000 02a1 0000 02a9 0000     I...............

00004b30 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
    4b38:	0d01 0000 0dc1 0000 02bf 0000               ............

00004b44 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
    4b44:	02b1 0000 02b5 0000 02bd 0000 6b2f 6961     ............/kai
    4b54:	5f74 6f72 6f62 2f74 6e65 6f63 6564 5f72     t_robot/encoder_
    4b64:	6f63 6e75 0074 6639 6530 3839 6462 3661     count.9f0e98bda6
    4b74:	3935 3138 3839 6436 6664 3335 6661 3761     5981986ddf53afa7
    4b84:	3461 6530 3934 3100 6131 6462 3337 6331     a40e49.11abd731c
    4b94:	3532 3339 3233 3136 6463 3136 3338 6462     25933261cd6183bd
    4ba4:	3231 3664 3932 0035 6f72 7373 7265 6169     12d6295.rosseria
    4bb4:	5f6c 736d 7367 4c2f 676f 3000 6461 3135     l_msgs/Log.0ad51
    4bc4:	3866 6638 3463 3834 3239 3866 3163 3630     f88fc44892f8c106
    4bd4:	3438 3730 3637 3634 3030 0035 6f72 7373     84077646005.ross
    4be4:	7265 6169 5f6c 736d 7367 542f 706f 6369     erial_msgs/Topic
    4bf4:	6e49 6f66 7200                                   Info.

00004bf9 <rosserial_msgs::REQUESTPARAM>:
    4bf9:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
    4c09:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
    4c19:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
    4c29:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
    4c39:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
    4c49:	6566 2e72 3100 3964 6639 3937 3866 3362     fer..1d99f79f8b3
    4c59:	3532 3462 6634 6565 3039 3038 3335 3965     25b44fee908053e9
    4c69:	3963 3534 0062 7473 5f64 736d 7367 492f     c945b.std_msgs/I
    4c79:	746e 3233 754d 746c 4169 7272 7961 3000     nt32MultiArray.0
    4c89:	6566 3264 3161 6331 3331 3165 6331 3535     fed2a11c13e11c55
    4c99:	3137 3462 3265 3961 3539 3961 6131 0033     71b4e2a995a91a3.
    4ca9:	7473 5f64 736d 7367 4d2f 6c75 6974 7241     std_msgs/MultiAr
    4cb9:	6172 4c79 7961 756f 0074 6334 3064 3863     rayLayout.4cd0c8
    4cc9:	6133 3638 3338 6564 6561 3034 6365 6164     3a8683deae40ecda
    4cd9:	3663 6530 3335 6662 3861 7300 6474 6d5f     c60e53bfa8.std_m
    4ce9:	6773 2f73 754d 746c 4169 7272 7961 6944     sgs/MultiArrayDi
    4cf9:	656d 736e 6f69 006e 6463 3137 3636 3763     mension.cd7166c7
    4d09:	6334 3535 6332 3133 6631 6362 3263 6566     4c552c311fbcc2fe
    4d19:	6135 6237 3263 3938 7300 6474 6d5f 6773     5a7bc289.std_msg
    4d29:	2f73 6954 656d c300                              s/Time.

00004d30 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
    4d30:	11c3 0000 11b5 0000 11c1 0000 682f 6d6f     ............/hom
    4d40:	2f65 6b6b 7472 722f 736f 6c2f 6269 722f     e/kkrt/ros/lib/r
    4d50:	736f 6c5f 6269 422f 6675 6566 6572 5364     os_lib/BufferedS
    4d60:	7265 6169 2f6c 7542 6666 7265 6465 6553     erial/BufferedSe
    4d70:	6972 6c61 632e 7070 2500 2073 6425 6220     rial.cpp.%s %d b
    4d80:	6675 6566 2072 766f 7265 7277 7469 2065     uffer overwrite 
    4d90:	6d28 7861 625f 6675 735f 7a69 3a65 2520     (max_buf_size: %
    4da0:	2064 7865 6563 6465 6465 203a 6425 2129     d exceeded: %d)!
    4db0:	0a0d 0000                                   ....

00004db4 <vtable for BufferedSerial>:
	...
    4dbc:	36bf 0000 36bf 0000 1219 0000 1271 0000     .6...6......q...
    4dcc:	1185 0000 1191 0000 1195 0000 13db 0000     ................
    4ddc:	13f3 0000 146d 0000 1431 0000               ....m...1...

00004de8 <us_data>:
    4de8:	4df0 0000 0930 1000                         .M..0...

00004df0 <us_interface>:
    4df0:	3421 0000 347d 0000 34ad 0000 34bd 0000     !4..}4...4...4..
    4e00:	3499 0000 6970 6d6e 7061 6d20 7369 6d2d     .4..pinmap mis-m
    4e10:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
    4e20:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
    4e30:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
    4e40:	6e69 756f 0074 0000                         inout...

00004e48 <mp_stk_size>:
    4e48:	0210 0000                                   ....

00004e4c <mp_tcb_size>:
    4e4c:	03cc                                        ..

00004e4e <mp_tmr_size>:
	...

00004e50 <os_clockrate>:
    4e50:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
    4e60:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
    4e70:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

00004e7d <os_fifo_size>:
    4e7d:	0110                                             .

00004e7e <os_flags>:
    4e7e:	0001                                        ..

00004e80 <os_maxtaskrun>:
    4e80:	000f 0000                                   ....

00004e84 <os_messageQ_def_osTimerMessageQ>:
    4e84:	0004 0000 0954 1000                         ....T...

00004e8c <os_mutex_def_env_mutex>:
    4e8c:	0974 1000                                   t...

00004e90 <os_mutex_def_malloc_mutex>:
    4e90:	0984 1000                                   ....

00004e94 <os_mutex_def_singleton_mutex>:
    4e94:	0994 1000                                   ....

00004e98 <os_rrobin>:
    4e98:	0005 0001                                   ....

00004e9c <os_stackinfo>:
    4e9c:	0200 0100                                   ....

00004ea0 <os_thread_def_osTimerThread>:
    4ea0:	26bd 0000 0002 0000 0001 0000 0320 0000     .&.......... ...
    4eb0:	1e90 1000                                   ....

00004eb4 <os_trv>:
    4eb4:	76ff 0001                                   .v..

00004eb8 <os_mutex_def_osThreadMutex>:
    4eb8:	19a8 1000                                   ....

00004ebc <PinMap_UART_CTS>:
    4ebc:	c011 2009 0000 4001 0001 0000 c042 2009     ... ...@....B.. 
    4ecc:	0000 4001 0002 0000 ffff ffff ffff ffff     ...@............
    4edc:	0000 0000                                   ....

00004ee0 <PinMap_UART_RTS>:
    4ee0:	c016 2009 0000 4001 0001 0000 c047 2009     ... ...@....G.. 
    4ef0:	0000 4001 0002 0000 ffff ffff ffff ffff     ...@............
    4f00:	0000 0000                                   ....

00004f04 <PinMap_UART_RX>:
    4f04:	c001 2009 c000 4009 0002 0000 c003 2009     ... ...@....... 
    4f14:	c000 4000 0001 0000 c00b 2009 8000 4009     ...@....... ...@
    4f24:	0001 0000 c010 2009 0000 4001 0001 0000     ....... ...@....
    4f34:	c01a 2009 c000 4009 0003 0000 c041 2009     ... ...@....A.. 
    4f44:	0000 4001 0002 0000 c049 2009 8000 4009     ...@....I.. ...@
    4f54:	0002 0000 c09d 2009 c000 4009 0003 0000     ....... ...@....
    4f64:	ffff ffff ffff ffff 0000 0000               ............

00004f70 <PinMap_UART_TX>:
    4f70:	c000 2009 c000 4009 0002 0000 c002 2009     ... ...@....... 
    4f80:	c000 4000 0001 0000 c00a 2009 8000 4009     ...@....... ...@
    4f90:	0001 0000 c00f 2009 0000 4001 0001 0000     ....... ...@....
    4fa0:	c019 2009 c000 4009 0003 0000 c040 2009     ... ...@....@.. 
    4fb0:	0000 4001 0002 0000 c048 2009 8000 4009     ...@....H.. ...@
    4fc0:	0002 0000 c09c 2009 c000 4009 0003 0000     ....... ...@....
    4fd0:	ffff ffff ffff ffff 0000 0000               ............

00004fdc <vtable for mbed::Ticker>:
	...
    4fe4:	0365 0000 0389 0000 3639 0000               e.......96..

00004ff0 <vtable for mbed::RawSerial>:
	...
    4ff8:	36bf 0000 36bf 0000 36c1 0000 36d5 0000     .6...6...6...6..

00005008 <vtable for mbed::SerialBase>:
	...
    5010:	37c3 0000 37c5 0000 11dd 0000 1205 0000     .7...7..........

00005020 <vtable for mbed::TimerEvent>:
	...
    5030:	1161 0000 704f 7265 7461 726f 6e20 7765     a...Operator new
    5040:	5d5b 6f20 7475 6f20 2066 656d 6f6d 7972     [] out of memory
    5050:	0a0d 0000                                   ....

00005054 <__sf_fake_stderr>:
	...

00005074 <__sf_fake_stdin>:
	...

00005094 <__sf_fake_stdout>:
	...

000050b4 <_global_impure_ptr>:
    50b4:	00f0 1000 3130 3332 3534 3736 3938 4241     ....0123456789AB
    50c4:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
    50d4:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
    50e4:	6665 4567 4746 0000                         efgEFG..

000050ec <__EH_FRAME_BEGIN__>:
    50ec:	0000 0000                                   ....
