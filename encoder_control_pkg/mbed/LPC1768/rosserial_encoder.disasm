
LPC1768/rosserial_encoder.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00003d15


Disassembly of section .text:

00000000 <__isr_vector>:
       0:	10008000 	.word	0x10008000
       4:	00003d15 	.word	0x00003d15
       8:	00003d45 	.word	0x00003d45
       c:	00003d47 	.word	0x00003d47
      10:	00003d49 	.word	0x00003d49
      14:	00003d4b 	.word	0x00003d4b
      18:	00003d4d 	.word	0x00003d4d
	...
      2c:	00003c49 	.word	0x00003c49
      30:	00003d51 	.word	0x00003d51
      34:	00000000 	.word	0x00000000
      38:	00003cb3 	.word	0x00003cb3
      3c:	00003ce9 	.word	0x00003ce9
      40:	00003d57 	.word	0x00003d57
      44:	00003d57 	.word	0x00003d57
      48:	00003d57 	.word	0x00003d57
      4c:	00003d57 	.word	0x00003d57
      50:	00003d57 	.word	0x00003d57
      54:	00003d57 	.word	0x00003d57
      58:	00003d57 	.word	0x00003d57
      5c:	00003d57 	.word	0x00003d57
      60:	00003d57 	.word	0x00003d57
      64:	00003d57 	.word	0x00003d57
      68:	00003d57 	.word	0x00003d57
      6c:	00003d57 	.word	0x00003d57
      70:	00003d57 	.word	0x00003d57
      74:	00003d57 	.word	0x00003d57
      78:	00003d57 	.word	0x00003d57
      7c:	00003d57 	.word	0x00003d57
      80:	00003d57 	.word	0x00003d57
      84:	00003d57 	.word	0x00003d57
      88:	00003d57 	.word	0x00003d57
      8c:	00003d57 	.word	0x00003d57
      90:	00003d57 	.word	0x00003d57
      94:	00003d57 	.word	0x00003d57
      98:	00003d57 	.word	0x00003d57
      9c:	00003d57 	.word	0x00003d57
      a0:	00003d57 	.word	0x00003d57
      a4:	00003d57 	.word	0x00003d57
      a8:	00003d57 	.word	0x00003d57
      ac:	00003d57 	.word	0x00003d57
      b0:	00003d57 	.word	0x00003d57
      b4:	00003d57 	.word	0x00003d57
      b8:	00003d57 	.word	0x00003d57
      bc:	00003d57 	.word	0x00003d57
      c0:	00003d57 	.word	0x00003d57
      c4:	00003d57 	.word	0x00003d57
      c8:	00003d57 	.word	0x00003d57

000000cc <__do_global_dtors_aux>:
      cc:	b510      	push	{r4, lr}
      ce:	4c05      	ldr	r4, [pc, #20]	; (e4 <__do_global_dtors_aux+0x18>)
      d0:	7823      	ldrb	r3, [r4, #0]
      d2:	b933      	cbnz	r3, e2 <__do_global_dtors_aux+0x16>
      d4:	4b04      	ldr	r3, [pc, #16]	; (e8 <__do_global_dtors_aux+0x1c>)
      d6:	b113      	cbz	r3, de <__do_global_dtors_aux+0x12>
      d8:	4804      	ldr	r0, [pc, #16]	; (ec <__do_global_dtors_aux+0x20>)
      da:	f3af 8000 	nop.w
      de:	2301      	movs	r3, #1
      e0:	7023      	strb	r3, [r4, #0]
      e2:	bd10      	pop	{r4, pc}
      e4:	10000160 	.word	0x10000160
      e8:	00000000 	.word	0x00000000
      ec:	00005138 	.word	0x00005138

000000f0 <frame_dummy>:
      f0:	4b0c      	ldr	r3, [pc, #48]	; (124 <frame_dummy+0x34>)
      f2:	b143      	cbz	r3, 106 <frame_dummy+0x16>
      f4:	480c      	ldr	r0, [pc, #48]	; (128 <frame_dummy+0x38>)
      f6:	b510      	push	{r4, lr}
      f8:	490c      	ldr	r1, [pc, #48]	; (12c <frame_dummy+0x3c>)
      fa:	f3af 8000 	nop.w
      fe:	480c      	ldr	r0, [pc, #48]	; (130 <frame_dummy+0x40>)
     100:	6803      	ldr	r3, [r0, #0]
     102:	b923      	cbnz	r3, 10e <frame_dummy+0x1e>
     104:	bd10      	pop	{r4, pc}
     106:	480a      	ldr	r0, [pc, #40]	; (130 <frame_dummy+0x40>)
     108:	6803      	ldr	r3, [r0, #0]
     10a:	b933      	cbnz	r3, 11a <frame_dummy+0x2a>
     10c:	4770      	bx	lr
     10e:	4b09      	ldr	r3, [pc, #36]	; (134 <frame_dummy+0x44>)
     110:	2b00      	cmp	r3, #0
     112:	d0f7      	beq.n	104 <frame_dummy+0x14>
     114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     118:	4718      	bx	r3
     11a:	4b06      	ldr	r3, [pc, #24]	; (134 <frame_dummy+0x44>)
     11c:	2b00      	cmp	r3, #0
     11e:	d0f5      	beq.n	10c <frame_dummy+0x1c>
     120:	4718      	bx	r3
     122:	bf00      	nop
     124:	00000000 	.word	0x00000000
     128:	00005138 	.word	0x00005138
     12c:	10000164 	.word	0x10000164
     130:	1000015c 	.word	0x1000015c
     134:	00000000 	.word	0x00000000

00000138 <std_msgs::Time::serialize(unsigned char*) const>:
     138:	6843      	ldr	r3, [r0, #4]
     13a:	700b      	strb	r3, [r1, #0]
     13c:	6843      	ldr	r3, [r0, #4]
     13e:	0a1b      	lsrs	r3, r3, #8
     140:	704b      	strb	r3, [r1, #1]
     142:	88c3      	ldrh	r3, [r0, #6]
     144:	708b      	strb	r3, [r1, #2]
     146:	79c3      	ldrb	r3, [r0, #7]
     148:	70cb      	strb	r3, [r1, #3]
     14a:	6883      	ldr	r3, [r0, #8]
     14c:	710b      	strb	r3, [r1, #4]
     14e:	6883      	ldr	r3, [r0, #8]
     150:	0a1b      	lsrs	r3, r3, #8
     152:	714b      	strb	r3, [r1, #5]
     154:	8943      	ldrh	r3, [r0, #10]
     156:	718b      	strb	r3, [r1, #6]
     158:	7ac3      	ldrb	r3, [r0, #11]
     15a:	2008      	movs	r0, #8
     15c:	71cb      	strb	r3, [r1, #7]
     15e:	4770      	bx	lr

00000160 <std_msgs::Time::deserialize(unsigned char*)>:
     160:	780b      	ldrb	r3, [r1, #0]
     162:	6043      	str	r3, [r0, #4]
     164:	784a      	ldrb	r2, [r1, #1]
     166:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
     16a:	6043      	str	r3, [r0, #4]
     16c:	788a      	ldrb	r2, [r1, #2]
     16e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
     172:	6043      	str	r3, [r0, #4]
     174:	78ca      	ldrb	r2, [r1, #3]
     176:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
     17a:	6043      	str	r3, [r0, #4]
     17c:	790b      	ldrb	r3, [r1, #4]
     17e:	6083      	str	r3, [r0, #8]
     180:	794a      	ldrb	r2, [r1, #5]
     182:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
     186:	6083      	str	r3, [r0, #8]
     188:	798a      	ldrb	r2, [r1, #6]
     18a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
     18e:	6083      	str	r3, [r0, #8]
     190:	79ca      	ldrb	r2, [r1, #7]
     192:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
     196:	6083      	str	r3, [r0, #8]
     198:	2008      	movs	r0, #8
     19a:	4770      	bx	lr

0000019c <std_msgs::Time::getType()>:
     19c:	4800      	ldr	r0, [pc, #0]	; (1a0 <std_msgs::Time::getType()+0x4>)
     19e:	4770      	bx	lr
     1a0:	00004d6c 	.word	0x00004d6c

000001a4 <std_msgs::Time::getMD5()>:
     1a4:	4800      	ldr	r0, [pc, #0]	; (1a8 <std_msgs::Time::getMD5()+0x4>)
     1a6:	4770      	bx	lr
     1a8:	00004d4b 	.word	0x00004d4b

000001ac <rosserial_msgs::TopicInfo::getType()>:
     1ac:	4800      	ldr	r0, [pc, #0]	; (1b0 <rosserial_msgs::TopicInfo::getType()+0x4>)
     1ae:	4770      	bx	lr
     1b0:	00004c2a 	.word	0x00004c2a

000001b4 <rosserial_msgs::TopicInfo::getMD5()>:
     1b4:	4800      	ldr	r0, [pc, #0]	; (1b8 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
     1b6:	4770      	bx	lr
     1b8:	00004c09 	.word	0x00004c09

000001bc <rosserial_msgs::Log::getType()>:
     1bc:	4800      	ldr	r0, [pc, #0]	; (1c0 <rosserial_msgs::Log::getType()+0x4>)
     1be:	4770      	bx	lr
     1c0:	00004bf6 	.word	0x00004bf6

000001c4 <rosserial_msgs::Log::getMD5()>:
     1c4:	4800      	ldr	r0, [pc, #0]	; (1c8 <rosserial_msgs::Log::getMD5()+0x4>)
     1c6:	4770      	bx	lr
     1c8:	00004bd5 	.word	0x00004bd5

000001cc <rosserial_msgs::RequestParamResponse::getType()>:
     1cc:	4800      	ldr	r0, [pc, #0]	; (1d0 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
     1ce:	4770      	bx	lr
     1d0:	00004c43 	.word	0x00004c43

000001d4 <rosserial_msgs::RequestParamResponse::getMD5()>:
     1d4:	4800      	ldr	r0, [pc, #0]	; (1d8 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
     1d6:	4770      	bx	lr
     1d8:	00004bb4 	.word	0x00004bb4

000001dc <std_msgs::MultiArrayDimension::getType()>:
     1dc:	4800      	ldr	r0, [pc, #0]	; (1e0 <std_msgs::MultiArrayDimension::getType()+0x4>)
     1de:	4770      	bx	lr
     1e0:	00004d2e 	.word	0x00004d2e

000001e4 <std_msgs::MultiArrayDimension::getMD5()>:
     1e4:	4800      	ldr	r0, [pc, #0]	; (1e8 <std_msgs::MultiArrayDimension::getMD5()+0x4>)
     1e6:	4770      	bx	lr
     1e8:	00004d0d 	.word	0x00004d0d

000001ec <std_msgs::MultiArrayLayout::serialize(unsigned char*) const>:
     1ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     1ee:	4604      	mov	r4, r0
     1f0:	460d      	mov	r5, r1
     1f2:	2700      	movs	r7, #0
     1f4:	2604      	movs	r6, #4
     1f6:	6843      	ldr	r3, [r0, #4]
     1f8:	700b      	strb	r3, [r1, #0]
     1fa:	6843      	ldr	r3, [r0, #4]
     1fc:	0a1b      	lsrs	r3, r3, #8
     1fe:	704b      	strb	r3, [r1, #1]
     200:	88c3      	ldrh	r3, [r0, #6]
     202:	708b      	strb	r3, [r1, #2]
     204:	79c3      	ldrb	r3, [r0, #7]
     206:	70cb      	strb	r3, [r1, #3]
     208:	6863      	ldr	r3, [r4, #4]
     20a:	19a9      	adds	r1, r5, r6
     20c:	429f      	cmp	r7, r3
     20e:	d208      	bcs.n	222 <std_msgs::MultiArrayLayout::serialize(unsigned char*) const+0x36>
     210:	69a0      	ldr	r0, [r4, #24]
     212:	013b      	lsls	r3, r7, #4
     214:	58c2      	ldr	r2, [r0, r3]
     216:	4418      	add	r0, r3
     218:	6812      	ldr	r2, [r2, #0]
     21a:	4790      	blx	r2
     21c:	3701      	adds	r7, #1
     21e:	4406      	add	r6, r0
     220:	e7f2      	b.n	208 <std_msgs::MultiArrayLayout::serialize(unsigned char*) const+0x1c>
     222:	69e3      	ldr	r3, [r4, #28]
     224:	1d30      	adds	r0, r6, #4
     226:	55ab      	strb	r3, [r5, r6]
     228:	69e3      	ldr	r3, [r4, #28]
     22a:	0a1b      	lsrs	r3, r3, #8
     22c:	704b      	strb	r3, [r1, #1]
     22e:	8be3      	ldrh	r3, [r4, #30]
     230:	708b      	strb	r3, [r1, #2]
     232:	7fe3      	ldrb	r3, [r4, #31]
     234:	70cb      	strb	r3, [r1, #3]
     236:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00000238 <std_msgs::MultiArrayLayout::getType()>:
     238:	4800      	ldr	r0, [pc, #0]	; (23c <std_msgs::MultiArrayLayout::getType()+0x4>)
     23a:	4770      	bx	lr
     23c:	00004cf3 	.word	0x00004cf3

00000240 <std_msgs::MultiArrayLayout::getMD5()>:
     240:	4800      	ldr	r0, [pc, #0]	; (244 <std_msgs::MultiArrayLayout::getMD5()+0x4>)
     242:	4770      	bx	lr
     244:	00004cd2 	.word	0x00004cd2

00000248 <std_msgs::Int32MultiArray::serialize(unsigned char*) const>:
     248:	b538      	push	{r3, r4, r5, lr}
     24a:	4604      	mov	r4, r0
     24c:	3004      	adds	r0, #4
     24e:	460d      	mov	r5, r1
     250:	f7ff ffcc 	bl	1ec <std_msgs::MultiArrayLayout::serialize(unsigned char*) const>
     254:	2100      	movs	r1, #0
     256:	6a63      	ldr	r3, [r4, #36]	; 0x24
     258:	542b      	strb	r3, [r5, r0]
     25a:	6a62      	ldr	r2, [r4, #36]	; 0x24
     25c:	182b      	adds	r3, r5, r0
     25e:	0a12      	lsrs	r2, r2, #8
     260:	705a      	strb	r2, [r3, #1]
     262:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
     264:	3004      	adds	r0, #4
     266:	709a      	strb	r2, [r3, #2]
     268:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
     26c:	70da      	strb	r2, [r3, #3]
     26e:	182b      	adds	r3, r5, r0
     270:	6a62      	ldr	r2, [r4, #36]	; 0x24
     272:	1b58      	subs	r0, r3, r5
     274:	4291      	cmp	r1, r2
     276:	f103 0304 	add.w	r3, r3, #4
     27a:	d20f      	bcs.n	29c <std_msgs::Int32MultiArray::serialize(unsigned char*) const+0x54>
     27c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     27e:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
     282:	3101      	adds	r1, #1
     284:	0a10      	lsrs	r0, r2, #8
     286:	f803 2c04 	strb.w	r2, [r3, #-4]
     28a:	f803 0c03 	strb.w	r0, [r3, #-3]
     28e:	0c10      	lsrs	r0, r2, #16
     290:	0e12      	lsrs	r2, r2, #24
     292:	f803 0c02 	strb.w	r0, [r3, #-2]
     296:	f803 2c01 	strb.w	r2, [r3, #-1]
     29a:	e7e9      	b.n	270 <std_msgs::Int32MultiArray::serialize(unsigned char*) const+0x28>
     29c:	bd38      	pop	{r3, r4, r5, pc}
	...

000002a0 <std_msgs::Int32MultiArray::getType()>:
     2a0:	4800      	ldr	r0, [pc, #0]	; (2a4 <std_msgs::Int32MultiArray::getType()+0x4>)
     2a2:	4770      	bx	lr
     2a4:	00004cb9 	.word	0x00004cb9

000002a8 <std_msgs::Int32MultiArray::getMD5()>:
     2a8:	4800      	ldr	r0, [pc, #0]	; (2ac <std_msgs::Int32MultiArray::getMD5()+0x4>)
     2aa:	4770      	bx	lr
     2ac:	00004c98 	.word	0x00004c98

000002b0 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
     2b0:	6803      	ldr	r3, [r0, #0]
     2b2:	4718      	bx	r3

000002b4 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
     2b4:	b108      	cbz	r0, 2ba <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
     2b6:	680b      	ldr	r3, [r1, #0]
     2b8:	6003      	str	r3, [r0, #0]
     2ba:	4770      	bx	lr

000002bc <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
     2bc:	4770      	bx	lr

000002be <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
     2be:	f890 055c 	ldrb.w	r0, [r0, #1372]	; 0x55c
     2c2:	4770      	bx	lr

000002c4 <enc_loop()>:
     2c4:	2200      	movs	r2, #0
     2c6:	b5f0      	push	{r4, r5, r6, r7, lr}
     2c8:	4916      	ldr	r1, [pc, #88]	; (324 <enc_loop()+0x60>)
     2ca:	4c17      	ldr	r4, [pc, #92]	; (328 <enc_loop()+0x64>)
     2cc:	4f17      	ldr	r7, [pc, #92]	; (32c <enc_loop()+0x68>)
     2ce:	4d18      	ldr	r5, [pc, #96]	; (330 <enc_loop()+0x6c>)
     2d0:	4e18      	ldr	r6, [pc, #96]	; (334 <enc_loop()+0x70>)
     2d2:	6acb      	ldr	r3, [r1, #44]	; 0x2c
     2d4:	3130      	adds	r1, #48	; 0x30
     2d6:	6818      	ldr	r0, [r3, #0]
     2d8:	f851 3c1c 	ldr.w	r3, [r1, #-28]
     2dc:	f8d3 e000 	ldr.w	lr, [r3]
     2e0:	f851 3c14 	ldr.w	r3, [r1, #-20]
     2e4:	4218      	tst	r0, r3
     2e6:	bf14      	ite	ne
     2e8:	2302      	movne	r3, #2
     2ea:	2300      	moveq	r3, #0
     2ec:	f851 0c2c 	ldr.w	r0, [r1, #-44]
     2f0:	ea1e 0f00 	tst.w	lr, r0
     2f4:	bf18      	it	ne
     2f6:	f043 0301 	orrne.w	r3, r3, #1
     2fa:	f894 e001 	ldrb.w	lr, [r4, #1]
     2fe:	b2d8      	uxtb	r0, r3
     300:	ea43 038e 	orr.w	r3, r3, lr, lsl #2
     304:	b2db      	uxtb	r3, r3
     306:	55d0      	strb	r0, [r2, r7]
     308:	f804 0f01 	strb.w	r0, [r4, #1]!
     30c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
     310:	f855 0022 	ldr.w	r0, [r5, r2, lsl #2]
     314:	4418      	add	r0, r3
     316:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
     31a:	3201      	adds	r2, #1
     31c:	2a08      	cmp	r2, #8
     31e:	d1d8      	bne.n	2d2 <enc_loop()+0xe>
     320:	bdf0      	pop	{r4, r5, r6, r7, pc}
     322:	bf00      	nop
     324:	100001a4 	.word	0x100001a4
     328:	1000032b 	.word	0x1000032b
     32c:	10000324 	.word	0x10000324
     330:	10000334 	.word	0x10000334
     334:	00004b74 	.word	0x00004b74

00000338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>:
     338:	b570      	push	{r4, r5, r6, lr}
     33a:	4604      	mov	r4, r0
     33c:	460d      	mov	r5, r1
     33e:	4616      	mov	r6, r2
     340:	2100      	movs	r1, #0
     342:	2218      	movs	r2, #24
     344:	f003 ff03 	bl	414e <memset>
     348:	4620      	mov	r0, r4
     34a:	4632      	mov	r2, r6
     34c:	4629      	mov	r1, r5
     34e:	f001 f90c 	bl	156a <gpio_init_in_ex>
     352:	4620      	mov	r0, r4
     354:	bd70      	pop	{r4, r5, r6, pc}

00000356 <mbed::Callback<void ()>::~Callback()>:
     356:	68c3      	ldr	r3, [r0, #12]
     358:	b510      	push	{r4, lr}
     35a:	4604      	mov	r4, r0
     35c:	b10b      	cbz	r3, 362 <mbed::Callback<void ()>::~Callback()+0xc>
     35e:	689b      	ldr	r3, [r3, #8]
     360:	4798      	blx	r3
     362:	4620      	mov	r0, r4
     364:	bd10      	pop	{r4, pc}
	...

00000368 <mbed::Ticker::~Ticker()>:
     368:	b538      	push	{r3, r4, r5, lr}
     36a:	4605      	mov	r5, r0
     36c:	4604      	mov	r4, r0
     36e:	4b06      	ldr	r3, [pc, #24]	; (388 <mbed::Ticker::~Ticker()+0x20>)
     370:	f845 3b18 	str.w	r3, [r5], #24
     374:	f003 f986 	bl	3684 <mbed::Ticker::detach()>
     378:	4628      	mov	r0, r5
     37a:	f7ff ffec 	bl	356 <mbed::Callback<void ()>::~Callback()>
     37e:	4620      	mov	r0, r4
     380:	f003 fad6 	bl	3930 <mbed::TimerEvent::~TimerEvent()>
     384:	4620      	mov	r0, r4
     386:	bd38      	pop	{r3, r4, r5, pc}
     388:	00005030 	.word	0x00005030

0000038c <mbed::Ticker::~Ticker()>:
     38c:	b510      	push	{r4, lr}
     38e:	4604      	mov	r4, r0
     390:	f7ff ffea 	bl	368 <mbed::Ticker::~Ticker()>
     394:	4620      	mov	r0, r4
     396:	f003 fc1d 	bl	3bd4 <operator delete(void*)>
     39a:	4620      	mov	r0, r4
     39c:	bd10      	pop	{r4, pc}

0000039e <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>:
     39e:	b538      	push	{r3, r4, r5, lr}
     3a0:	68cb      	ldr	r3, [r1, #12]
     3a2:	4604      	mov	r4, r0
     3a4:	460d      	mov	r5, r1
     3a6:	b10b      	cbz	r3, 3ac <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)+0xe>
     3a8:	685b      	ldr	r3, [r3, #4]
     3aa:	4798      	blx	r3
     3ac:	68eb      	ldr	r3, [r5, #12]
     3ae:	4620      	mov	r0, r4
     3b0:	60e3      	str	r3, [r4, #12]
     3b2:	bd38      	pop	{r3, r4, r5, pc}

000003b4 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
     3b4:	2300      	movs	r3, #0
     3b6:	3801      	subs	r0, #1
     3b8:	fa21 f203 	lsr.w	r2, r1, r3
     3bc:	3308      	adds	r3, #8
     3be:	2b20      	cmp	r3, #32
     3c0:	f800 2f01 	strb.w	r2, [r0, #1]!
     3c4:	d1f8      	bne.n	3b8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
     3c6:	4770      	bx	lr

000003c8 <std_msgs::MultiArrayDimension::serialize(unsigned char*) const>:
     3c8:	b570      	push	{r4, r5, r6, lr}
     3ca:	4605      	mov	r5, r0
     3cc:	6840      	ldr	r0, [r0, #4]
     3ce:	460c      	mov	r4, r1
     3d0:	f004 f989 	bl	46e6 <strlen>
     3d4:	4606      	mov	r6, r0
     3d6:	4601      	mov	r1, r0
     3d8:	4620      	mov	r0, r4
     3da:	f7ff ffeb 	bl	3b4 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     3de:	6869      	ldr	r1, [r5, #4]
     3e0:	4632      	mov	r2, r6
     3e2:	1d20      	adds	r0, r4, #4
     3e4:	f003 fe8e 	bl	4104 <memcpy>
     3e8:	68ab      	ldr	r3, [r5, #8]
     3ea:	19a1      	adds	r1, r4, r6
     3ec:	710b      	strb	r3, [r1, #4]
     3ee:	68ab      	ldr	r3, [r5, #8]
     3f0:	f106 000c 	add.w	r0, r6, #12
     3f4:	0a1b      	lsrs	r3, r3, #8
     3f6:	714b      	strb	r3, [r1, #5]
     3f8:	896b      	ldrh	r3, [r5, #10]
     3fa:	718b      	strb	r3, [r1, #6]
     3fc:	7aeb      	ldrb	r3, [r5, #11]
     3fe:	71cb      	strb	r3, [r1, #7]
     400:	68eb      	ldr	r3, [r5, #12]
     402:	720b      	strb	r3, [r1, #8]
     404:	68eb      	ldr	r3, [r5, #12]
     406:	0a1b      	lsrs	r3, r3, #8
     408:	724b      	strb	r3, [r1, #9]
     40a:	89eb      	ldrh	r3, [r5, #14]
     40c:	728b      	strb	r3, [r1, #10]
     40e:	7beb      	ldrb	r3, [r5, #15]
     410:	72cb      	strb	r3, [r1, #11]
     412:	bd70      	pop	{r4, r5, r6, pc}

00000414 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
     414:	6843      	ldr	r3, [r0, #4]
     416:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     41a:	700b      	strb	r3, [r1, #0]
     41c:	6843      	ldr	r3, [r0, #4]
     41e:	460d      	mov	r5, r1
     420:	0a1b      	lsrs	r3, r3, #8
     422:	704b      	strb	r3, [r1, #1]
     424:	88c3      	ldrh	r3, [r0, #6]
     426:	1d0a      	adds	r2, r1, #4
     428:	708b      	strb	r3, [r1, #2]
     42a:	79c3      	ldrb	r3, [r0, #7]
     42c:	4604      	mov	r4, r0
     42e:	70cb      	strb	r3, [r1, #3]
     430:	2100      	movs	r1, #0
     432:	6860      	ldr	r0, [r4, #4]
     434:	1b53      	subs	r3, r2, r5
     436:	4281      	cmp	r1, r0
     438:	f102 0204 	add.w	r2, r2, #4
     43c:	d20f      	bcs.n	45e <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4a>
     43e:	68e3      	ldr	r3, [r4, #12]
     440:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
     444:	3101      	adds	r1, #1
     446:	0a18      	lsrs	r0, r3, #8
     448:	f802 3c04 	strb.w	r3, [r2, #-4]
     44c:	f802 0c03 	strb.w	r0, [r2, #-3]
     450:	0c18      	lsrs	r0, r3, #16
     452:	0e1b      	lsrs	r3, r3, #24
     454:	f802 0c02 	strb.w	r0, [r2, #-2]
     458:	f802 3c01 	strb.w	r3, [r2, #-1]
     45c:	e7e9      	b.n	432 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
     45e:	6922      	ldr	r2, [r4, #16]
     460:	54ea      	strb	r2, [r5, r3]
     462:	6921      	ldr	r1, [r4, #16]
     464:	18ea      	adds	r2, r5, r3
     466:	0a09      	lsrs	r1, r1, #8
     468:	7051      	strb	r1, [r2, #1]
     46a:	8a61      	ldrh	r1, [r4, #18]
     46c:	3304      	adds	r3, #4
     46e:	7091      	strb	r1, [r2, #2]
     470:	7ce1      	ldrb	r1, [r4, #19]
     472:	442b      	add	r3, r5
     474:	70d1      	strb	r1, [r2, #3]
     476:	2100      	movs	r1, #0
     478:	6922      	ldr	r2, [r4, #16]
     47a:	1b5e      	subs	r6, r3, r5
     47c:	4291      	cmp	r1, r2
     47e:	f103 0304 	add.w	r3, r3, #4
     482:	d20f      	bcs.n	4a4 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x90>
     484:	69a2      	ldr	r2, [r4, #24]
     486:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
     48a:	3101      	adds	r1, #1
     48c:	0a10      	lsrs	r0, r2, #8
     48e:	f803 2c04 	strb.w	r2, [r3, #-4]
     492:	f803 0c03 	strb.w	r0, [r3, #-3]
     496:	0c10      	lsrs	r0, r2, #16
     498:	0e12      	lsrs	r2, r2, #24
     49a:	f803 0c02 	strb.w	r0, [r3, #-2]
     49e:	f803 2c01 	strb.w	r2, [r3, #-1]
     4a2:	e7e9      	b.n	478 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x64>
     4a4:	2700      	movs	r7, #0
     4a6:	69e3      	ldr	r3, [r4, #28]
     4a8:	55ab      	strb	r3, [r5, r6]
     4aa:	69e2      	ldr	r2, [r4, #28]
     4ac:	19ab      	adds	r3, r5, r6
     4ae:	0a12      	lsrs	r2, r2, #8
     4b0:	705a      	strb	r2, [r3, #1]
     4b2:	8be2      	ldrh	r2, [r4, #30]
     4b4:	3604      	adds	r6, #4
     4b6:	709a      	strb	r2, [r3, #2]
     4b8:	7fe2      	ldrb	r2, [r4, #31]
     4ba:	70da      	strb	r2, [r3, #3]
     4bc:	69e3      	ldr	r3, [r4, #28]
     4be:	429f      	cmp	r7, r3
     4c0:	d214      	bcs.n	4ec <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xd8>
     4c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
     4c4:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
     4c8:	f004 f90d 	bl	46e6 <strlen>
     4cc:	4680      	mov	r8, r0
     4ce:	4601      	mov	r1, r0
     4d0:	19a8      	adds	r0, r5, r6
     4d2:	f7ff ff6f 	bl	3b4 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     4d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
     4d8:	3604      	adds	r6, #4
     4da:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
     4de:	19a8      	adds	r0, r5, r6
     4e0:	4642      	mov	r2, r8
     4e2:	f003 fe0f 	bl	4104 <memcpy>
     4e6:	4446      	add	r6, r8
     4e8:	3701      	adds	r7, #1
     4ea:	e7e7      	b.n	4bc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xa8>
     4ec:	4630      	mov	r0, r6
     4ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000004f2 <rosserial_msgs::Log::serialize(unsigned char*) const>:
     4f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     4f4:	460e      	mov	r6, r1
     4f6:	7903      	ldrb	r3, [r0, #4]
     4f8:	4605      	mov	r5, r0
     4fa:	f806 3b01 	strb.w	r3, [r6], #1
     4fe:	6880      	ldr	r0, [r0, #8]
     500:	460f      	mov	r7, r1
     502:	f004 f8f0 	bl	46e6 <strlen>
     506:	4604      	mov	r4, r0
     508:	4601      	mov	r1, r0
     50a:	4630      	mov	r0, r6
     50c:	f7ff ff52 	bl	3b4 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     510:	4622      	mov	r2, r4
     512:	68a9      	ldr	r1, [r5, #8]
     514:	1d78      	adds	r0, r7, #5
     516:	f003 fdf5 	bl	4104 <memcpy>
     51a:	1d60      	adds	r0, r4, #5
     51c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000051e <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
     51e:	8883      	ldrh	r3, [r0, #4]
     520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     524:	700b      	strb	r3, [r1, #0]
     526:	8883      	ldrh	r3, [r0, #4]
     528:	4605      	mov	r5, r0
     52a:	0a1b      	lsrs	r3, r3, #8
     52c:	704b      	strb	r3, [r1, #1]
     52e:	6880      	ldr	r0, [r0, #8]
     530:	460c      	mov	r4, r1
     532:	f004 f8d8 	bl	46e6 <strlen>
     536:	4607      	mov	r7, r0
     538:	4601      	mov	r1, r0
     53a:	1ca0      	adds	r0, r4, #2
     53c:	f7ff ff3a 	bl	3b4 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     540:	463a      	mov	r2, r7
     542:	68a9      	ldr	r1, [r5, #8]
     544:	1da0      	adds	r0, r4, #6
     546:	f003 fddd 	bl	4104 <memcpy>
     54a:	68e8      	ldr	r0, [r5, #12]
     54c:	f004 f8cb 	bl	46e6 <strlen>
     550:	4606      	mov	r6, r0
     552:	f107 0806 	add.w	r8, r7, #6
     556:	4601      	mov	r1, r0
     558:	370a      	adds	r7, #10
     55a:	eb04 0008 	add.w	r0, r4, r8
     55e:	f7ff ff29 	bl	3b4 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     562:	4632      	mov	r2, r6
     564:	68e9      	ldr	r1, [r5, #12]
     566:	19e0      	adds	r0, r4, r7
     568:	f003 fdcc 	bl	4104 <memcpy>
     56c:	6928      	ldr	r0, [r5, #16]
     56e:	f004 f8ba 	bl	46e6 <strlen>
     572:	443e      	add	r6, r7
     574:	4607      	mov	r7, r0
     576:	4601      	mov	r1, r0
     578:	19a0      	adds	r0, r4, r6
     57a:	3604      	adds	r6, #4
     57c:	f7ff ff1a 	bl	3b4 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
     580:	463a      	mov	r2, r7
     582:	19a0      	adds	r0, r4, r6
     584:	6929      	ldr	r1, [r5, #16]
     586:	f003 fdbd 	bl	4104 <memcpy>
     58a:	696b      	ldr	r3, [r5, #20]
     58c:	443e      	add	r6, r7
     58e:	55a3      	strb	r3, [r4, r6]
     590:	0a1a      	lsrs	r2, r3, #8
     592:	4434      	add	r4, r6
     594:	7062      	strb	r2, [r4, #1]
     596:	0c1a      	lsrs	r2, r3, #16
     598:	0e1b      	lsrs	r3, r3, #24
     59a:	70a2      	strb	r2, [r4, #2]
     59c:	70e3      	strb	r3, [r4, #3]
     59e:	1d30      	adds	r0, r6, #4
     5a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000005a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
     5a4:	2300      	movs	r3, #0
     5a6:	b510      	push	{r4, lr}
     5a8:	6003      	str	r3, [r0, #0]
     5aa:	3901      	subs	r1, #1
     5ac:	f811 2f01 	ldrb.w	r2, [r1, #1]!
     5b0:	fa02 f403 	lsl.w	r4, r2, r3
     5b4:	6802      	ldr	r2, [r0, #0]
     5b6:	3308      	adds	r3, #8
     5b8:	4322      	orrs	r2, r4
     5ba:	2b20      	cmp	r3, #32
     5bc:	6002      	str	r2, [r0, #0]
     5be:	d1f5      	bne.n	5ac <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
     5c0:	bd10      	pop	{r4, pc}

000005c2 <rosserial_msgs::Log::deserialize(unsigned char*)>:
     5c2:	b537      	push	{r0, r1, r2, r4, r5, lr}
     5c4:	460c      	mov	r4, r1
     5c6:	f811 3b01 	ldrb.w	r3, [r1], #1
     5ca:	4605      	mov	r5, r0
     5cc:	7103      	strb	r3, [r0, #4]
     5ce:	a801      	add	r0, sp, #4
     5d0:	f7ff ffe8 	bl	5a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     5d4:	9b01      	ldr	r3, [sp, #4]
     5d6:	1d62      	adds	r2, r4, #5
     5d8:	1d58      	adds	r0, r3, #5
     5da:	1b11      	subs	r1, r2, r4
     5dc:	4288      	cmp	r0, r1
     5de:	d904      	bls.n	5ea <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
     5e0:	f812 1b01 	ldrb.w	r1, [r2], #1
     5e4:	f802 1c02 	strb.w	r1, [r2, #-2]
     5e8:	e7f7      	b.n	5da <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
     5ea:	2200      	movs	r2, #0
     5ec:	4423      	add	r3, r4
     5ee:	3404      	adds	r4, #4
     5f0:	711a      	strb	r2, [r3, #4]
     5f2:	60ac      	str	r4, [r5, #8]
     5f4:	b003      	add	sp, #12
     5f6:	bd30      	pop	{r4, r5, pc}

000005f8 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
     5f8:	b5f0      	push	{r4, r5, r6, r7, lr}
     5fa:	460c      	mov	r4, r1
     5fc:	780b      	ldrb	r3, [r1, #0]
     5fe:	b085      	sub	sp, #20
     600:	8083      	strh	r3, [r0, #4]
     602:	784a      	ldrb	r2, [r1, #1]
     604:	4606      	mov	r6, r0
     606:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
     60a:	8083      	strh	r3, [r0, #4]
     60c:	3102      	adds	r1, #2
     60e:	a801      	add	r0, sp, #4
     610:	f7ff ffc8 	bl	5a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     614:	9f01      	ldr	r7, [sp, #4]
     616:	1da3      	adds	r3, r4, #6
     618:	1dbd      	adds	r5, r7, #6
     61a:	1b1a      	subs	r2, r3, r4
     61c:	4295      	cmp	r5, r2
     61e:	d904      	bls.n	62a <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
     620:	f813 2b01 	ldrb.w	r2, [r3], #1
     624:	f803 2c02 	strb.w	r2, [r3, #-2]
     628:	e7f7      	b.n	61a <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
     62a:	2200      	movs	r2, #0
     62c:	19e3      	adds	r3, r4, r7
     62e:	715a      	strb	r2, [r3, #5]
     630:	1d63      	adds	r3, r4, #5
     632:	60b3      	str	r3, [r6, #8]
     634:	1961      	adds	r1, r4, r5
     636:	a802      	add	r0, sp, #8
     638:	f7ff ffb4 	bl	5a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     63c:	1d2b      	adds	r3, r5, #4
     63e:	9d02      	ldr	r5, [sp, #8]
     640:	f107 020a 	add.w	r2, r7, #10
     644:	441d      	add	r5, r3
     646:	4422      	add	r2, r4
     648:	1b11      	subs	r1, r2, r4
     64a:	428d      	cmp	r5, r1
     64c:	d904      	bls.n	658 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
     64e:	f812 1b01 	ldrb.w	r1, [r2], #1
     652:	f802 1c02 	strb.w	r1, [r2, #-2]
     656:	e7f7      	b.n	648 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
     658:	2200      	movs	r2, #0
     65a:	3b01      	subs	r3, #1
     65c:	1961      	adds	r1, r4, r5
     65e:	4423      	add	r3, r4
     660:	f801 2c01 	strb.w	r2, [r1, #-1]
     664:	a803      	add	r0, sp, #12
     666:	60f3      	str	r3, [r6, #12]
     668:	f7ff ff9c 	bl	5a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     66c:	9803      	ldr	r0, [sp, #12]
     66e:	3504      	adds	r5, #4
     670:	4428      	add	r0, r5
     672:	1963      	adds	r3, r4, r5
     674:	1b1a      	subs	r2, r3, r4
     676:	4290      	cmp	r0, r2
     678:	d904      	bls.n	684 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
     67a:	f813 2b01 	ldrb.w	r2, [r3], #1
     67e:	f803 2c02 	strb.w	r2, [r3, #-2]
     682:	e7f7      	b.n	674 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
     684:	2300      	movs	r3, #0
     686:	3d01      	subs	r5, #1
     688:	1822      	adds	r2, r4, r0
     68a:	4425      	add	r5, r4
     68c:	f802 3c01 	strb.w	r3, [r2, #-1]
     690:	6135      	str	r5, [r6, #16]
     692:	7893      	ldrb	r3, [r2, #2]
     694:	7851      	ldrb	r1, [r2, #1]
     696:	041b      	lsls	r3, r3, #16
     698:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
     69c:	5c21      	ldrb	r1, [r4, r0]
     69e:	78d2      	ldrb	r2, [r2, #3]
     6a0:	430b      	orrs	r3, r1
     6a2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
     6a6:	3004      	adds	r0, #4
     6a8:	6173      	str	r3, [r6, #20]
     6aa:	b005      	add	sp, #20
     6ac:	bdf0      	pop	{r4, r5, r6, r7, pc}

000006ae <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
     6ae:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
     6b2:	6843      	ldr	r3, [r0, #4]
     6b4:	680d      	ldr	r5, [r1, #0]
     6b6:	4604      	mov	r4, r0
     6b8:	429d      	cmp	r5, r3
     6ba:	460e      	mov	r6, r1
     6bc:	d904      	bls.n	6c8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
     6be:	00a9      	lsls	r1, r5, #2
     6c0:	68c0      	ldr	r0, [r0, #12]
     6c2:	f003 ffb5 	bl	4630 <realloc>
     6c6:	60e0      	str	r0, [r4, #12]
     6c8:	2100      	movs	r1, #0
     6ca:	6065      	str	r5, [r4, #4]
     6cc:	1d32      	adds	r2, r6, #4
     6ce:	6860      	ldr	r0, [r4, #4]
     6d0:	1b93      	subs	r3, r2, r6
     6d2:	4281      	cmp	r1, r0
     6d4:	f102 0204 	add.w	r2, r2, #4
     6d8:	d213      	bcs.n	702 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x54>
     6da:	f812 3c02 	ldrb.w	r3, [r2, #-2]
     6de:	f812 0c03 	ldrb.w	r0, [r2, #-3]
     6e2:	041b      	lsls	r3, r3, #16
     6e4:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
     6e8:	f812 0c04 	ldrb.w	r0, [r2, #-4]
     6ec:	4303      	orrs	r3, r0
     6ee:	f812 0c01 	ldrb.w	r0, [r2, #-1]
     6f2:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
     6f6:	68e0      	ldr	r0, [r4, #12]
     6f8:	60a3      	str	r3, [r4, #8]
     6fa:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
     6fe:	3101      	adds	r1, #1
     700:	e7e5      	b.n	6ce <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
     702:	18f2      	adds	r2, r6, r3
     704:	7895      	ldrb	r5, [r2, #2]
     706:	7850      	ldrb	r0, [r2, #1]
     708:	5cf1      	ldrb	r1, [r6, r3]
     70a:	042d      	lsls	r5, r5, #16
     70c:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
     710:	78d2      	ldrb	r2, [r2, #3]
     712:	430d      	orrs	r5, r1
     714:	1d1f      	adds	r7, r3, #4
     716:	6923      	ldr	r3, [r4, #16]
     718:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
     71c:	429d      	cmp	r5, r3
     71e:	d904      	bls.n	72a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7c>
     720:	00a9      	lsls	r1, r5, #2
     722:	69a0      	ldr	r0, [r4, #24]
     724:	f003 ff84 	bl	4630 <realloc>
     728:	61a0      	str	r0, [r4, #24]
     72a:	2100      	movs	r1, #0
     72c:	6125      	str	r5, [r4, #16]
     72e:	19f3      	adds	r3, r6, r7
     730:	6922      	ldr	r2, [r4, #16]
     732:	1b9d      	subs	r5, r3, r6
     734:	4291      	cmp	r1, r2
     736:	f103 0304 	add.w	r3, r3, #4
     73a:	d213      	bcs.n	764 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xb6>
     73c:	f813 2c02 	ldrb.w	r2, [r3, #-2]
     740:	f813 0c03 	ldrb.w	r0, [r3, #-3]
     744:	0412      	lsls	r2, r2, #16
     746:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
     74a:	f813 0c04 	ldrb.w	r0, [r3, #-4]
     74e:	4302      	orrs	r2, r0
     750:	f813 0c01 	ldrb.w	r0, [r3, #-1]
     754:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
     758:	69a0      	ldr	r0, [r4, #24]
     75a:	6162      	str	r2, [r4, #20]
     75c:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
     760:	3101      	adds	r1, #1
     762:	e7e5      	b.n	730 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x82>
     764:	1973      	adds	r3, r6, r5
     766:	789f      	ldrb	r7, [r3, #2]
     768:	7859      	ldrb	r1, [r3, #1]
     76a:	5d72      	ldrb	r2, [r6, r5]
     76c:	043f      	lsls	r7, r7, #16
     76e:	78db      	ldrb	r3, [r3, #3]
     770:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
     774:	4317      	orrs	r7, r2
     776:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
     77a:	69e3      	ldr	r3, [r4, #28]
     77c:	3504      	adds	r5, #4
     77e:	429f      	cmp	r7, r3
     780:	d904      	bls.n	78c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xde>
     782:	00b9      	lsls	r1, r7, #2
     784:	6a60      	ldr	r0, [r4, #36]	; 0x24
     786:	f003 ff53 	bl	4630 <realloc>
     78a:	6260      	str	r0, [r4, #36]	; 0x24
     78c:	61e7      	str	r7, [r4, #28]
     78e:	2700      	movs	r7, #0
     790:	46b8      	mov	r8, r7
     792:	69e3      	ldr	r3, [r4, #28]
     794:	429f      	cmp	r7, r3
     796:	d21a      	bcs.n	7ce <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x120>
     798:	1971      	adds	r1, r6, r5
     79a:	a801      	add	r0, sp, #4
     79c:	f7ff ff02 	bl	5a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     7a0:	1d2b      	adds	r3, r5, #4
     7a2:	9d01      	ldr	r5, [sp, #4]
     7a4:	18f2      	adds	r2, r6, r3
     7a6:	441d      	add	r5, r3
     7a8:	1b91      	subs	r1, r2, r6
     7aa:	42a9      	cmp	r1, r5
     7ac:	d204      	bcs.n	7b8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x10a>
     7ae:	f812 1b01 	ldrb.w	r1, [r2], #1
     7b2:	f802 1c02 	strb.w	r1, [r2, #-2]
     7b6:	e7f7      	b.n	7a8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xfa>
     7b8:	1972      	adds	r2, r6, r5
     7ba:	f802 8c01 	strb.w	r8, [r2, #-1]
     7be:	3b01      	subs	r3, #1
     7c0:	6a62      	ldr	r2, [r4, #36]	; 0x24
     7c2:	4433      	add	r3, r6
     7c4:	6223      	str	r3, [r4, #32]
     7c6:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
     7ca:	3701      	adds	r7, #1
     7cc:	e7e1      	b.n	792 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
     7ce:	4628      	mov	r0, r5
     7d0:	b002      	add	sp, #8
     7d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000007d6 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)>:
     7d6:	b537      	push	{r0, r1, r2, r4, r5, lr}
     7d8:	460d      	mov	r5, r1
     7da:	4604      	mov	r4, r0
     7dc:	a801      	add	r0, sp, #4
     7de:	f7ff fee1 	bl	5a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
     7e2:	9801      	ldr	r0, [sp, #4]
     7e4:	1d2b      	adds	r3, r5, #4
     7e6:	1d01      	adds	r1, r0, #4
     7e8:	1b5a      	subs	r2, r3, r5
     7ea:	4291      	cmp	r1, r2
     7ec:	d904      	bls.n	7f8 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)+0x22>
     7ee:	f813 2b01 	ldrb.w	r2, [r3], #1
     7f2:	f803 2c02 	strb.w	r2, [r3, #-2]
     7f6:	e7f7      	b.n	7e8 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)+0x12>
     7f8:	2300      	movs	r3, #0
     7fa:	182a      	adds	r2, r5, r0
     7fc:	70d3      	strb	r3, [r2, #3]
     7fe:	1ceb      	adds	r3, r5, #3
     800:	6063      	str	r3, [r4, #4]
     802:	5c6b      	ldrb	r3, [r5, r1]
     804:	300c      	adds	r0, #12
     806:	60a3      	str	r3, [r4, #8]
     808:	7951      	ldrb	r1, [r2, #5]
     80a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
     80e:	60a3      	str	r3, [r4, #8]
     810:	7991      	ldrb	r1, [r2, #6]
     812:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
     816:	60a3      	str	r3, [r4, #8]
     818:	79d1      	ldrb	r1, [r2, #7]
     81a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
     81e:	60a3      	str	r3, [r4, #8]
     820:	7a13      	ldrb	r3, [r2, #8]
     822:	60e3      	str	r3, [r4, #12]
     824:	7a51      	ldrb	r1, [r2, #9]
     826:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
     82a:	60e3      	str	r3, [r4, #12]
     82c:	7a91      	ldrb	r1, [r2, #10]
     82e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
     832:	60e3      	str	r3, [r4, #12]
     834:	7ad2      	ldrb	r2, [r2, #11]
     836:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
     83a:	60e3      	str	r3, [r4, #12]
     83c:	b003      	add	sp, #12
     83e:	bd30      	pop	{r4, r5, pc}

00000840 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)>:
     840:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
     844:	6843      	ldr	r3, [r0, #4]
     846:	680d      	ldr	r5, [r1, #0]
     848:	4604      	mov	r4, r0
     84a:	429d      	cmp	r5, r3
     84c:	460f      	mov	r7, r1
     84e:	d904      	bls.n	85a <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x1a>
     850:	0129      	lsls	r1, r5, #4
     852:	6980      	ldr	r0, [r0, #24]
     854:	f003 feec 	bl	4630 <realloc>
     858:	61a0      	str	r0, [r4, #24]
     85a:	6065      	str	r5, [r4, #4]
     85c:	2600      	movs	r6, #0
     85e:	2504      	movs	r5, #4
     860:	f104 0808 	add.w	r8, r4, #8
     864:	f104 0918 	add.w	r9, r4, #24
     868:	6863      	ldr	r3, [r4, #4]
     86a:	1979      	adds	r1, r7, r5
     86c:	429e      	cmp	r6, r3
     86e:	d20f      	bcs.n	890 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x50>
     870:	4640      	mov	r0, r8
     872:	f7ff ffb0 	bl	7d6 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)>
     876:	4642      	mov	r2, r8
     878:	69a3      	ldr	r3, [r4, #24]
     87a:	4405      	add	r5, r0
     87c:	eb03 1306 	add.w	r3, r3, r6, lsl #4
     880:	f852 1b04 	ldr.w	r1, [r2], #4
     884:	454a      	cmp	r2, r9
     886:	f843 1b04 	str.w	r1, [r3], #4
     88a:	d1f9      	bne.n	880 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x40>
     88c:	3601      	adds	r6, #1
     88e:	e7eb      	b.n	868 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x28>
     890:	5d7b      	ldrb	r3, [r7, r5]
     892:	1d28      	adds	r0, r5, #4
     894:	61e3      	str	r3, [r4, #28]
     896:	784a      	ldrb	r2, [r1, #1]
     898:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
     89c:	61e3      	str	r3, [r4, #28]
     89e:	788a      	ldrb	r2, [r1, #2]
     8a0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
     8a4:	61e3      	str	r3, [r4, #28]
     8a6:	78ca      	ldrb	r2, [r1, #3]
     8a8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
     8ac:	61e3      	str	r3, [r4, #28]
     8ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000008b2 <std_msgs::Int32MultiArray::deserialize(unsigned char*)>:
     8b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     8b4:	4605      	mov	r5, r0
     8b6:	3004      	adds	r0, #4
     8b8:	460e      	mov	r6, r1
     8ba:	f7ff ffc1 	bl	840 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)>
     8be:	1833      	adds	r3, r6, r0
     8c0:	789c      	ldrb	r4, [r3, #2]
     8c2:	7859      	ldrb	r1, [r3, #1]
     8c4:	5c32      	ldrb	r2, [r6, r0]
     8c6:	0424      	lsls	r4, r4, #16
     8c8:	78db      	ldrb	r3, [r3, #3]
     8ca:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
     8ce:	4314      	orrs	r4, r2
     8d0:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
     8d4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
     8d6:	1d07      	adds	r7, r0, #4
     8d8:	429c      	cmp	r4, r3
     8da:	d904      	bls.n	8e6 <std_msgs::Int32MultiArray::deserialize(unsigned char*)+0x34>
     8dc:	00a1      	lsls	r1, r4, #2
     8de:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
     8e0:	f003 fea6 	bl	4630 <realloc>
     8e4:	62e8      	str	r0, [r5, #44]	; 0x2c
     8e6:	2100      	movs	r1, #0
     8e8:	626c      	str	r4, [r5, #36]	; 0x24
     8ea:	19f3      	adds	r3, r6, r7
     8ec:	6a6a      	ldr	r2, [r5, #36]	; 0x24
     8ee:	1b98      	subs	r0, r3, r6
     8f0:	4291      	cmp	r1, r2
     8f2:	f103 0304 	add.w	r3, r3, #4
     8f6:	d213      	bcs.n	920 <std_msgs::Int32MultiArray::deserialize(unsigned char*)+0x6e>
     8f8:	f813 2c02 	ldrb.w	r2, [r3, #-2]
     8fc:	f813 0c03 	ldrb.w	r0, [r3, #-3]
     900:	0412      	lsls	r2, r2, #16
     902:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
     906:	f813 0c04 	ldrb.w	r0, [r3, #-4]
     90a:	4302      	orrs	r2, r0
     90c:	f813 0c01 	ldrb.w	r0, [r3, #-1]
     910:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
     914:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
     916:	62aa      	str	r2, [r5, #40]	; 0x28
     918:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
     91c:	3101      	adds	r1, #1
     91e:	e7e5      	b.n	8ec <std_msgs::Int32MultiArray::deserialize(unsigned char*)+0x3a>
     920:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

00000924 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
     924:	b530      	push	{r4, r5, lr}
     926:	4b0a      	ldr	r3, [pc, #40]	; (950 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
     928:	b085      	sub	sp, #20
     92a:	4604      	mov	r4, r0
     92c:	9301      	str	r3, [sp, #4]
     92e:	2300      	movs	r3, #0
     930:	9302      	str	r3, [sp, #8]
     932:	9303      	str	r3, [sp, #12]
     934:	f854 3b60 	ldr.w	r3, [r4], #96
     938:	aa01      	add	r2, sp, #4
     93a:	681b      	ldr	r3, [r3, #0]
     93c:	210a      	movs	r1, #10
     93e:	4605      	mov	r5, r0
     940:	4798      	blx	r3
     942:	4620      	mov	r0, r4
     944:	f002 ff1c 	bl	3780 <mbed::Timer::read_ms()>
     948:	6728      	str	r0, [r5, #112]	; 0x70
     94a:	b005      	add	sp, #20
     94c:	bd30      	pop	{r4, r5, pc}
     94e:	bf00      	nop
     950:	00004a98 	.word	0x00004a98

00000954 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
     954:	2200      	movs	r2, #0
     956:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     95a:	4605      	mov	r5, r0
     95c:	f44f 7700 	mov.w	r7, #512	; 0x200
     960:	4b29      	ldr	r3, [pc, #164]	; (a08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
     962:	b086      	sub	sp, #24
     964:	9300      	str	r3, [sp, #0]
     966:	4b29      	ldr	r3, [pc, #164]	; (a0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
     968:	f8ad 2004 	strh.w	r2, [sp, #4]
     96c:	9302      	str	r3, [sp, #8]
     96e:	9303      	str	r3, [sp, #12]
     970:	9304      	str	r3, [sp, #16]
     972:	9205      	str	r2, [sp, #20]
     974:	f500 6490 	add.w	r4, r0, #1152	; 0x480
     978:	f200 46e4 	addw	r6, r0, #1252	; 0x4e4
     97c:	6823      	ldr	r3, [r4, #0]
     97e:	b1bb      	cbz	r3, 9b0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
     980:	689a      	ldr	r2, [r3, #8]
     982:	6858      	ldr	r0, [r3, #4]
     984:	f8ad 2004 	strh.w	r2, [sp, #4]
     988:	681a      	ldr	r2, [r3, #0]
     98a:	6803      	ldr	r3, [r0, #0]
     98c:	9202      	str	r2, [sp, #8]
     98e:	689b      	ldr	r3, [r3, #8]
     990:	4798      	blx	r3
     992:	6823      	ldr	r3, [r4, #0]
     994:	9003      	str	r0, [sp, #12]
     996:	6858      	ldr	r0, [r3, #4]
     998:	6803      	ldr	r3, [r0, #0]
     99a:	68db      	ldr	r3, [r3, #12]
     99c:	4798      	blx	r3
     99e:	6821      	ldr	r1, [r4, #0]
     9a0:	682b      	ldr	r3, [r5, #0]
     9a2:	9004      	str	r0, [sp, #16]
     9a4:	9705      	str	r7, [sp, #20]
     9a6:	681b      	ldr	r3, [r3, #0]
     9a8:	466a      	mov	r2, sp
     9aa:	6909      	ldr	r1, [r1, #16]
     9ac:	4628      	mov	r0, r5
     9ae:	4798      	blx	r3
     9b0:	3404      	adds	r4, #4
     9b2:	42b4      	cmp	r4, r6
     9b4:	d1e2      	bne.n	97c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
     9b6:	f44f 7700 	mov.w	r7, #512	; 0x200
     9ba:	f505 66a9 	add.w	r6, r5, #1352	; 0x548
     9be:	6820      	ldr	r0, [r4, #0]
     9c0:	b1c8      	cbz	r0, 9f6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
     9c2:	6843      	ldr	r3, [r0, #4]
     9c4:	f8ad 3004 	strh.w	r3, [sp, #4]
     9c8:	6883      	ldr	r3, [r0, #8]
     9ca:	9302      	str	r3, [sp, #8]
     9cc:	6803      	ldr	r3, [r0, #0]
     9ce:	689b      	ldr	r3, [r3, #8]
     9d0:	4798      	blx	r3
     9d2:	9003      	str	r0, [sp, #12]
     9d4:	6820      	ldr	r0, [r4, #0]
     9d6:	6803      	ldr	r3, [r0, #0]
     9d8:	68db      	ldr	r3, [r3, #12]
     9da:	4798      	blx	r3
     9dc:	682b      	ldr	r3, [r5, #0]
     9de:	9004      	str	r0, [sp, #16]
     9e0:	6820      	ldr	r0, [r4, #0]
     9e2:	f8d3 8000 	ldr.w	r8, [r3]
     9e6:	6803      	ldr	r3, [r0, #0]
     9e8:	9705      	str	r7, [sp, #20]
     9ea:	685b      	ldr	r3, [r3, #4]
     9ec:	4798      	blx	r3
     9ee:	466a      	mov	r2, sp
     9f0:	4601      	mov	r1, r0
     9f2:	4628      	mov	r0, r5
     9f4:	47c0      	blx	r8
     9f6:	3404      	adds	r4, #4
     9f8:	42a6      	cmp	r6, r4
     9fa:	d1e0      	bne.n	9be <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
     9fc:	2301      	movs	r3, #1
     9fe:	f885 355c 	strb.w	r3, [r5, #1372]	; 0x55c
     a02:	b006      	add	sp, #24
     a04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
     a08:	00004ab0 	.word	0x00004ab0
     a0c:	00004dfe 	.word	0x00004dfe

00000a10 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
     a10:	b5f0      	push	{r4, r5, r6, r7, lr}
     a12:	4b1f      	ldr	r3, [pc, #124]	; (a90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x80>)
     a14:	b085      	sub	sp, #20
     a16:	9301      	str	r3, [sp, #4]
     a18:	2300      	movs	r3, #0
     a1a:	460e      	mov	r6, r1
     a1c:	4604      	mov	r4, r0
     a1e:	f100 0560 	add.w	r5, r0, #96	; 0x60
     a22:	4628      	mov	r0, r5
     a24:	9302      	str	r3, [sp, #8]
     a26:	9303      	str	r3, [sp, #12]
     a28:	f002 feaa 	bl	3780 <mbed::Timer::read_ms()>
     a2c:	4631      	mov	r1, r6
     a2e:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
     a32:	6f22      	ldr	r2, [r4, #112]	; 0x70
     a34:	1a87      	subs	r7, r0, r2
     a36:	a801      	add	r0, sp, #4
     a38:	f7ff fb92 	bl	160 <std_msgs::Time::deserialize(unsigned char*)>
     a3c:	fbb7 f2f6 	udiv	r2, r7, r6
     a40:	9b02      	ldr	r3, [sp, #8]
     a42:	4628      	mov	r0, r5
     a44:	4413      	add	r3, r2
     a46:	fb06 7212 	mls	r2, r6, r2, r7
     a4a:	9302      	str	r3, [sp, #8]
     a4c:	4f11      	ldr	r7, [pc, #68]	; (a94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x84>)
     a4e:	9b03      	ldr	r3, [sp, #12]
     a50:	fb07 3202 	mla	r2, r7, r2, r3
     a54:	9203      	str	r2, [sp, #12]
     a56:	f002 fe93 	bl	3780 <mbed::Timer::read_ms()>
     a5a:	fbb0 f3f6 	udiv	r3, r0, r6
     a5e:	9a02      	ldr	r2, [sp, #8]
     a60:	9903      	ldr	r1, [sp, #12]
     a62:	3a01      	subs	r2, #1
     a64:	1ad2      	subs	r2, r2, r3
     a66:	6762      	str	r2, [r4, #116]	; 0x74
     a68:	4a0b      	ldr	r2, [pc, #44]	; (a98 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
     a6a:	fb06 0313 	mls	r3, r6, r3, r0
     a6e:	440a      	add	r2, r1
     a70:	4621      	mov	r1, r4
     a72:	fb07 2313 	mls	r3, r7, r3, r2
     a76:	f104 0074 	add.w	r0, r4, #116	; 0x74
     a7a:	f841 3f78 	str.w	r3, [r1, #120]!
     a7e:	f000 fb77 	bl	1170 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
     a82:	4628      	mov	r0, r5
     a84:	f002 fe7c 	bl	3780 <mbed::Timer::read_ms()>
     a88:	f8c4 0564 	str.w	r0, [r4, #1380]	; 0x564
     a8c:	b005      	add	sp, #20
     a8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     a90:	00004a98 	.word	0x00004a98
     a94:	000f4240 	.word	0x000f4240
     a98:	3b9aca00 	.word	0x3b9aca00

00000a9c <_GLOBAL__sub_I_nh>:
     a9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
     a9e:	4d77      	ldr	r5, [pc, #476]	; (c7c <Stack_Size+0x7c>)
     aa0:	4b77      	ldr	r3, [pc, #476]	; (c80 <Stack_Size+0x80>)
     aa2:	4628      	mov	r0, r5
     aa4:	2400      	movs	r4, #0
     aa6:	f840 3b04 	str.w	r3, [r0], #4
     aaa:	2304      	movs	r3, #4
     aac:	4a75      	ldr	r2, [pc, #468]	; (c84 <Stack_Size+0x84>)
     aae:	4976      	ldr	r1, [pc, #472]	; (c88 <Stack_Size+0x88>)
     ab0:	f105 0660 	add.w	r6, r5, #96	; 0x60
     ab4:	e88d 0018 	stmia.w	sp, {r3, r4}
     ab8:	f44f 7380 	mov.w	r3, #256	; 0x100
     abc:	f000 fc24 	bl	1308 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
     ac0:	4630      	mov	r0, r6
     ac2:	f002 fe73 	bl	37ac <mbed::Timer::Timer()>
     ac6:	f44f 4361 	mov.w	r3, #57600	; 0xe100
     aca:	4630      	mov	r0, r6
     acc:	f44f 7600 	mov.w	r6, #512	; 0x200
     ad0:	65eb      	str	r3, [r5, #92]	; 0x5c
     ad2:	f002 fe29 	bl	3728 <mbed::Timer::start()>
     ad6:	4632      	mov	r2, r6
     ad8:	4621      	mov	r1, r4
     ada:	f105 0080 	add.w	r0, r5, #128	; 0x80
     ade:	672c      	str	r4, [r5, #112]	; 0x70
     ae0:	676c      	str	r4, [r5, #116]	; 0x74
     ae2:	67ac      	str	r4, [r5, #120]	; 0x78
     ae4:	67ec      	str	r4, [r5, #124]	; 0x7c
     ae6:	f003 fb32 	bl	414e <memset>
     aea:	4632      	mov	r2, r6
     aec:	2664      	movs	r6, #100	; 0x64
     aee:	4621      	mov	r1, r4
     af0:	f505 7020 	add.w	r0, r5, #640	; 0x280
     af4:	f003 fb2b 	bl	414e <memset>
     af8:	4632      	mov	r2, r6
     afa:	4621      	mov	r1, r4
     afc:	f505 6090 	add.w	r0, r5, #1152	; 0x480
     b00:	f003 fb25 	bl	414e <memset>
     b04:	4632      	mov	r2, r6
     b06:	4621      	mov	r1, r4
     b08:	f205 40e4 	addw	r0, r5, #1252	; 0x4e4
     b0c:	f003 fb1f 	bl	414e <memset>
     b10:	4b5e      	ldr	r3, [pc, #376]	; (c8c <Stack_Size+0x8c>)
     b12:	4e5f      	ldr	r6, [pc, #380]	; (c90 <Stack_Size+0x90>)
     b14:	f8c5 3570 	str.w	r3, [r5, #1392]	; 0x570
     b18:	2300      	movs	r3, #0
     b1a:	f8c5 4574 	str.w	r4, [r5, #1396]	; 0x574
     b1e:	f8c5 4578 	str.w	r4, [r5, #1400]	; 0x578
     b22:	f8c5 457c 	str.w	r4, [r5, #1404]	; 0x57c
     b26:	f8c5 4580 	str.w	r4, [r5, #1408]	; 0x580
     b2a:	f8c5 3584 	str.w	r3, [r5, #1412]	; 0x584
     b2e:	f8c5 4588 	str.w	r4, [r5, #1416]	; 0x588
     b32:	f8c5 458c 	str.w	r4, [r5, #1420]	; 0x58c
     b36:	f8c5 4590 	str.w	r4, [r5, #1424]	; 0x590
     b3a:	f8c5 4594 	str.w	r4, [r5, #1428]	; 0x594
     b3e:	4632      	mov	r2, r6
     b40:	4954      	ldr	r1, [pc, #336]	; (c94 <Stack_Size+0x94>)
     b42:	4628      	mov	r0, r5
     b44:	f8c5 4548 	str.w	r4, [r5, #1352]	; 0x548
     b48:	f8c5 454c 	str.w	r4, [r5, #1356]	; 0x54c
     b4c:	f8c5 4550 	str.w	r4, [r5, #1360]	; 0x550
     b50:	f8c5 4554 	str.w	r4, [r5, #1364]	; 0x554
     b54:	f8c5 4558 	str.w	r4, [r5, #1368]	; 0x558
     b58:	f885 455c 	strb.w	r4, [r5, #1372]	; 0x55c
     b5c:	f8c5 4560 	str.w	r4, [r5, #1376]	; 0x560
     b60:	f8c5 4564 	str.w	r4, [r5, #1380]	; 0x564
     b64:	f8c5 4568 	str.w	r4, [r5, #1384]	; 0x568
     b68:	f885 456c 	strb.w	r4, [r5, #1388]	; 0x56c
     b6c:	f003 f814 	bl	3b98 <__aeabi_atexit>
     b70:	4b49      	ldr	r3, [pc, #292]	; (c98 <Stack_Size+0x98>)
     b72:	4a4a      	ldr	r2, [pc, #296]	; (c9c <Stack_Size+0x9c>)
     b74:	4d4a      	ldr	r5, [pc, #296]	; (ca0 <Stack_Size+0xa0>)
     b76:	601a      	str	r2, [r3, #0]
     b78:	4a4a      	ldr	r2, [pc, #296]	; (ca4 <Stack_Size+0xa4>)
     b7a:	494b      	ldr	r1, [pc, #300]	; (ca8 <Stack_Size+0xa8>)
     b7c:	605a      	str	r2, [r3, #4]
     b7e:	4a4b      	ldr	r2, [pc, #300]	; (cac <Stack_Size+0xac>)
     b80:	609c      	str	r4, [r3, #8]
     b82:	60da      	str	r2, [r3, #12]
     b84:	4a4a      	ldr	r2, [pc, #296]	; (cb0 <Stack_Size+0xb0>)
     b86:	615c      	str	r4, [r3, #20]
     b88:	611a      	str	r2, [r3, #16]
     b8a:	4a4a      	ldr	r2, [pc, #296]	; (cb4 <Stack_Size+0xb4>)
     b8c:	619c      	str	r4, [r3, #24]
     b8e:	e882 000a 	stmia.w	r2, {r1, r3}
     b92:	61dc      	str	r4, [r3, #28]
     b94:	621c      	str	r4, [r3, #32]
     b96:	6114      	str	r4, [r2, #16]
     b98:	4947      	ldr	r1, [pc, #284]	; (cb8 <Stack_Size+0xb8>)
     b9a:	2202      	movs	r2, #2
     b9c:	4628      	mov	r0, r5
     b9e:	625c      	str	r4, [r3, #36]	; 0x24
     ba0:	629c      	str	r4, [r3, #40]	; 0x28
     ba2:	62dc      	str	r4, [r3, #44]	; 0x2c
     ba4:	f7ff fbc8 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     ba8:	2202      	movs	r2, #2
     baa:	4944      	ldr	r1, [pc, #272]	; (cbc <Stack_Size+0xbc>)
     bac:	f105 0018 	add.w	r0, r5, #24
     bb0:	f7ff fbc2 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bb4:	2202      	movs	r2, #2
     bb6:	4942      	ldr	r1, [pc, #264]	; (cc0 <Stack_Size+0xc0>)
     bb8:	f105 0030 	add.w	r0, r5, #48	; 0x30
     bbc:	f7ff fbbc 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bc0:	2202      	movs	r2, #2
     bc2:	4940      	ldr	r1, [pc, #256]	; (cc4 <Stack_Size+0xc4>)
     bc4:	f105 0048 	add.w	r0, r5, #72	; 0x48
     bc8:	f7ff fbb6 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bcc:	2202      	movs	r2, #2
     bce:	493e      	ldr	r1, [pc, #248]	; (cc8 <Stack_Size+0xc8>)
     bd0:	f105 0060 	add.w	r0, r5, #96	; 0x60
     bd4:	f7ff fbb0 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bd8:	2202      	movs	r2, #2
     bda:	493c      	ldr	r1, [pc, #240]	; (ccc <Stack_Size+0xcc>)
     bdc:	f105 0078 	add.w	r0, r5, #120	; 0x78
     be0:	f7ff fbaa 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     be4:	2202      	movs	r2, #2
     be6:	493a      	ldr	r1, [pc, #232]	; (cd0 <Stack_Size+0xd0>)
     be8:	f105 0090 	add.w	r0, r5, #144	; 0x90
     bec:	f7ff fba4 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bf0:	2202      	movs	r2, #2
     bf2:	4938      	ldr	r1, [pc, #224]	; (cd4 <Stack_Size+0xd4>)
     bf4:	f105 00a8 	add.w	r0, r5, #168	; 0xa8
     bf8:	f7ff fb9e 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     bfc:	2202      	movs	r2, #2
     bfe:	4936      	ldr	r1, [pc, #216]	; (cd8 <Stack_Size+0xd8>)
     c00:	f105 00c0 	add.w	r0, r5, #192	; 0xc0
     c04:	f7ff fb98 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c08:	2202      	movs	r2, #2
     c0a:	4934      	ldr	r1, [pc, #208]	; (cdc <Stack_Size+0xdc>)
     c0c:	f105 00d8 	add.w	r0, r5, #216	; 0xd8
     c10:	f7ff fb92 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c14:	2202      	movs	r2, #2
     c16:	4932      	ldr	r1, [pc, #200]	; (ce0 <Stack_Size+0xe0>)
     c18:	f105 00f0 	add.w	r0, r5, #240	; 0xf0
     c1c:	f7ff fb8c 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c20:	2202      	movs	r2, #2
     c22:	4930      	ldr	r1, [pc, #192]	; (ce4 <Stack_Size+0xe4>)
     c24:	f505 7084 	add.w	r0, r5, #264	; 0x108
     c28:	f7ff fb86 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c2c:	2202      	movs	r2, #2
     c2e:	492e      	ldr	r1, [pc, #184]	; (ce8 <Stack_Size+0xe8>)
     c30:	f505 7090 	add.w	r0, r5, #288	; 0x120
     c34:	f7ff fb80 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c38:	2202      	movs	r2, #2
     c3a:	492c      	ldr	r1, [pc, #176]	; (cec <Stack_Size+0xec>)
     c3c:	f505 709c 	add.w	r0, r5, #312	; 0x138
     c40:	f7ff fb7a 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c44:	2202      	movs	r2, #2
     c46:	492a      	ldr	r1, [pc, #168]	; (cf0 <Stack_Size+0xf0>)
     c48:	f505 70a8 	add.w	r0, r5, #336	; 0x150
     c4c:	f7ff fb74 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c50:	f505 70b4 	add.w	r0, r5, #360	; 0x168
     c54:	4d27      	ldr	r5, [pc, #156]	; (cf4 <Stack_Size+0xf4>)
     c56:	2202      	movs	r2, #2
     c58:	4927      	ldr	r1, [pc, #156]	; (cf8 <Stack_Size+0xf8>)
     c5a:	f7ff fb6d 	bl	338 <mbed::DigitalIn::DigitalIn(PinName, PinMode)>
     c5e:	4628      	mov	r0, r5
     c60:	f002 fe48 	bl	38f4 <mbed::TimerEvent::TimerEvent()>
     c64:	4632      	mov	r2, r6
     c66:	4628      	mov	r0, r5
     c68:	4b24      	ldr	r3, [pc, #144]	; (cfc <Stack_Size+0xfc>)
     c6a:	4925      	ldr	r1, [pc, #148]	; (d00 <Stack_Size+0x100>)
     c6c:	602b      	str	r3, [r5, #0]
     c6e:	626c      	str	r4, [r5, #36]	; 0x24
     c70:	b002      	add	sp, #8
     c72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     c76:	f002 bf8f 	b.w	3b98 <__aeabi_atexit>
     c7a:	bf00      	nop
     c7c:	10000384 	.word	0x10000384
     c80:	00004b40 	.word	0x00004b40
     c84:	2009c003 	.word	0x2009c003
     c88:	2009c002 	.word	0x2009c002
     c8c:	00004ae0 	.word	0x00004ae0
     c90:	100000c8 	.word	0x100000c8
     c94:	00001121 	.word	0x00001121
     c98:	10000354 	.word	0x10000354
     c9c:	00004b28 	.word	0x00004b28
     ca0:	100001a4 	.word	0x100001a4
     ca4:	00004b10 	.word	0x00004b10
     ca8:	00004b58 	.word	0x00004b58
     cac:	00004af8 	.word	0x00004af8
     cb0:	00004dfe 	.word	0x00004dfe
     cb4:	1000091c 	.word	0x1000091c
     cb8:	2009c007 	.word	0x2009c007
     cbc:	2009c006 	.word	0x2009c006
     cc0:	2009c012 	.word	0x2009c012
     cc4:	2009c011 	.word	0x2009c011
     cc8:	2009c017 	.word	0x2009c017
     ccc:	2009c018 	.word	0x2009c018
     cd0:	2009c019 	.word	0x2009c019
     cd4:	2009c01a 	.word	0x2009c01a
     cd8:	2009c03e 	.word	0x2009c03e
     cdc:	2009c03f 	.word	0x2009c03f
     ce0:	2009c040 	.word	0x2009c040
     ce4:	2009c041 	.word	0x2009c041
     ce8:	2009c042 	.word	0x2009c042
     cec:	2009c043 	.word	0x2009c043
     cf0:	2009c044 	.word	0x2009c044
     cf4:	1000017c 	.word	0x1000017c
     cf8:	2009c045 	.word	0x2009c045
     cfc:	00005030 	.word	0x00005030
     d00:	00000369 	.word	0x00000369

00000d04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
     d04:	b5f0      	push	{r4, r5, r6, r7, lr}
     d06:	2963      	cmp	r1, #99	; 0x63
     d08:	b085      	sub	sp, #20
     d0a:	4604      	mov	r4, r0
     d0c:	460e      	mov	r6, r1
     d0e:	dd03      	ble.n	d18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
     d10:	f890 555c 	ldrb.w	r5, [r0, #1372]	; 0x55c
     d14:	2d00      	cmp	r5, #0
     d16:	d04d      	beq.n	db4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
     d18:	6813      	ldr	r3, [r2, #0]
     d1a:	f204 2187 	addw	r1, r4, #647	; 0x287
     d1e:	681b      	ldr	r3, [r3, #0]
     d20:	4610      	mov	r0, r2
     d22:	4798      	blx	r3
     d24:	23ff      	movs	r3, #255	; 0xff
     d26:	f884 3280 	strb.w	r3, [r4, #640]	; 0x280
     d2a:	23fe      	movs	r3, #254	; 0xfe
     d2c:	f3c0 2207 	ubfx	r2, r0, #8, #8
     d30:	f884 3281 	strb.w	r3, [r4, #641]	; 0x281
     d34:	b2c3      	uxtb	r3, r0
     d36:	f884 3282 	strb.w	r3, [r4, #642]	; 0x282
     d3a:	4413      	add	r3, r2
     d3c:	43db      	mvns	r3, r3
     d3e:	f884 2283 	strb.w	r2, [r4, #643]	; 0x283
     d42:	f884 3284 	strb.w	r3, [r4, #644]	; 0x284
     d46:	2205      	movs	r2, #5
     d48:	2300      	movs	r3, #0
     d4a:	f884 6285 	strb.w	r6, [r4, #645]	; 0x285
     d4e:	f346 2607 	sbfx	r6, r6, #8, #8
     d52:	f884 6286 	strb.w	r6, [r4, #646]	; 0x286
     d56:	f204 2185 	addw	r1, r4, #645	; 0x285
     d5a:	1d86      	adds	r6, r0, #6
     d5c:	42b2      	cmp	r2, r6
     d5e:	dc04      	bgt.n	d6a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
     d60:	f811 5b01 	ldrb.w	r5, [r1], #1
     d64:	3201      	adds	r2, #1
     d66:	442b      	add	r3, r5
     d68:	e7f8      	b.n	d5c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
     d6a:	43db      	mvns	r3, r3
     d6c:	f100 0508 	add.w	r5, r0, #8
     d70:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
     d74:	4420      	add	r0, r4
     d76:	f880 3287 	strb.w	r3, [r0, #647]	; 0x287
     d7a:	dc0c      	bgt.n	d96 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
     d7c:	f504 7720 	add.w	r7, r4, #640	; 0x280
     d80:	463e      	mov	r6, r7
     d82:	3404      	adds	r4, #4
     d84:	1bf3      	subs	r3, r6, r7
     d86:	429d      	cmp	r5, r3
     d88:	dd14      	ble.n	db4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
     d8a:	f816 1b01 	ldrb.w	r1, [r6], #1
     d8e:	4620      	mov	r0, r4
     d90:	f000 fb27 	bl	13e2 <BufferedSerial::putc(int)>
     d94:	e7f6      	b.n	d84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
     d96:	4b09      	ldr	r3, [pc, #36]	; (dbc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
     d98:	aa01      	add	r2, sp, #4
     d9a:	9301      	str	r3, [sp, #4]
     d9c:	2303      	movs	r3, #3
     d9e:	f88d 3008 	strb.w	r3, [sp, #8]
     da2:	4b07      	ldr	r3, [pc, #28]	; (dc0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
     da4:	2107      	movs	r1, #7
     da6:	9303      	str	r3, [sp, #12]
     da8:	6823      	ldr	r3, [r4, #0]
     daa:	4620      	mov	r0, r4
     dac:	681b      	ldr	r3, [r3, #0]
     dae:	4798      	blx	r3
     db0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
     db4:	4628      	mov	r0, r5
     db6:	b005      	add	sp, #20
     db8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     dba:	bf00      	nop
     dbc:	00004ac8 	.word	0x00004ac8
     dc0:	00004c5f 	.word	0x00004c5f

00000dc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
     dc4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
     dc8:	4604      	mov	r4, r0
     dca:	f100 0960 	add.w	r9, r0, #96	; 0x60
     dce:	4648      	mov	r0, r9
     dd0:	f002 fcd6 	bl	3780 <mbed::Timer::read_ms()>
     dd4:	f642 22f8 	movw	r2, #11000	; 0x2af8
     dd8:	f8d4 3564 	ldr.w	r3, [r4, #1380]	; 0x564
     ddc:	4605      	mov	r5, r0
     dde:	1ac3      	subs	r3, r0, r3
     de0:	4293      	cmp	r3, r2
     de2:	bf84      	itt	hi
     de4:	2300      	movhi	r3, #0
     de6:	f884 355c 	strbhi.w	r3, [r4, #1372]	; 0x55c
     dea:	f8d4 3548 	ldr.w	r3, [r4, #1352]	; 0x548
     dee:	b133      	cbz	r3, dfe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
     df0:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
     df4:	4283      	cmp	r3, r0
     df6:	bf3c      	itt	cc
     df8:	2300      	movcc	r3, #0
     dfa:	f8c4 3548 	strcc.w	r3, [r4, #1352]	; 0x548
     dfe:	2700      	movs	r7, #0
     e00:	46ba      	mov	r10, r7
     e02:	463e      	mov	r6, r7
     e04:	f104 0b04 	add.w	r11, r4, #4
     e08:	f104 0880 	add.w	r8, r4, #128	; 0x80
     e0c:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
     e0e:	b9e3      	cbnz	r3, e4a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
     e10:	4658      	mov	r0, r11
     e12:	f000 f9bb 	bl	118c <BufferedSerial::readable()>
     e16:	bb10      	cbnz	r0, e5e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x9a>
     e18:	f894 355c 	ldrb.w	r3, [r4, #1372]	; 0x55c
     e1c:	b15b      	cbz	r3, e36 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
     e1e:	f640 12c4 	movw	r2, #2500	; 0x9c4
     e22:	f8d4 3560 	ldr.w	r3, [r4, #1376]	; 0x560
     e26:	1aeb      	subs	r3, r5, r3
     e28:	4293      	cmp	r3, r2
     e2a:	d904      	bls.n	e36 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
     e2c:	4620      	mov	r0, r4
     e2e:	f7ff fd79 	bl	924 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
     e32:	f8c4 5560 	str.w	r5, [r4, #1376]	; 0x560
     e36:	2f00      	cmp	r7, #0
     e38:	f040 80d7 	bne.w	fea <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x226>
     e3c:	f1ba 0f00 	cmp.w	r10, #0
     e40:	bf14      	ite	ne
     e42:	f06f 0002 	mvnne.w	r0, #2
     e46:	2000      	moveq	r0, #0
     e48:	e0a6      	b.n	f98 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d4>
     e4a:	4648      	mov	r0, r9
     e4c:	f002 fc98 	bl	3780 <mbed::Timer::read_ms()>
     e50:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
     e52:	1b40      	subs	r0, r0, r5
     e54:	4298      	cmp	r0, r3
     e56:	d9db      	bls.n	e10 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4c>
     e58:	f06f 0001 	mvn.w	r0, #1
     e5c:	e09c      	b.n	f98 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d4>
     e5e:	4658      	mov	r0, r11
     e60:	f000 f99c 	bl	119c <BufferedSerial::getc()>
     e64:	2800      	cmp	r0, #0
     e66:	dbd7      	blt.n	e18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x54>
     e68:	f8d4 3558 	ldr.w	r3, [r4, #1368]	; 0x558
     e6c:	f8d4 2548 	ldr.w	r2, [r4, #1352]	; 0x548
     e70:	4403      	add	r3, r0
     e72:	2a07      	cmp	r2, #7
     e74:	f8c4 3558 	str.w	r3, [r4, #1368]	; 0x558
     e78:	d110      	bne.n	e9c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd8>
     e7a:	f8d4 3554 	ldr.w	r3, [r4, #1364]	; 0x554
     e7e:	1c5a      	adds	r2, r3, #1
     e80:	4423      	add	r3, r4
     e82:	f8c4 2554 	str.w	r2, [r4, #1364]	; 0x554
     e86:	f883 0080 	strb.w	r0, [r3, #128]	; 0x80
     e8a:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
     e8e:	3b01      	subs	r3, #1
     e90:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
     e94:	2b00      	cmp	r3, #0
     e96:	d1b9      	bne.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     e98:	2308      	movs	r3, #8
     e9a:	e01c      	b.n	ed6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x112>
     e9c:	b9b2      	cbnz	r2, ecc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x108>
     e9e:	28ff      	cmp	r0, #255	; 0xff
     ea0:	d107      	bne.n	eb2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xee>
     ea2:	2301      	movs	r3, #1
     ea4:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
     ea8:	f105 0314 	add.w	r3, r5, #20
     eac:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
     eb0:	e7ac      	b.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     eb2:	4648      	mov	r0, r9
     eb4:	9201      	str	r2, [sp, #4]
     eb6:	f002 fc63 	bl	3780 <mbed::Timer::read_ms()>
     eba:	f241 3388 	movw	r3, #5000	; 0x1388
     ebe:	1b40      	subs	r0, r0, r5
     ec0:	4298      	cmp	r0, r3
     ec2:	9a01      	ldr	r2, [sp, #4]
     ec4:	d9a2      	bls.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     ec6:	f884 255c 	strb.w	r2, [r4, #1372]	; 0x55c
     eca:	e7c5      	b.n	e58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x94>
     ecc:	2a01      	cmp	r2, #1
     ece:	d10f      	bne.n	ef0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x12c>
     ed0:	28fe      	cmp	r0, #254	; 0xfe
     ed2:	d103      	bne.n	edc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x118>
     ed4:	2302      	movs	r3, #2
     ed6:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
     eda:	e797      	b.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     edc:	f894 355c 	ldrb.w	r3, [r4, #1372]	; 0x55c
     ee0:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
     ee4:	2b00      	cmp	r3, #0
     ee6:	d191      	bne.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     ee8:	4620      	mov	r0, r4
     eea:	f7ff fd1b 	bl	924 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
     eee:	e78d      	b.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     ef0:	2a02      	cmp	r2, #2
     ef2:	d109      	bne.n	f08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x144>
     ef4:	2303      	movs	r3, #3
     ef6:	f8c4 054c 	str.w	r0, [r4, #1356]	; 0x54c
     efa:	f8c4 6554 	str.w	r6, [r4, #1364]	; 0x554
     efe:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
     f02:	f8c4 0558 	str.w	r0, [r4, #1368]	; 0x558
     f06:	e781      	b.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     f08:	2a03      	cmp	r2, #3
     f0a:	d107      	bne.n	f1c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x158>
     f0c:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
     f10:	eb03 2000 	add.w	r0, r3, r0, lsl #8
     f14:	f8c4 054c 	str.w	r0, [r4, #1356]	; 0x54c
     f18:	2304      	movs	r3, #4
     f1a:	e7dc      	b.n	ed6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x112>
     f1c:	2a04      	cmp	r2, #4
     f1e:	d10b      	bne.n	f38 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x174>
     f20:	425a      	negs	r2, r3
     f22:	b2d2      	uxtb	r2, r2
     f24:	b2db      	uxtb	r3, r3
     f26:	bf58      	it	pl
     f28:	4253      	negpl	r3, r2
     f2a:	2bff      	cmp	r3, #255	; 0xff
     f2c:	d101      	bne.n	f32 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16e>
     f2e:	2305      	movs	r3, #5
     f30:	e7d1      	b.n	ed6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x112>
     f32:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
     f36:	e769      	b.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     f38:	2a05      	cmp	r2, #5
     f3a:	d103      	bne.n	f44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
     f3c:	f8c4 0550 	str.w	r0, [r4, #1360]	; 0x550
     f40:	2306      	movs	r3, #6
     f42:	e7dc      	b.n	efe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13a>
     f44:	2a06      	cmp	r2, #6
     f46:	d10b      	bne.n	f60 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19c>
     f48:	f8d4 3550 	ldr.w	r3, [r4, #1360]	; 0x550
     f4c:	eb03 2000 	add.w	r0, r3, r0, lsl #8
     f50:	2307      	movs	r3, #7
     f52:	f8c4 0550 	str.w	r0, [r4, #1360]	; 0x550
     f56:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
     f5a:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
     f5e:	e799      	b.n	e94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd0>
     f60:	2a08      	cmp	r2, #8
     f62:	f47f af53 	bne.w	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     f66:	425a      	negs	r2, r3
     f68:	b2d2      	uxtb	r2, r2
     f6a:	b2db      	uxtb	r3, r3
     f6c:	bf58      	it	pl
     f6e:	4253      	negpl	r3, r2
     f70:	2bff      	cmp	r3, #255	; 0xff
     f72:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
     f76:	f47f af49 	bne.w	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     f7a:	f8d4 3550 	ldr.w	r3, [r4, #1360]	; 0x550
     f7e:	b973      	cbnz	r3, f9e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1da>
     f80:	4620      	mov	r0, r4
     f82:	f7ff fccf 	bl	924 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
     f86:	4620      	mov	r0, r4
     f88:	f7ff fce4 	bl	954 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
     f8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     f90:	f8c4 5560 	str.w	r5, [r4, #1376]	; 0x560
     f94:	f8c4 5564 	str.w	r5, [r4, #1380]	; 0x564
     f98:	b003      	add	sp, #12
     f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
     f9e:	2b0a      	cmp	r3, #10
     fa0:	d105      	bne.n	fae <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
     fa2:	4641      	mov	r1, r8
     fa4:	4620      	mov	r0, r4
     fa6:	f7ff fd33 	bl	a10 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
     faa:	2701      	movs	r7, #1
     fac:	e72e      	b.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     fae:	2b06      	cmp	r3, #6
     fb0:	d108      	bne.n	fc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
     fb2:	4641      	mov	r1, r8
     fb4:	f504 60ae 	add.w	r0, r4, #1392	; 0x570
     fb8:	f7ff fb79 	bl	6ae <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
     fbc:	2301      	movs	r3, #1
     fbe:	f884 356c 	strb.w	r3, [r4, #1388]	; 0x56c
     fc2:	e723      	b.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     fc4:	2b0b      	cmp	r3, #11
     fc6:	d104      	bne.n	fd2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20e>
     fc8:	f884 655c 	strb.w	r6, [r4, #1372]	; 0x55c
     fcc:	f04f 0a01 	mov.w	r10, #1
     fd0:	e71c      	b.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     fd2:	eb04 0383 	add.w	r3, r4, r3, lsl #2
     fd6:	f8d3 0354 	ldr.w	r0, [r3, #852]	; 0x354
     fda:	2800      	cmp	r0, #0
     fdc:	f43f af16 	beq.w	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     fe0:	6803      	ldr	r3, [r0, #0]
     fe2:	4641      	mov	r1, r8
     fe4:	681b      	ldr	r3, [r3, #0]
     fe6:	4798      	blx	r3
     fe8:	e710      	b.n	e0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
     fea:	f06f 0003 	mvn.w	r0, #3
     fee:	e7d3      	b.n	f98 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d4>

00000ff0 <main>:
     ff0:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
     ff4:	b5f0      	push	{r4, r5, r6, r7, lr}
     ff6:	4c3f      	ldr	r4, [pc, #252]	; (10f4 <main+0x104>)
     ff8:	b089      	sub	sp, #36	; 0x24
     ffa:	65e1      	str	r1, [r4, #92]	; 0x5c
     ffc:	1d20      	adds	r0, r4, #4
     ffe:	f002 fbed 	bl	37dc <mbed::SerialBase::baud(int)>
    1002:	2300      	movs	r3, #0
    1004:	f204 427c 	addw	r2, r4, #1148	; 0x47c
    1008:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
    100c:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    1010:	f8c4 3554 	str.w	r3, [r4, #1364]	; 0x554
    1014:	f8c4 3550 	str.w	r3, [r4, #1360]	; 0x550
    1018:	f852 1f04 	ldr.w	r1, [r2, #4]!
    101c:	2900      	cmp	r1, #0
    101e:	d165      	bne.n	10ec <main+0xfc>
    1020:	4a35      	ldr	r2, [pc, #212]	; (10f8 <main+0x108>)
    1022:	f503 7190 	add.w	r1, r3, #288	; 0x120
    1026:	337d      	adds	r3, #125	; 0x7d
    1028:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
    102c:	6093      	str	r3, [r2, #8]
    102e:	60d4      	str	r4, [r2, #12]
    1030:	2020      	movs	r0, #32
    1032:	f003 f849 	bl	40c8 <malloc>
    1036:	2308      	movs	r3, #8
    1038:	4c30      	ldr	r4, [pc, #192]	; (10fc <main+0x10c>)
    103a:	4a31      	ldr	r2, [pc, #196]	; (1100 <main+0x110>)
    103c:	6263      	str	r3, [r4, #36]	; 0x24
    103e:	2300      	movs	r3, #0
    1040:	461d      	mov	r5, r3
    1042:	62e0      	str	r0, [r4, #44]	; 0x2c
    1044:	4e2f      	ldr	r6, [pc, #188]	; (1104 <main+0x114>)
    1046:	4830      	ldr	r0, [pc, #192]	; (1108 <main+0x118>)
    1048:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
    104a:	3230      	adds	r2, #48	; 0x30
    104c:	680f      	ldr	r7, [r1, #0]
    104e:	f852 1c1c 	ldr.w	r1, [r2, #-28]
    1052:	f8d1 e000 	ldr.w	lr, [r1]
    1056:	f852 1c14 	ldr.w	r1, [r2, #-20]
    105a:	f840 5023 	str.w	r5, [r0, r3, lsl #2]
    105e:	420f      	tst	r7, r1
    1060:	bf14      	ite	ne
    1062:	2102      	movne	r1, #2
    1064:	2100      	moveq	r1, #0
    1066:	f852 7c2c 	ldr.w	r7, [r2, #-44]
    106a:	ea1e 0f07 	tst.w	lr, r7
    106e:	bf18      	it	ne
    1070:	f041 0101 	orrne.w	r1, r1, #1
    1074:	5599      	strb	r1, [r3, r6]
    1076:	3301      	adds	r3, #1
    1078:	2b08      	cmp	r3, #8
    107a:	d1e5      	bne.n	1048 <main+0x58>
    107c:	4b23      	ldr	r3, [pc, #140]	; (110c <main+0x11c>)
    107e:	4669      	mov	r1, sp
    1080:	9300      	str	r3, [sp, #0]
    1082:	4b23      	ldr	r3, [pc, #140]	; (1110 <main+0x120>)
    1084:	a804      	add	r0, sp, #16
    1086:	9303      	str	r3, [sp, #12]
    1088:	f7ff f989 	bl	39e <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
    108c:	4821      	ldr	r0, [pc, #132]	; (1114 <main+0x124>)
    108e:	f7ff f962 	bl	356 <mbed::Callback<void ()>::~Callback()>
    1092:	a904      	add	r1, sp, #16
    1094:	481f      	ldr	r0, [pc, #124]	; (1114 <main+0x124>)
    1096:	f7ff f982 	bl	39e <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
    109a:	2114      	movs	r1, #20
    109c:	481e      	ldr	r0, [pc, #120]	; (1118 <main+0x128>)
    109e:	f002 fadd 	bl	365c <mbed::Ticker::setup(unsigned long)>
    10a2:	a804      	add	r0, sp, #16
    10a4:	f7ff f957 	bl	356 <mbed::Callback<void ()>::~Callback()>
    10a8:	4668      	mov	r0, sp
    10aa:	f7ff f954 	bl	356 <mbed::Callback<void ()>::~Callback()>
    10ae:	4d12      	ldr	r5, [pc, #72]	; (10f8 <main+0x108>)
    10b0:	4f12      	ldr	r7, [pc, #72]	; (10fc <main+0x10c>)
    10b2:	4e10      	ldr	r6, [pc, #64]	; (10f4 <main+0x104>)
    10b4:	f04f 0e00 	mov.w	lr, #0
    10b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    10ba:	4918      	ldr	r1, [pc, #96]	; (111c <main+0x12c>)
    10bc:	1f1a      	subs	r2, r3, #4
    10be:	331c      	adds	r3, #28
    10c0:	6848      	ldr	r0, [r1, #4]
    10c2:	f842 0f04 	str.w	r0, [r2, #4]!
    10c6:	429a      	cmp	r2, r3
    10c8:	f841 ef04 	str.w	lr, [r1, #4]!
    10cc:	d1f8      	bne.n	10c0 <main+0xd0>
    10ce:	b672      	cpsid	i
    10d0:	68e8      	ldr	r0, [r5, #12]
    10d2:	463a      	mov	r2, r7
    10d4:	6803      	ldr	r3, [r0, #0]
    10d6:	68a9      	ldr	r1, [r5, #8]
    10d8:	681b      	ldr	r3, [r3, #0]
    10da:	4798      	blx	r3
    10dc:	4630      	mov	r0, r6
    10de:	f7ff fe71 	bl	dc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
    10e2:	b662      	cpsie	i
    10e4:	2005      	movs	r0, #5
    10e6:	f002 fc4b 	bl	3980 <wait_ms>
    10ea:	e7e3      	b.n	10b4 <main+0xc4>
    10ec:	3301      	adds	r3, #1
    10ee:	2b19      	cmp	r3, #25
    10f0:	d192      	bne.n	1018 <main+0x28>
    10f2:	e79d      	b.n	1030 <main+0x40>
    10f4:	10000384 	.word	0x10000384
    10f8:	1000091c 	.word	0x1000091c
    10fc:	10000354 	.word	0x10000354
    1100:	100001a4 	.word	0x100001a4
    1104:	1000032c 	.word	0x1000032c
    1108:	10000334 	.word	0x10000334
    110c:	000002c5 	.word	0x000002c5
    1110:	00004b4c 	.word	0x00004b4c
    1114:	10000194 	.word	0x10000194
    1118:	1000017c 	.word	0x1000017c
    111c:	10000330 	.word	0x10000330

00001120 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
    1120:	b510      	push	{r4, lr}
    1122:	4604      	mov	r4, r0
    1124:	4b03      	ldr	r3, [pc, #12]	; (1134 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
    1126:	f840 3b04 	str.w	r3, [r0], #4
    112a:	f000 f879 	bl	1220 <BufferedSerial::~BufferedSerial()>
    112e:	4620      	mov	r0, r4
    1130:	bd10      	pop	{r4, pc}
    1132:	bf00      	nop
    1134:	00004b40 	.word	0x00004b40

00001138 <_start>:
    1138:	4807      	ldr	r0, [pc, #28]	; (1158 <_start+0x20>)
    113a:	4a08      	ldr	r2, [pc, #32]	; (115c <_start+0x24>)
    113c:	b508      	push	{r3, lr}
    113e:	1a12      	subs	r2, r2, r0
    1140:	2100      	movs	r1, #0
    1142:	f003 f804 	bl	414e <memset>
    1146:	f002 fce1 	bl	3b0c <software_init_hook>
    114a:	f002 ff99 	bl	4080 <__libc_init_array>
    114e:	f002 fce4 	bl	3b1a <__wrap_main>
    1152:	f002 fd23 	bl	3b9c <__wrap_exit>
    1156:	bf00      	nop
    1158:	10000160 	.word	0x10000160
    115c:	10002624 	.word	0x10002624

00001160 <abort>:
    1160:	b508      	push	{r3, lr}
    1162:	2001      	movs	r0, #1
    1164:	f002 fd1a 	bl	3b9c <__wrap_exit>

00001168 <__cxa_pure_virtual>:
    1168:	b508      	push	{r3, lr}
    116a:	f7ff fff9 	bl	1160 <abort>
	...

00001170 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
    1170:	b530      	push	{r4, r5, lr}
    1172:	680d      	ldr	r5, [r1, #0]
    1174:	4c04      	ldr	r4, [pc, #16]	; (1188 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
    1176:	6802      	ldr	r2, [r0, #0]
    1178:	fbb5 f3f4 	udiv	r3, r5, r4
    117c:	441a      	add	r2, r3
    117e:	fb04 5313 	mls	r3, r4, r3, r5
    1182:	6002      	str	r2, [r0, #0]
    1184:	600b      	str	r3, [r1, #0]
    1186:	bd30      	pop	{r4, r5, pc}
    1188:	3b9aca00 	.word	0x3b9aca00

0000118c <BufferedSerial::readable()>:
    118c:	6b42      	ldr	r2, [r0, #52]	; 0x34
    118e:	6b80      	ldr	r0, [r0, #56]	; 0x38
    1190:	1a10      	subs	r0, r2, r0
    1192:	bf18      	it	ne
    1194:	2001      	movne	r0, #1
    1196:	4770      	bx	lr

00001198 <BufferedSerial::writeable()>:
    1198:	2001      	movs	r0, #1
    119a:	4770      	bx	lr

0000119c <BufferedSerial::getc()>:
    119c:	4603      	mov	r3, r0
    119e:	b510      	push	{r4, lr}
    11a0:	6b82      	ldr	r2, [r0, #56]	; 0x38
    11a2:	6b01      	ldr	r1, [r0, #48]	; 0x30
    11a4:	1c50      	adds	r0, r2, #1
    11a6:	6398      	str	r0, [r3, #56]	; 0x38
    11a8:	5c88      	ldrb	r0, [r1, r2]
    11aa:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    11ac:	6b9c      	ldr	r4, [r3, #56]	; 0x38
    11ae:	3a01      	subs	r2, #1
    11b0:	fbb4 f1f2 	udiv	r1, r4, r2
    11b4:	fb02 4211 	mls	r2, r2, r1, r4
    11b8:	639a      	str	r2, [r3, #56]	; 0x38
    11ba:	bd10      	pop	{r4, pc}

000011bc <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
    11bc:	4603      	mov	r3, r0
    11be:	b110      	cbz	r0, 11c6 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
    11c0:	c907      	ldmia	r1, {r0, r1, r2}
    11c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    11c6:	4770      	bx	lr

000011c8 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
    11c8:	4770      	bx	lr

000011ca <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
    11ca:	6842      	ldr	r2, [r0, #4]
    11cc:	6881      	ldr	r1, [r0, #8]
    11ce:	f012 0f01 	tst.w	r2, #1
    11d2:	ea4f 0262 	mov.w	r2, r2, asr #1
    11d6:	6803      	ldr	r3, [r0, #0]
    11d8:	bf1c      	itt	ne
    11da:	5888      	ldrne	r0, [r1, r2]
    11dc:	58c3      	ldrne	r3, [r0, r3]
    11de:	1888      	adds	r0, r1, r2
    11e0:	4718      	bx	r3
	...

000011e4 <mbed::SerialBase::~SerialBase()>:
    11e4:	b570      	push	{r4, r5, r6, lr}
    11e6:	4605      	mov	r5, r0
    11e8:	4b07      	ldr	r3, [pc, #28]	; (1208 <mbed::SerialBase::~SerialBase()+0x24>)
    11ea:	4606      	mov	r6, r0
    11ec:	f845 3b0c 	str.w	r3, [r5], #12
    11f0:	b145      	cbz	r5, 1204 <mbed::SerialBase::~SerialBase()+0x20>
    11f2:	f100 042c 	add.w	r4, r0, #44	; 0x2c
    11f6:	42ac      	cmp	r4, r5
    11f8:	d004      	beq.n	1204 <mbed::SerialBase::~SerialBase()+0x20>
    11fa:	3c10      	subs	r4, #16
    11fc:	4620      	mov	r0, r4
    11fe:	f7ff f8aa 	bl	356 <mbed::Callback<void ()>::~Callback()>
    1202:	e7f8      	b.n	11f6 <mbed::SerialBase::~SerialBase()+0x12>
    1204:	4630      	mov	r0, r6
    1206:	bd70      	pop	{r4, r5, r6, pc}
    1208:	0000505c 	.word	0x0000505c

0000120c <mbed::SerialBase::~SerialBase()>:
    120c:	b510      	push	{r4, lr}
    120e:	4604      	mov	r4, r0
    1210:	f7ff ffe8 	bl	11e4 <mbed::SerialBase::~SerialBase()>
    1214:	4620      	mov	r0, r4
    1216:	f002 fcdd 	bl	3bd4 <operator delete(void*)>
    121a:	4620      	mov	r0, r4
    121c:	bd10      	pop	{r4, pc}
	...

00001220 <BufferedSerial::~BufferedSerial()>:
    1220:	b530      	push	{r4, r5, lr}
    1222:	2500      	movs	r5, #0
    1224:	4604      	mov	r4, r0
    1226:	4b12      	ldr	r3, [pc, #72]	; (1270 <BufferedSerial::~BufferedSerial()+0x50>)
    1228:	b085      	sub	sp, #20
    122a:	6003      	str	r3, [r0, #0]
    122c:	462a      	mov	r2, r5
    122e:	4669      	mov	r1, sp
    1230:	9503      	str	r5, [sp, #12]
    1232:	f002 fb25 	bl	3880 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
    1236:	4668      	mov	r0, sp
    1238:	f7ff f88d 	bl	356 <mbed::Callback<void ()>::~Callback()>
    123c:	2201      	movs	r2, #1
    123e:	4669      	mov	r1, sp
    1240:	4620      	mov	r0, r4
    1242:	9503      	str	r5, [sp, #12]
    1244:	f002 fb1c 	bl	3880 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
    1248:	4668      	mov	r0, sp
    124a:	f7ff f884 	bl	356 <mbed::Callback<void ()>::~Callback()>
    124e:	f104 0040 	add.w	r0, r4, #64	; 0x40
    1252:	f000 f945 	bl	14e0 <Buffer<char>::~Buffer()>
    1256:	f104 0030 	add.w	r0, r4, #48	; 0x30
    125a:	f000 f941 	bl	14e0 <Buffer<char>::~Buffer()>
    125e:	4b05      	ldr	r3, [pc, #20]	; (1274 <BufferedSerial::~BufferedSerial()+0x54>)
    1260:	4620      	mov	r0, r4
    1262:	6023      	str	r3, [r4, #0]
    1264:	f7ff ffbe 	bl	11e4 <mbed::SerialBase::~SerialBase()>
    1268:	4620      	mov	r0, r4
    126a:	b005      	add	sp, #20
    126c:	bd30      	pop	{r4, r5, pc}
    126e:	bf00      	nop
    1270:	00004e08 	.word	0x00004e08
    1274:	00005044 	.word	0x00005044

00001278 <BufferedSerial::~BufferedSerial()>:
    1278:	b510      	push	{r4, lr}
    127a:	4604      	mov	r4, r0
    127c:	f7ff ffd0 	bl	1220 <BufferedSerial::~BufferedSerial()>
    1280:	4620      	mov	r0, r4
    1282:	f002 fca7 	bl	3bd4 <operator delete(void*)>
    1286:	4620      	mov	r0, r4
    1288:	bd10      	pop	{r4, pc}

0000128a <BufferedSerial::txIrq()>:
    128a:	b530      	push	{r4, r5, lr}
    128c:	4604      	mov	r4, r0
    128e:	b085      	sub	sp, #20
    1290:	1d05      	adds	r5, r0, #4
    1292:	4628      	mov	r0, r5
    1294:	f001 ff62 	bl	315c <serial_writable>
    1298:	b1f0      	cbz	r0, 12d8 <BufferedSerial::txIrq()+0x4e>
    129a:	6c62      	ldr	r2, [r4, #68]	; 0x44
    129c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    129e:	429a      	cmp	r2, r3
    12a0:	d010      	beq.n	12c4 <BufferedSerial::txIrq()+0x3a>
    12a2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    12a4:	6c22      	ldr	r2, [r4, #64]	; 0x40
    12a6:	1c59      	adds	r1, r3, #1
    12a8:	64a1      	str	r1, [r4, #72]	; 0x48
    12aa:	5cd1      	ldrb	r1, [r2, r3]
    12ac:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    12ae:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    12b0:	3b01      	subs	r3, #1
    12b2:	fbb0 f2f3 	udiv	r2, r0, r3
    12b6:	fb03 0312 	mls	r3, r3, r2, r0
    12ba:	4628      	mov	r0, r5
    12bc:	64a3      	str	r3, [r4, #72]	; 0x48
    12be:	f001 ff73 	bl	31a8 <serial_putc>
    12c2:	e7e6      	b.n	1292 <BufferedSerial::txIrq()+0x8>
    12c4:	2300      	movs	r3, #0
    12c6:	4620      	mov	r0, r4
    12c8:	2201      	movs	r2, #1
    12ca:	4669      	mov	r1, sp
    12cc:	9303      	str	r3, [sp, #12]
    12ce:	f002 fad7 	bl	3880 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
    12d2:	4668      	mov	r0, sp
    12d4:	f7ff f83f 	bl	356 <mbed::Callback<void ()>::~Callback()>
    12d8:	b005      	add	sp, #20
    12da:	bd30      	pop	{r4, r5, pc}

000012dc <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
    12dc:	b510      	push	{r4, lr}
    12de:	b086      	sub	sp, #24
    12e0:	e88d 000c 	stmia.w	sp, {r2, r3}
    12e4:	9b01      	ldr	r3, [sp, #4]
    12e6:	9202      	str	r2, [sp, #8]
    12e8:	9303      	str	r3, [sp, #12]
    12ea:	4b06      	ldr	r3, [pc, #24]	; (1304 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
    12ec:	9104      	str	r1, [sp, #16]
    12ee:	f89d 2020 	ldrb.w	r2, [sp, #32]
    12f2:	a902      	add	r1, sp, #8
    12f4:	9305      	str	r3, [sp, #20]
    12f6:	f002 fac3 	bl	3880 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
    12fa:	a802      	add	r0, sp, #8
    12fc:	f7ff f82b 	bl	356 <mbed::Callback<void ()>::~Callback()>
    1300:	b006      	add	sp, #24
    1302:	bd10      	pop	{r4, pc}
    1304:	00004d7c 	.word	0x00004d7c

00001308 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
    1308:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    130a:	4604      	mov	r4, r0
    130c:	461d      	mov	r5, r3
    130e:	f44f 5316 	mov.w	r3, #9600	; 0x2580
    1312:	9e08      	ldr	r6, [sp, #32]
    1314:	f002 f9ec 	bl	36f0 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
    1318:	4620      	mov	r0, r4
    131a:	4b0e      	ldr	r3, [pc, #56]	; (1354 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x4c>)
    131c:	4629      	mov	r1, r5
    131e:	f840 3b30 	str.w	r3, [r0], #48
    1322:	f000 f8ec 	bl	14fe <Buffer<char>::Buffer(unsigned long)>
    1326:	fb06 f105 	mul.w	r1, r6, r5
    132a:	f104 0040 	add.w	r0, r4, #64	; 0x40
    132e:	f000 f8e6 	bl	14fe <Buffer<char>::Buffer(unsigned long)>
    1332:	4b09      	ldr	r3, [pc, #36]	; (1358 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
    1334:	4620      	mov	r0, r4
    1336:	9302      	str	r3, [sp, #8]
    1338:	2300      	movs	r3, #0
    133a:	9303      	str	r3, [sp, #12]
    133c:	9300      	str	r3, [sp, #0]
    133e:	ab04      	add	r3, sp, #16
    1340:	e913 000c 	ldmdb	r3, {r2, r3}
    1344:	4621      	mov	r1, r4
    1346:	f7ff ffc9 	bl	12dc <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
    134a:	4620      	mov	r0, r4
    134c:	6525      	str	r5, [r4, #80]	; 0x50
    134e:	6566      	str	r6, [r4, #84]	; 0x54
    1350:	b004      	add	sp, #16
    1352:	bd70      	pop	{r4, r5, r6, pc}
    1354:	00004e08 	.word	0x00004e08
    1358:	000013c3 	.word	0x000013c3

0000135c <BufferedSerial::prime()>:
    135c:	b570      	push	{r4, r5, r6, lr}
    135e:	4604      	mov	r4, r0
    1360:	b086      	sub	sp, #24
    1362:	3004      	adds	r0, #4
    1364:	f001 fefa 	bl	315c <serial_writable>
    1368:	b1c0      	cbz	r0, 139c <BufferedSerial::prime()+0x40>
    136a:	2600      	movs	r6, #0
    136c:	ad02      	add	r5, sp, #8
    136e:	2201      	movs	r2, #1
    1370:	4629      	mov	r1, r5
    1372:	4620      	mov	r0, r4
    1374:	9605      	str	r6, [sp, #20]
    1376:	f002 fa83 	bl	3880 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
    137a:	4628      	mov	r0, r5
    137c:	f7fe ffeb 	bl	356 <mbed::Callback<void ()>::~Callback()>
    1380:	4620      	mov	r0, r4
    1382:	f7ff ff82 	bl	128a <BufferedSerial::txIrq()>
    1386:	4b06      	ldr	r3, [pc, #24]	; (13a0 <BufferedSerial::prime()+0x44>)
    1388:	9603      	str	r6, [sp, #12]
    138a:	9302      	str	r3, [sp, #8]
    138c:	2301      	movs	r3, #1
    138e:	9300      	str	r3, [sp, #0]
    1390:	e895 000c 	ldmia.w	r5, {r2, r3}
    1394:	4621      	mov	r1, r4
    1396:	4620      	mov	r0, r4
    1398:	f7ff ffa0 	bl	12dc <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
    139c:	b006      	add	sp, #24
    139e:	bd70      	pop	{r4, r5, r6, pc}
    13a0:	0000128b 	.word	0x0000128b

000013a4 <Buffer<char>::put(char)>:
    13a4:	6843      	ldr	r3, [r0, #4]
    13a6:	6802      	ldr	r2, [r0, #0]
    13a8:	b510      	push	{r4, lr}
    13aa:	1c5c      	adds	r4, r3, #1
    13ac:	6044      	str	r4, [r0, #4]
    13ae:	54d1      	strb	r1, [r2, r3]
    13b0:	68c3      	ldr	r3, [r0, #12]
    13b2:	6841      	ldr	r1, [r0, #4]
    13b4:	3b01      	subs	r3, #1
    13b6:	fbb1 f2f3 	udiv	r2, r1, r3
    13ba:	fb03 1312 	mls	r3, r3, r2, r1
    13be:	6043      	str	r3, [r0, #4]
    13c0:	bd10      	pop	{r4, pc}

000013c2 <BufferedSerial::rxIrq()>:
    13c2:	b538      	push	{r3, r4, r5, lr}
    13c4:	1d05      	adds	r5, r0, #4
    13c6:	4604      	mov	r4, r0
    13c8:	4628      	mov	r0, r5
    13ca:	f001 fec1 	bl	3150 <serial_readable>
    13ce:	b138      	cbz	r0, 13e0 <BufferedSerial::rxIrq()+0x1e>
    13d0:	4628      	mov	r0, r5
    13d2:	f001 fea3 	bl	311c <serial_getc>
    13d6:	b2c1      	uxtb	r1, r0
    13d8:	f104 0030 	add.w	r0, r4, #48	; 0x30
    13dc:	f7ff ffe2 	bl	13a4 <Buffer<char>::put(char)>
    13e0:	bd38      	pop	{r3, r4, r5, pc}

000013e2 <BufferedSerial::putc(int)>:
    13e2:	b538      	push	{r3, r4, r5, lr}
    13e4:	4605      	mov	r5, r0
    13e6:	460c      	mov	r4, r1
    13e8:	3040      	adds	r0, #64	; 0x40
    13ea:	b2c9      	uxtb	r1, r1
    13ec:	f7ff ffda 	bl	13a4 <Buffer<char>::put(char)>
    13f0:	4628      	mov	r0, r5
    13f2:	f7ff ffb3 	bl	135c <BufferedSerial::prime()>
    13f6:	4620      	mov	r0, r4
    13f8:	bd38      	pop	{r3, r4, r5, pc}

000013fa <BufferedSerial::puts(char const*)>:
    13fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    13fe:	4607      	mov	r7, r0
    1400:	460c      	mov	r4, r1
    1402:	b1b1      	cbz	r1, 1432 <BufferedSerial::puts(char const*)+0x38>
    1404:	460d      	mov	r5, r1
    1406:	f100 0840 	add.w	r8, r0, #64	; 0x40
    140a:	462e      	mov	r6, r5
    140c:	f816 1b01 	ldrb.w	r1, [r6], #1
    1410:	b121      	cbz	r1, 141c <BufferedSerial::puts(char const*)+0x22>
    1412:	4640      	mov	r0, r8
    1414:	f7ff ffc6 	bl	13a4 <Buffer<char>::put(char)>
    1418:	4635      	mov	r5, r6
    141a:	e7f6      	b.n	140a <BufferedSerial::puts(char const*)+0x10>
    141c:	210a      	movs	r1, #10
    141e:	4640      	mov	r0, r8
    1420:	f7ff ffc0 	bl	13a4 <Buffer<char>::put(char)>
    1424:	1b2c      	subs	r4, r5, r4
    1426:	4638      	mov	r0, r7
    1428:	f7ff ff98 	bl	135c <BufferedSerial::prime()>
    142c:	1c60      	adds	r0, r4, #1
    142e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1432:	4608      	mov	r0, r1
    1434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00001438 <BufferedSerial::write(void const*, unsigned int)>:
    1438:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    143c:	4607      	mov	r7, r0
    143e:	460d      	mov	r5, r1
    1440:	b191      	cbz	r1, 1468 <BufferedSerial::write(void const*, unsigned int)+0x30>
    1442:	b1a2      	cbz	r2, 146e <BufferedSerial::write(void const*, unsigned int)+0x36>
    1444:	460e      	mov	r6, r1
    1446:	188c      	adds	r4, r1, r2
    1448:	f100 0840 	add.w	r8, r0, #64	; 0x40
    144c:	42b4      	cmp	r4, r6
    144e:	d005      	beq.n	145c <BufferedSerial::write(void const*, unsigned int)+0x24>
    1450:	f816 1b01 	ldrb.w	r1, [r6], #1
    1454:	4640      	mov	r0, r8
    1456:	f7ff ffa5 	bl	13a4 <Buffer<char>::put(char)>
    145a:	e7f7      	b.n	144c <BufferedSerial::write(void const*, unsigned int)+0x14>
    145c:	4638      	mov	r0, r7
    145e:	f7ff ff7d 	bl	135c <BufferedSerial::prime()>
    1462:	1b60      	subs	r0, r4, r5
    1464:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1468:	4608      	mov	r0, r1
    146a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    146e:	4610      	mov	r0, r2
    1470:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00001474 <BufferedSerial::printf(char const*, ...)>:
    1474:	b40e      	push	{r1, r2, r3}
    1476:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    147a:	b085      	sub	sp, #20
    147c:	6d02      	ldr	r2, [r0, #80]	; 0x50
    147e:	af02      	add	r7, sp, #8
    1480:	1dd3      	adds	r3, r2, #7
    1482:	f023 0307 	bic.w	r3, r3, #7
    1486:	ebad 0d03 	sub.w	sp, sp, r3
    148a:	f107 0424 	add.w	r4, r7, #36	; 0x24
    148e:	f854 8b04 	ldr.w	r8, [r4], #4
    1492:	ae02      	add	r6, sp, #8
    1494:	4605      	mov	r5, r0
    1496:	2100      	movs	r1, #0
    1498:	4630      	mov	r0, r6
    149a:	f002 fe58 	bl	414e <memset>
    149e:	4622      	mov	r2, r4
    14a0:	4641      	mov	r1, r8
    14a2:	4630      	mov	r0, r6
    14a4:	607c      	str	r4, [r7, #4]
    14a6:	f003 f93f 	bl	4728 <vsiprintf>
    14aa:	6d2b      	ldr	r3, [r5, #80]	; 0x50
    14ac:	4602      	mov	r2, r0
    14ae:	4283      	cmp	r3, r0
    14b0:	d20c      	bcs.n	14cc <BufferedSerial::printf(char const*, ...)+0x58>
    14b2:	9000      	str	r0, [sp, #0]
    14b4:	225d      	movs	r2, #93	; 0x5d
    14b6:	4808      	ldr	r0, [pc, #32]	; (14d8 <BufferedSerial::printf(char const*, ...)+0x64>)
    14b8:	4908      	ldr	r1, [pc, #32]	; (14dc <BufferedSerial::printf(char const*, ...)+0x68>)
    14ba:	f000 f9cd 	bl	1858 <error>
    14be:	2000      	movs	r0, #0
    14c0:	370c      	adds	r7, #12
    14c2:	46bd      	mov	sp, r7
    14c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    14c8:	b003      	add	sp, #12
    14ca:	4770      	bx	lr
    14cc:	4631      	mov	r1, r6
    14ce:	4628      	mov	r0, r5
    14d0:	f7ff ffb2 	bl	1438 <BufferedSerial::write(void const*, unsigned int)>
    14d4:	e7f4      	b.n	14c0 <BufferedSerial::printf(char const*, ...)+0x4c>
    14d6:	bf00      	nop
    14d8:	00004dc5 	.word	0x00004dc5
    14dc:	00004d88 	.word	0x00004d88

000014e0 <Buffer<char>::~Buffer()>:
    14e0:	b510      	push	{r4, lr}
    14e2:	4604      	mov	r4, r0
    14e4:	6800      	ldr	r0, [r0, #0]
    14e6:	b108      	cbz	r0, 14ec <Buffer<char>::~Buffer()+0xc>
    14e8:	f002 fb70 	bl	3bcc <operator delete[](void*)>
    14ec:	4620      	mov	r0, r4
    14ee:	bd10      	pop	{r4, pc}

000014f0 <Buffer<char>::clear()>:
    14f0:	2100      	movs	r1, #0
    14f2:	68c2      	ldr	r2, [r0, #12]
    14f4:	6041      	str	r1, [r0, #4]
    14f6:	6081      	str	r1, [r0, #8]
    14f8:	6800      	ldr	r0, [r0, #0]
    14fa:	f002 be28 	b.w	414e <memset>

000014fe <Buffer<char>::Buffer(unsigned long)>:
    14fe:	b538      	push	{r3, r4, r5, lr}
    1500:	4604      	mov	r4, r0
    1502:	4608      	mov	r0, r1
    1504:	460d      	mov	r5, r1
    1506:	f002 fb55 	bl	3bb4 <operator new[](unsigned int)>
    150a:	60e5      	str	r5, [r4, #12]
    150c:	6020      	str	r0, [r4, #0]
    150e:	4620      	mov	r0, r4
    1510:	f7ff ffee 	bl	14f0 <Buffer<char>::clear()>
    1514:	4620      	mov	r0, r4
    1516:	bd38      	pop	{r3, r4, r5, pc}

00001518 <_gpio_init_in>:
    1518:	b570      	push	{r4, r5, r6, lr}
    151a:	460e      	mov	r6, r1
    151c:	4604      	mov	r4, r0
    151e:	4615      	mov	r5, r2
    1520:	f001 fc12 	bl	2d48 <gpio_init>
    1524:	3601      	adds	r6, #1
    1526:	d009      	beq.n	153c <_gpio_init_in+0x24>
    1528:	4620      	mov	r0, r4
    152a:	2100      	movs	r1, #0
    152c:	f001 fc26 	bl	2d7c <gpio_dir>
    1530:	4629      	mov	r1, r5
    1532:	4620      	mov	r0, r4
    1534:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1538:	f001 bc1d 	b.w	2d76 <gpio_mode>
    153c:	bd70      	pop	{r4, r5, r6, pc}

0000153e <_gpio_init_out.part.1>:
    153e:	b538      	push	{r3, r4, r5, lr}
    1540:	4604      	mov	r4, r0
    1542:	460d      	mov	r5, r1
    1544:	6843      	ldr	r3, [r0, #4]
    1546:	b15a      	cbz	r2, 1560 <_gpio_init_out.part.1+0x22>
    1548:	68c2      	ldr	r2, [r0, #12]
    154a:	4620      	mov	r0, r4
    154c:	6013      	str	r3, [r2, #0]
    154e:	2101      	movs	r1, #1
    1550:	f001 fc14 	bl	2d7c <gpio_dir>
    1554:	4629      	mov	r1, r5
    1556:	4620      	mov	r0, r4
    1558:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    155c:	f001 bc0b 	b.w	2d76 <gpio_mode>
    1560:	6902      	ldr	r2, [r0, #16]
    1562:	e7f2      	b.n	154a <_gpio_init_out.part.1+0xc>

00001564 <gpio_init_in>:
    1564:	2203      	movs	r2, #3
    1566:	f7ff bfd7 	b.w	1518 <_gpio_init_in>

0000156a <gpio_init_in_ex>:
    156a:	f7ff bfd5 	b.w	1518 <_gpio_init_in>

0000156e <gpio_init_out_ex>:
    156e:	b570      	push	{r4, r5, r6, lr}
    1570:	460e      	mov	r6, r1
    1572:	4604      	mov	r4, r0
    1574:	4615      	mov	r5, r2
    1576:	f001 fbe7 	bl	2d48 <gpio_init>
    157a:	3601      	adds	r6, #1
    157c:	d006      	beq.n	158c <gpio_init_out_ex+0x1e>
    157e:	462a      	mov	r2, r5
    1580:	4620      	mov	r0, r4
    1582:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1586:	2102      	movs	r1, #2
    1588:	f7ff bfd9 	b.w	153e <_gpio_init_out.part.1>
    158c:	bd70      	pop	{r4, r5, r6, pc}

0000158e <gpio_init_out>:
    158e:	2200      	movs	r2, #0
    1590:	f7ff bfed 	b.w	156e <gpio_init_out_ex>

00001594 <get_us_ticker_data>:
    1594:	4800      	ldr	r0, [pc, #0]	; (1598 <get_us_ticker_data+0x4>)
    1596:	4770      	bx	lr
    1598:	00004e34 	.word	0x00004e34

0000159c <us_ticker_irq_handler>:
    159c:	4801      	ldr	r0, [pc, #4]	; (15a4 <us_ticker_irq_handler+0x8>)
    159e:	f000 b80c 	b.w	15ba <ticker_irq_handler>
    15a2:	bf00      	nop
    15a4:	00004e34 	.word	0x00004e34

000015a8 <ticker_set_handler>:
    15a8:	b538      	push	{r3, r4, r5, lr}
    15aa:	4604      	mov	r4, r0
    15ac:	460d      	mov	r5, r1
    15ae:	6803      	ldr	r3, [r0, #0]
    15b0:	681b      	ldr	r3, [r3, #0]
    15b2:	4798      	blx	r3
    15b4:	6863      	ldr	r3, [r4, #4]
    15b6:	601d      	str	r5, [r3, #0]
    15b8:	bd38      	pop	{r3, r4, r5, pc}

000015ba <ticker_irq_handler>:
    15ba:	6803      	ldr	r3, [r0, #0]
    15bc:	b570      	push	{r4, r5, r6, lr}
    15be:	68db      	ldr	r3, [r3, #12]
    15c0:	4604      	mov	r4, r0
    15c2:	4798      	blx	r3
    15c4:	6863      	ldr	r3, [r4, #4]
    15c6:	685a      	ldr	r2, [r3, #4]
    15c8:	6823      	ldr	r3, [r4, #0]
    15ca:	b91a      	cbnz	r2, 15d4 <ticker_irq_handler+0x1a>
    15cc:	689b      	ldr	r3, [r3, #8]
    15ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    15d2:	4718      	bx	r3
    15d4:	685b      	ldr	r3, [r3, #4]
    15d6:	6815      	ldr	r5, [r2, #0]
    15d8:	4798      	blx	r3
    15da:	6863      	ldr	r3, [r4, #4]
    15dc:	1a28      	subs	r0, r5, r0
    15de:	2800      	cmp	r0, #0
    15e0:	685a      	ldr	r2, [r3, #4]
    15e2:	dc07      	bgt.n	15f4 <ticker_irq_handler+0x3a>
    15e4:	6891      	ldr	r1, [r2, #8]
    15e6:	6059      	str	r1, [r3, #4]
    15e8:	681b      	ldr	r3, [r3, #0]
    15ea:	2b00      	cmp	r3, #0
    15ec:	d0ea      	beq.n	15c4 <ticker_irq_handler+0xa>
    15ee:	6850      	ldr	r0, [r2, #4]
    15f0:	4798      	blx	r3
    15f2:	e7e7      	b.n	15c4 <ticker_irq_handler+0xa>
    15f4:	6823      	ldr	r3, [r4, #0]
    15f6:	6810      	ldr	r0, [r2, #0]
    15f8:	691b      	ldr	r3, [r3, #16]
    15fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    15fe:	4718      	bx	r3

00001600 <ticker_insert_event>:
    1600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1602:	4606      	mov	r6, r0
    1604:	460c      	mov	r4, r1
    1606:	461f      	mov	r7, r3
    1608:	4615      	mov	r5, r2
    160a:	f000 f89f 	bl	174c <core_util_critical_section_enter>
    160e:	2100      	movs	r1, #0
    1610:	6870      	ldr	r0, [r6, #4]
    1612:	e884 00a0 	stmia.w	r4, {r5, r7}
    1616:	6843      	ldr	r3, [r0, #4]
    1618:	b953      	cbnz	r3, 1630 <ticker_insert_event+0x30>
    161a:	60a3      	str	r3, [r4, #8]
    161c:	b979      	cbnz	r1, 163e <ticker_insert_event+0x3e>
    161e:	6833      	ldr	r3, [r6, #0]
    1620:	6044      	str	r4, [r0, #4]
    1622:	691b      	ldr	r3, [r3, #16]
    1624:	4628      	mov	r0, r5
    1626:	4798      	blx	r3
    1628:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    162c:	f000 b8a4 	b.w	1778 <core_util_critical_section_exit>
    1630:	681a      	ldr	r2, [r3, #0]
    1632:	1aaa      	subs	r2, r5, r2
    1634:	2a00      	cmp	r2, #0
    1636:	dbf0      	blt.n	161a <ticker_insert_event+0x1a>
    1638:	4619      	mov	r1, r3
    163a:	689b      	ldr	r3, [r3, #8]
    163c:	e7ec      	b.n	1618 <ticker_insert_event+0x18>
    163e:	608c      	str	r4, [r1, #8]
    1640:	e7f2      	b.n	1628 <ticker_insert_event+0x28>

00001642 <ticker_remove_event>:
    1642:	b538      	push	{r3, r4, r5, lr}
    1644:	4605      	mov	r5, r0
    1646:	460c      	mov	r4, r1
    1648:	f000 f880 	bl	174c <core_util_critical_section_enter>
    164c:	686a      	ldr	r2, [r5, #4]
    164e:	6853      	ldr	r3, [r2, #4]
    1650:	42a3      	cmp	r3, r4
    1652:	d10e      	bne.n	1672 <ticker_remove_event+0x30>
    1654:	689b      	ldr	r3, [r3, #8]
    1656:	6053      	str	r3, [r2, #4]
    1658:	682a      	ldr	r2, [r5, #0]
    165a:	b92b      	cbnz	r3, 1668 <ticker_remove_event+0x26>
    165c:	6893      	ldr	r3, [r2, #8]
    165e:	4798      	blx	r3
    1660:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1664:	f000 b888 	b.w	1778 <core_util_critical_section_exit>
    1668:	6912      	ldr	r2, [r2, #16]
    166a:	6818      	ldr	r0, [r3, #0]
    166c:	4790      	blx	r2
    166e:	e7f7      	b.n	1660 <ticker_remove_event+0x1e>
    1670:	4613      	mov	r3, r2
    1672:	2b00      	cmp	r3, #0
    1674:	d0f4      	beq.n	1660 <ticker_remove_event+0x1e>
    1676:	689a      	ldr	r2, [r3, #8]
    1678:	4294      	cmp	r4, r2
    167a:	d1f9      	bne.n	1670 <ticker_remove_event+0x2e>
    167c:	68a2      	ldr	r2, [r4, #8]
    167e:	609a      	str	r2, [r3, #8]
    1680:	e7ee      	b.n	1660 <ticker_remove_event+0x1e>

00001682 <ticker_read>:
    1682:	6803      	ldr	r3, [r0, #0]
    1684:	685b      	ldr	r3, [r3, #4]
    1686:	4718      	bx	r3

00001688 <pinmap_pinout>:
    1688:	b510      	push	{r4, lr}
    168a:	4604      	mov	r4, r0
    168c:	3001      	adds	r0, #1
    168e:	d10d      	bne.n	16ac <pinmap_pinout+0x24>
    1690:	bd10      	pop	{r4, pc}
    1692:	429c      	cmp	r4, r3
    1694:	d109      	bne.n	16aa <pinmap_pinout+0x22>
    1696:	4620      	mov	r0, r4
    1698:	6889      	ldr	r1, [r1, #8]
    169a:	f001 ff19 	bl	34d0 <pin_function>
    169e:	4620      	mov	r0, r4
    16a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    16a4:	2102      	movs	r1, #2
    16a6:	f001 bf2c 	b.w	3502 <pin_mode>
    16aa:	310c      	adds	r1, #12
    16ac:	680b      	ldr	r3, [r1, #0]
    16ae:	1c5a      	adds	r2, r3, #1
    16b0:	d1ef      	bne.n	1692 <pinmap_pinout+0xa>
    16b2:	4802      	ldr	r0, [pc, #8]	; (16bc <pinmap_pinout+0x34>)
    16b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    16b8:	f000 b8ce 	b.w	1858 <error>
    16bc:	00004e81 	.word	0x00004e81

000016c0 <pinmap_merge>:
    16c0:	4288      	cmp	r0, r1
    16c2:	b508      	push	{r3, lr}
    16c4:	d008      	beq.n	16d8 <pinmap_merge+0x18>
    16c6:	1c43      	adds	r3, r0, #1
    16c8:	d006      	beq.n	16d8 <pinmap_merge+0x18>
    16ca:	3101      	adds	r1, #1
    16cc:	d006      	beq.n	16dc <pinmap_merge+0x1c>
    16ce:	4804      	ldr	r0, [pc, #16]	; (16e0 <pinmap_merge+0x20>)
    16d0:	f000 f8c2 	bl	1858 <error>
    16d4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    16d8:	4608      	mov	r0, r1
    16da:	bd08      	pop	{r3, pc}
    16dc:	4601      	mov	r1, r0
    16de:	e7fb      	b.n	16d8 <pinmap_merge+0x18>
    16e0:	00004e50 	.word	0x00004e50

000016e4 <pinmap_find_peripheral>:
    16e4:	680b      	ldr	r3, [r1, #0]
    16e6:	1c5a      	adds	r2, r3, #1
    16e8:	d101      	bne.n	16ee <pinmap_find_peripheral+0xa>
    16ea:	4618      	mov	r0, r3
    16ec:	4770      	bx	lr
    16ee:	4283      	cmp	r3, r0
    16f0:	d101      	bne.n	16f6 <pinmap_find_peripheral+0x12>
    16f2:	6848      	ldr	r0, [r1, #4]
    16f4:	4770      	bx	lr
    16f6:	310c      	adds	r1, #12
    16f8:	e7f4      	b.n	16e4 <pinmap_find_peripheral>
	...

000016fc <pinmap_peripheral>:
    16fc:	1c42      	adds	r2, r0, #1
    16fe:	b510      	push	{r4, lr}
    1700:	4604      	mov	r4, r0
    1702:	d007      	beq.n	1714 <pinmap_peripheral+0x18>
    1704:	f7ff ffee 	bl	16e4 <pinmap_find_peripheral>
    1708:	1c43      	adds	r3, r0, #1
    170a:	4604      	mov	r4, r0
    170c:	d102      	bne.n	1714 <pinmap_peripheral+0x18>
    170e:	4802      	ldr	r0, [pc, #8]	; (1718 <pinmap_peripheral+0x1c>)
    1710:	f000 f8a2 	bl	1858 <error>
    1714:	4620      	mov	r0, r4
    1716:	bd10      	pop	{r4, pc}
    1718:	00004e61 	.word	0x00004e61

0000171c <mbed_interface_connected>:
    171c:	f000 b84c 	b.w	17b8 <semihost_connected>

00001720 <mbed_interface_disconnect>:
    1720:	b508      	push	{r3, lr}
    1722:	f000 f849 	bl	17b8 <semihost_connected>
    1726:	b138      	cbz	r0, 1738 <mbed_interface_disconnect+0x18>
    1728:	f000 f84e 	bl	17c8 <semihost_disabledebug>
    172c:	b930      	cbnz	r0, 173c <mbed_interface_disconnect+0x1c>
    172e:	f000 f843 	bl	17b8 <semihost_connected>
    1732:	2800      	cmp	r0, #0
    1734:	d1fb      	bne.n	172e <mbed_interface_disconnect+0xe>
    1736:	bd08      	pop	{r3, pc}
    1738:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    173c:	bd08      	pop	{r3, pc}

0000173e <core_util_are_interrupts_enabled>:
    173e:	f3ef 8010 	mrs	r0, PRIMASK
    1742:	43c0      	mvns	r0, r0
    1744:	f000 0001 	and.w	r0, r0, #1
    1748:	4770      	bx	lr
	...

0000174c <core_util_critical_section_enter>:
    174c:	b508      	push	{r3, lr}
    174e:	f7ff fff6 	bl	173e <core_util_are_interrupts_enabled>
    1752:	b672      	cpsid	i
    1754:	4b06      	ldr	r3, [pc, #24]	; (1770 <core_util_critical_section_enter+0x24>)
    1756:	681a      	ldr	r2, [r3, #0]
    1758:	b922      	cbnz	r2, 1764 <core_util_critical_section_enter+0x18>
    175a:	f080 0001 	eor.w	r0, r0, #1
    175e:	4a05      	ldr	r2, [pc, #20]	; (1774 <core_util_critical_section_enter+0x28>)
    1760:	b2c0      	uxtb	r0, r0
    1762:	7010      	strb	r0, [r2, #0]
    1764:	681a      	ldr	r2, [r3, #0]
    1766:	681a      	ldr	r2, [r3, #0]
    1768:	3201      	adds	r2, #1
    176a:	601a      	str	r2, [r3, #0]
    176c:	bd08      	pop	{r3, pc}
    176e:	bf00      	nop
    1770:	1000093c 	.word	0x1000093c
    1774:	10000938 	.word	0x10000938

00001778 <core_util_critical_section_exit>:
    1778:	b508      	push	{r3, lr}
    177a:	4b07      	ldr	r3, [pc, #28]	; (1798 <core_util_critical_section_exit+0x20>)
    177c:	681a      	ldr	r2, [r3, #0]
    177e:	b152      	cbz	r2, 1796 <core_util_critical_section_exit+0x1e>
    1780:	f7ff ffdd 	bl	173e <core_util_are_interrupts_enabled>
    1784:	681a      	ldr	r2, [r3, #0]
    1786:	3a01      	subs	r2, #1
    1788:	601a      	str	r2, [r3, #0]
    178a:	681b      	ldr	r3, [r3, #0]
    178c:	b91b      	cbnz	r3, 1796 <core_util_critical_section_exit+0x1e>
    178e:	4b03      	ldr	r3, [pc, #12]	; (179c <core_util_critical_section_exit+0x24>)
    1790:	781b      	ldrb	r3, [r3, #0]
    1792:	b903      	cbnz	r3, 1796 <core_util_critical_section_exit+0x1e>
    1794:	b662      	cpsie	i
    1796:	bd08      	pop	{r3, pc}
    1798:	1000093c 	.word	0x1000093c
    179c:	10000938 	.word	0x10000938

000017a0 <semihost_exit>:
    17a0:	b530      	push	{r4, r5, lr}
    17a2:	b085      	sub	sp, #20
    17a4:	466d      	mov	r5, sp
    17a6:	2418      	movs	r4, #24
    17a8:	4620      	mov	r0, r4
    17aa:	4629      	mov	r1, r5
    17ac:	beab      	bkpt	0x00ab
    17ae:	4604      	mov	r4, r0
    17b0:	4620      	mov	r0, r4
    17b2:	b005      	add	sp, #20
    17b4:	bd30      	pop	{r4, r5, pc}
	...

000017b8 <semihost_connected>:
    17b8:	4b02      	ldr	r3, [pc, #8]	; (17c4 <semihost_connected+0xc>)
    17ba:	6818      	ldr	r0, [r3, #0]
    17bc:	f000 0001 	and.w	r0, r0, #1
    17c0:	4770      	bx	lr
    17c2:	bf00      	nop
    17c4:	e000edf0 	.word	0xe000edf0

000017c8 <semihost_disabledebug>:
    17c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
    17ca:	f240 1405 	movw	r4, #261	; 0x105
    17ce:	ad01      	add	r5, sp, #4
    17d0:	4620      	mov	r0, r4
    17d2:	4629      	mov	r1, r5
    17d4:	beab      	bkpt	0x00ab
    17d6:	4604      	mov	r4, r0
    17d8:	4620      	mov	r0, r4
    17da:	b003      	add	sp, #12
    17dc:	bd30      	pop	{r4, r5, pc}
	...

000017e0 <mbed_die>:
    17e0:	b500      	push	{lr}
    17e2:	b099      	sub	sp, #100	; 0x64
    17e4:	f7ff ffb2 	bl	174c <core_util_critical_section_enter>
    17e8:	4917      	ldr	r1, [pc, #92]	; (1848 <mbed_die+0x68>)
    17ea:	4668      	mov	r0, sp
    17ec:	f7ff fecf 	bl	158e <gpio_init_out>
    17f0:	4916      	ldr	r1, [pc, #88]	; (184c <mbed_die+0x6c>)
    17f2:	a806      	add	r0, sp, #24
    17f4:	f7ff fecb 	bl	158e <gpio_init_out>
    17f8:	4915      	ldr	r1, [pc, #84]	; (1850 <mbed_die+0x70>)
    17fa:	a80c      	add	r0, sp, #48	; 0x30
    17fc:	f7ff fec7 	bl	158e <gpio_init_out>
    1800:	4914      	ldr	r1, [pc, #80]	; (1854 <mbed_die+0x74>)
    1802:	a812      	add	r0, sp, #72	; 0x48
    1804:	f7ff fec3 	bl	158e <gpio_init_out>
    1808:	9a01      	ldr	r2, [sp, #4]
    180a:	9b03      	ldr	r3, [sp, #12]
    180c:	2096      	movs	r0, #150	; 0x96
    180e:	601a      	str	r2, [r3, #0]
    1810:	9a07      	ldr	r2, [sp, #28]
    1812:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    1814:	601a      	str	r2, [r3, #0]
    1816:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    1818:	9b10      	ldr	r3, [sp, #64]	; 0x40
    181a:	601a      	str	r2, [r3, #0]
    181c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    181e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    1820:	601a      	str	r2, [r3, #0]
    1822:	f002 f8ad 	bl	3980 <wait_ms>
    1826:	9a01      	ldr	r2, [sp, #4]
    1828:	9b04      	ldr	r3, [sp, #16]
    182a:	2096      	movs	r0, #150	; 0x96
    182c:	601a      	str	r2, [r3, #0]
    182e:	9a07      	ldr	r2, [sp, #28]
    1830:	9b09      	ldr	r3, [sp, #36]	; 0x24
    1832:	601a      	str	r2, [r3, #0]
    1834:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    1836:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    1838:	601a      	str	r2, [r3, #0]
    183a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    183c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    183e:	601a      	str	r2, [r3, #0]
    1840:	f002 f89e 	bl	3980 <wait_ms>
    1844:	e7e0      	b.n	1808 <mbed_die+0x28>
    1846:	bf00      	nop
    1848:	2009c032 	.word	0x2009c032
    184c:	2009c034 	.word	0x2009c034
    1850:	2009c035 	.word	0x2009c035
    1854:	2009c037 	.word	0x2009c037

00001858 <error>:
    1858:	b40f      	push	{r0, r1, r2, r3}
    185a:	2001      	movs	r0, #1
    185c:	b508      	push	{r3, lr}
    185e:	f002 f99d 	bl	3b9c <__wrap_exit>

00001862 <default_idle_hook>:
    1862:	f001 ba9b 	b.w	2d9c <hal_sleep>
	...

00001868 <rtos_idle_loop>:
    1868:	b508      	push	{r3, lr}
    186a:	4c02      	ldr	r4, [pc, #8]	; (1874 <rtos_idle_loop+0xc>)
    186c:	6823      	ldr	r3, [r4, #0]
    186e:	4798      	blx	r3
    1870:	e7fc      	b.n	186c <rtos_idle_loop+0x4>
    1872:	bf00      	nop
    1874:	100000cc 	.word	0x100000cc

00001878 <pre_main>:
    1878:	b508      	push	{r3, lr}
    187a:	480b      	ldr	r0, [pc, #44]	; (18a8 <pre_main+0x30>)
    187c:	f000 fd8c 	bl	2398 <osMutexCreate>
    1880:	4b0a      	ldr	r3, [pc, #40]	; (18ac <pre_main+0x34>)
    1882:	6018      	str	r0, [r3, #0]
    1884:	480a      	ldr	r0, [pc, #40]	; (18b0 <pre_main+0x38>)
    1886:	f000 fd87 	bl	2398 <osMutexCreate>
    188a:	4b0a      	ldr	r3, [pc, #40]	; (18b4 <pre_main+0x3c>)
    188c:	6018      	str	r0, [r3, #0]
    188e:	480a      	ldr	r0, [pc, #40]	; (18b8 <pre_main+0x40>)
    1890:	f000 fd82 	bl	2398 <osMutexCreate>
    1894:	4b09      	ldr	r3, [pc, #36]	; (18bc <pre_main+0x44>)
    1896:	6018      	str	r0, [r3, #0]
    1898:	f002 fbf2 	bl	4080 <__libc_init_array>
    189c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    18a0:	2100      	movs	r1, #0
    18a2:	4608      	mov	r0, r1
    18a4:	f002 b939 	b.w	3b1a <__wrap_main>
    18a8:	00004ee0 	.word	0x00004ee0
    18ac:	10001e8c 	.word	0x10001e8c
    18b0:	00004edc 	.word	0x00004edc
    18b4:	10000948 	.word	0x10000948
    18b8:	00004ed8 	.word	0x00004ed8
    18bc:	10000940 	.word	0x10000940

000018c0 <os_idle_demon>:
    18c0:	f7ff bfd2 	b.w	1868 <rtos_idle_loop>

000018c4 <os_error>:
    18c4:	b510      	push	{r4, lr}
    18c6:	4604      	mov	r4, r0
    18c8:	f000 fcd4 	bl	2274 <svcThreadGetId>
    18cc:	4621      	mov	r1, r4
    18ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    18d2:	4602      	mov	r2, r0
    18d4:	4801      	ldr	r0, [pc, #4]	; (18dc <os_error+0x18>)
    18d6:	f7ff bfbf 	b.w	1858 <error>
    18da:	bf00      	nop
    18dc:	00004ea0 	.word	0x00004ea0

000018e0 <sysThreadTerminate>:
    18e0:	f002 b97a 	b.w	3bd8 <thread_terminate_hook>

000018e4 <set_stack_heap>:
    18e4:	4a0b      	ldr	r2, [pc, #44]	; (1914 <set_stack_heap+0x30>)
    18e6:	b4f0      	push	{r4, r5, r6, r7}
    18e8:	f1c2 5380 	rsb	r3, r2, #268435456	; 0x10000000
    18ec:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
    18f0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
    18f4:	4619      	mov	r1, r3
    18f6:	bf28      	it	cs
    18f8:	f44f 6180 	movcs.w	r1, #1024	; 0x400
    18fc:	4f06      	ldr	r7, [pc, #24]	; (1918 <set_stack_heap+0x34>)
    18fe:	4d07      	ldr	r5, [pc, #28]	; (191c <set_stack_heap+0x38>)
    1900:	1a5b      	subs	r3, r3, r1
    1902:	4c07      	ldr	r4, [pc, #28]	; (1920 <set_stack_heap+0x3c>)
    1904:	4807      	ldr	r0, [pc, #28]	; (1924 <set_stack_heap+0x40>)
    1906:	189e      	adds	r6, r3, r2
    1908:	603a      	str	r2, [r7, #0]
    190a:	602e      	str	r6, [r5, #0]
    190c:	6023      	str	r3, [r4, #0]
    190e:	6001      	str	r1, [r0, #0]
    1910:	bcf0      	pop	{r4, r5, r6, r7}
    1912:	4770      	bx	lr
    1914:	10002628 	.word	0x10002628
    1918:	10001ba8 	.word	0x10001ba8
    191c:	10000950 	.word	0x10000950
    1920:	10001ba4 	.word	0x10001ba4
    1924:	1000094c 	.word	0x1000094c

00001928 <software_init_hook_rtos>:
    1928:	f000 fe0a 	bl	2540 <osKernelInitialize>
    192c:	f7ff ffda 	bl	18e4 <set_stack_heap>
    1930:	4803      	ldr	r0, [pc, #12]	; (1940 <software_init_hook_rtos+0x18>)
    1932:	2100      	movs	r1, #0
    1934:	f000 fdb8 	bl	24a8 <osThreadCreate>
    1938:	f000 fc1e 	bl	2178 <osKernelStart>
    193c:	e7fe      	b.n	193c <software_init_hook_rtos+0x14>
    193e:	0000      	.short	0x0000
    1940:	100000d0 	.word	0x100000d0

00001944 <__rtos_malloc_lock>:
    1944:	4b02      	ldr	r3, [pc, #8]	; (1950 <__rtos_malloc_lock+0xc>)
    1946:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    194a:	6818      	ldr	r0, [r3, #0]
    194c:	f000 bd42 	b.w	23d4 <osMutexWait>
    1950:	10000948 	.word	0x10000948

00001954 <__rtos_malloc_unlock>:
    1954:	4b01      	ldr	r3, [pc, #4]	; (195c <__rtos_malloc_unlock+0x8>)
    1956:	6818      	ldr	r0, [r3, #0]
    1958:	f000 bd64 	b.w	2424 <osMutexRelease>
    195c:	10000948 	.word	0x10000948

00001960 <rt_put_prio>:
    1960:	b530      	push	{r4, r5, lr}
    1962:	7802      	ldrb	r2, [r0, #0]
    1964:	788c      	ldrb	r4, [r1, #2]
    1966:	3a01      	subs	r2, #1
    1968:	6843      	ldr	r3, [r0, #4]
    196a:	b2d2      	uxtb	r2, r2
    196c:	b113      	cbz	r3, 1974 <rt_put_prio+0x14>
    196e:	789d      	ldrb	r5, [r3, #2]
    1970:	42a5      	cmp	r5, r4
    1972:	d207      	bcs.n	1984 <rt_put_prio+0x24>
    1974:	2a02      	cmp	r2, #2
    1976:	604b      	str	r3, [r1, #4]
    1978:	6041      	str	r1, [r0, #4]
    197a:	d806      	bhi.n	198a <rt_put_prio+0x2a>
    197c:	b103      	cbz	r3, 1980 <rt_put_prio+0x20>
    197e:	6099      	str	r1, [r3, #8]
    1980:	6088      	str	r0, [r1, #8]
    1982:	bd30      	pop	{r4, r5, pc}
    1984:	4618      	mov	r0, r3
    1986:	685b      	ldr	r3, [r3, #4]
    1988:	e7f0      	b.n	196c <rt_put_prio+0xc>
    198a:	2300      	movs	r3, #0
    198c:	608b      	str	r3, [r1, #8]
    198e:	bd30      	pop	{r4, r5, pc}

00001990 <rt_get_first>:
    1990:	6843      	ldr	r3, [r0, #4]
    1992:	7802      	ldrb	r2, [r0, #0]
    1994:	6859      	ldr	r1, [r3, #4]
    1996:	3a01      	subs	r2, #1
    1998:	2a02      	cmp	r2, #2
    199a:	6041      	str	r1, [r0, #4]
    199c:	f04f 0200 	mov.w	r2, #0
    19a0:	d805      	bhi.n	19ae <rt_get_first+0x1e>
    19a2:	b109      	cbz	r1, 19a8 <rt_get_first+0x18>
    19a4:	6088      	str	r0, [r1, #8]
    19a6:	605a      	str	r2, [r3, #4]
    19a8:	609a      	str	r2, [r3, #8]
    19aa:	4618      	mov	r0, r3
    19ac:	4770      	bx	lr
    19ae:	605a      	str	r2, [r3, #4]
    19b0:	e7fb      	b.n	19aa <rt_get_first+0x1a>
	...

000019b4 <rt_put_rdy_first>:
    19b4:	4b03      	ldr	r3, [pc, #12]	; (19c4 <rt_put_rdy_first+0x10>)
    19b6:	685a      	ldr	r2, [r3, #4]
    19b8:	6042      	str	r2, [r0, #4]
    19ba:	2200      	movs	r2, #0
    19bc:	6058      	str	r0, [r3, #4]
    19be:	6082      	str	r2, [r0, #8]
    19c0:	4770      	bx	lr
    19c2:	bf00      	nop
    19c4:	10002580 	.word	0x10002580

000019c8 <rt_put_dly>:
    19c8:	4b10      	ldr	r3, [pc, #64]	; (1a0c <rt_put_dly+0x44>)
    19ca:	b510      	push	{r4, lr}
    19cc:	68da      	ldr	r2, [r3, #12]
    19ce:	b18a      	cbz	r2, 19f4 <rt_put_dly+0x2c>
    19d0:	8a9a      	ldrh	r2, [r3, #20]
    19d2:	428a      	cmp	r2, r1
    19d4:	68dc      	ldr	r4, [r3, #12]
    19d6:	d30c      	bcc.n	19f2 <rt_put_dly+0x2a>
    19d8:	60c4      	str	r4, [r0, #12]
    19da:	60d8      	str	r0, [r3, #12]
    19dc:	68c4      	ldr	r4, [r0, #12]
    19de:	6103      	str	r3, [r0, #16]
    19e0:	b104      	cbz	r4, 19e4 <rt_put_dly+0x1c>
    19e2:	6120      	str	r0, [r4, #16]
    19e4:	1a52      	subs	r2, r2, r1
    19e6:	b292      	uxth	r2, r2
    19e8:	8282      	strh	r2, [r0, #20]
    19ea:	8a99      	ldrh	r1, [r3, #20]
    19ec:	1a8a      	subs	r2, r1, r2
    19ee:	829a      	strh	r2, [r3, #20]
    19f0:	bd10      	pop	{r4, pc}
    19f2:	b93c      	cbnz	r4, 1a04 <rt_put_dly+0x3c>
    19f4:	2400      	movs	r4, #0
    19f6:	1a8a      	subs	r2, r1, r2
    19f8:	60c4      	str	r4, [r0, #12]
    19fa:	60d8      	str	r0, [r3, #12]
    19fc:	6103      	str	r3, [r0, #16]
    19fe:	829a      	strh	r2, [r3, #20]
    1a00:	8284      	strh	r4, [r0, #20]
    1a02:	bd10      	pop	{r4, pc}
    1a04:	8aa3      	ldrh	r3, [r4, #20]
    1a06:	441a      	add	r2, r3
    1a08:	4623      	mov	r3, r4
    1a0a:	e7e2      	b.n	19d2 <rt_put_dly+0xa>
    1a0c:	10002598 	.word	0x10002598

00001a10 <rt_dec_dly>:
    1a10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1a14:	4d17      	ldr	r5, [pc, #92]	; (1a74 <rt_dec_dly+0x64>)
    1a16:	68eb      	ldr	r3, [r5, #12]
    1a18:	b153      	cbz	r3, 1a30 <rt_dec_dly+0x20>
    1a1a:	2600      	movs	r6, #0
    1a1c:	8aab      	ldrh	r3, [r5, #20]
    1a1e:	4f16      	ldr	r7, [pc, #88]	; (1a78 <rt_dec_dly+0x68>)
    1a20:	3b01      	subs	r3, #1
    1a22:	f8df 8058 	ldr.w	r8, [pc, #88]	; 1a7c <rt_dec_dly+0x6c>
    1a26:	82ab      	strh	r3, [r5, #20]
    1a28:	8aaa      	ldrh	r2, [r5, #20]
    1a2a:	b90a      	cbnz	r2, 1a30 <rt_dec_dly+0x20>
    1a2c:	68ec      	ldr	r4, [r5, #12]
    1a2e:	b90c      	cbnz	r4, 1a34 <rt_dec_dly+0x24>
    1a30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1a34:	68a3      	ldr	r3, [r4, #8]
    1a36:	b133      	cbz	r3, 1a46 <rt_dec_dly+0x36>
    1a38:	6861      	ldr	r1, [r4, #4]
    1a3a:	6059      	str	r1, [r3, #4]
    1a3c:	6861      	ldr	r1, [r4, #4]
    1a3e:	b109      	cbz	r1, 1a44 <rt_dec_dly+0x34>
    1a40:	608b      	str	r3, [r1, #8]
    1a42:	6062      	str	r2, [r4, #4]
    1a44:	60a6      	str	r6, [r4, #8]
    1a46:	4621      	mov	r1, r4
    1a48:	4638      	mov	r0, r7
    1a4a:	f7ff ff89 	bl	1960 <rt_put_prio>
    1a4e:	8aa3      	ldrh	r3, [r4, #20]
    1a50:	82ab      	strh	r3, [r5, #20]
    1a52:	7863      	ldrb	r3, [r4, #1]
    1a54:	2b04      	cmp	r3, #4
    1a56:	bf01      	itttt	eq
    1a58:	f8d8 3000 	ldreq.w	r3, [r8]
    1a5c:	8ae2      	ldrheq	r2, [r4, #22]
    1a5e:	189b      	addeq	r3, r3, r2
    1a60:	82a3      	strheq	r3, [r4, #20]
    1a62:	2301      	movs	r3, #1
    1a64:	7063      	strb	r3, [r4, #1]
    1a66:	68e3      	ldr	r3, [r4, #12]
    1a68:	60eb      	str	r3, [r5, #12]
    1a6a:	b10b      	cbz	r3, 1a70 <rt_dec_dly+0x60>
    1a6c:	611d      	str	r5, [r3, #16]
    1a6e:	60e6      	str	r6, [r4, #12]
    1a70:	6126      	str	r6, [r4, #16]
    1a72:	e7d9      	b.n	1a28 <rt_dec_dly+0x18>
    1a74:	10002598 	.word	0x10002598
    1a78:	10002580 	.word	0x10002580
    1a7c:	10002614 	.word	0x10002614

00001a80 <rt_rmv_list>:
    1a80:	6883      	ldr	r3, [r0, #8]
    1a82:	b12b      	cbz	r3, 1a90 <rt_rmv_list+0x10>
    1a84:	6842      	ldr	r2, [r0, #4]
    1a86:	605a      	str	r2, [r3, #4]
    1a88:	6842      	ldr	r2, [r0, #4]
    1a8a:	b15a      	cbz	r2, 1aa4 <rt_rmv_list+0x24>
    1a8c:	6093      	str	r3, [r2, #8]
    1a8e:	4770      	bx	lr
    1a90:	4b05      	ldr	r3, [pc, #20]	; (1aa8 <rt_rmv_list+0x28>)
    1a92:	685a      	ldr	r2, [r3, #4]
    1a94:	4290      	cmp	r0, r2
    1a96:	d102      	bne.n	1a9e <rt_rmv_list+0x1e>
    1a98:	6842      	ldr	r2, [r0, #4]
    1a9a:	605a      	str	r2, [r3, #4]
    1a9c:	4770      	bx	lr
    1a9e:	4613      	mov	r3, r2
    1aa0:	2a00      	cmp	r2, #0
    1aa2:	d1f6      	bne.n	1a92 <rt_rmv_list+0x12>
    1aa4:	4770      	bx	lr
    1aa6:	bf00      	nop
    1aa8:	10002580 	.word	0x10002580

00001aac <rt_resort_prio>:
    1aac:	b510      	push	{r4, lr}
    1aae:	6884      	ldr	r4, [r0, #8]
    1ab0:	4601      	mov	r1, r0
    1ab2:	b92c      	cbnz	r4, 1ac0 <rt_resort_prio+0x14>
    1ab4:	7843      	ldrb	r3, [r0, #1]
    1ab6:	2b01      	cmp	r3, #1
    1ab8:	d10d      	bne.n	1ad6 <rt_resort_prio+0x2a>
    1aba:	4c07      	ldr	r4, [pc, #28]	; (1ad8 <rt_resort_prio+0x2c>)
    1abc:	e003      	b.n	1ac6 <rt_resort_prio+0x1a>
    1abe:	68a4      	ldr	r4, [r4, #8]
    1ac0:	7823      	ldrb	r3, [r4, #0]
    1ac2:	2b00      	cmp	r3, #0
    1ac4:	d0fb      	beq.n	1abe <rt_resort_prio+0x12>
    1ac6:	4608      	mov	r0, r1
    1ac8:	f7ff ffda 	bl	1a80 <rt_rmv_list>
    1acc:	4620      	mov	r0, r4
    1ace:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    1ad2:	f7ff bf45 	b.w	1960 <rt_put_prio>
    1ad6:	bd10      	pop	{r4, pc}
    1ad8:	10002580 	.word	0x10002580

00001adc <rt_rmv_dly>:
    1adc:	6903      	ldr	r3, [r0, #16]
    1ade:	b510      	push	{r4, lr}
    1ae0:	b163      	cbz	r3, 1afc <rt_rmv_dly+0x20>
    1ae2:	68c2      	ldr	r2, [r0, #12]
    1ae4:	60da      	str	r2, [r3, #12]
    1ae6:	68c2      	ldr	r2, [r0, #12]
    1ae8:	b14a      	cbz	r2, 1afe <rt_rmv_dly+0x22>
    1aea:	8a99      	ldrh	r1, [r3, #20]
    1aec:	8a84      	ldrh	r4, [r0, #20]
    1aee:	4421      	add	r1, r4
    1af0:	8299      	strh	r1, [r3, #20]
    1af2:	6113      	str	r3, [r2, #16]
    1af4:	2300      	movs	r3, #0
    1af6:	60c3      	str	r3, [r0, #12]
    1af8:	2300      	movs	r3, #0
    1afa:	6103      	str	r3, [r0, #16]
    1afc:	bd10      	pop	{r4, pc}
    1afe:	829a      	strh	r2, [r3, #20]
    1b00:	e7fa      	b.n	1af8 <rt_rmv_dly+0x1c>
	...

00001b04 <rt_psq_enq>:
    1b04:	b470      	push	{r4, r5, r6}
    1b06:	4b11      	ldr	r3, [pc, #68]	; (1b4c <rt_psq_enq+0x48>)
    1b08:	78dd      	ldrb	r5, [r3, #3]
    1b0a:	f3ef 8610 	mrs	r6, PRIMASK
    1b0e:	f3ef 8210 	mrs	r2, PRIMASK
    1b12:	b672      	cpsid	i
    1b14:	789a      	ldrb	r2, [r3, #2]
    1b16:	4295      	cmp	r5, r2
    1b18:	d911      	bls.n	1b3e <rt_psq_enq+0x3a>
    1b1a:	3201      	adds	r2, #1
    1b1c:	709a      	strb	r2, [r3, #2]
    1b1e:	781a      	ldrb	r2, [r3, #0]
    1b20:	1c54      	adds	r4, r2, #1
    1b22:	42a5      	cmp	r5, r4
    1b24:	bf08      	it	eq
    1b26:	2400      	moveq	r4, #0
    1b28:	701c      	strb	r4, [r3, #0]
    1b2a:	b906      	cbnz	r6, 1b2e <rt_psq_enq+0x2a>
    1b2c:	b662      	cpsie	i
    1b2e:	4295      	cmp	r5, r2
    1b30:	d907      	bls.n	1b42 <rt_psq_enq+0x3e>
    1b32:	bc70      	pop	{r4, r5, r6}
    1b34:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    1b38:	6058      	str	r0, [r3, #4]
    1b3a:	6099      	str	r1, [r3, #8]
    1b3c:	4770      	bx	lr
    1b3e:	2e00      	cmp	r6, #0
    1b40:	d0f4      	beq.n	1b2c <rt_psq_enq+0x28>
    1b42:	bc70      	pop	{r4, r5, r6}
    1b44:	2002      	movs	r0, #2
    1b46:	f7ff bebd 	b.w	18c4 <os_error>
    1b4a:	bf00      	nop
    1b4c:	10001e04 	.word	0x10001e04

00001b50 <rt_psh_req>:
    1b50:	4b05      	ldr	r3, [pc, #20]	; (1b68 <rt_psh_req+0x18>)
    1b52:	781b      	ldrb	r3, [r3, #0]
    1b54:	b923      	cbnz	r3, 1b60 <rt_psh_req+0x10>
    1b56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    1b5a:	4b04      	ldr	r3, [pc, #16]	; (1b6c <rt_psh_req+0x1c>)
    1b5c:	601a      	str	r2, [r3, #0]
    1b5e:	4770      	bx	lr
    1b60:	2201      	movs	r2, #1
    1b62:	4b03      	ldr	r3, [pc, #12]	; (1b70 <rt_psh_req+0x20>)
    1b64:	701a      	strb	r2, [r3, #0]
    1b66:	4770      	bx	lr
    1b68:	100019a4 	.word	0x100019a4
    1b6c:	e000ed04 	.word	0xe000ed04
    1b70:	100019a5 	.word	0x100019a5

00001b74 <rt_pop_req>:
    1b74:	b538      	push	{r3, r4, r5, lr}
    1b76:	4b1a      	ldr	r3, [pc, #104]	; (1be0 <rt_pop_req+0x6c>)
    1b78:	4c1a      	ldr	r4, [pc, #104]	; (1be4 <rt_pop_req+0x70>)
    1b7a:	6818      	ldr	r0, [r3, #0]
    1b7c:	2301      	movs	r3, #1
    1b7e:	7043      	strb	r3, [r0, #1]
    1b80:	f7ff ff18 	bl	19b4 <rt_put_rdy_first>
    1b84:	7865      	ldrb	r5, [r4, #1]
    1b86:	78a3      	ldrb	r3, [r4, #2]
    1b88:	b93b      	cbnz	r3, 1b9a <rt_pop_req+0x26>
    1b8a:	4817      	ldr	r0, [pc, #92]	; (1be8 <rt_pop_req+0x74>)
    1b8c:	7065      	strb	r5, [r4, #1]
    1b8e:	f7ff feff 	bl	1990 <rt_get_first>
    1b92:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1b96:	f000 bdad 	b.w	26f4 <rt_switch_req>
    1b9a:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
    1b9e:	6858      	ldr	r0, [r3, #4]
    1ba0:	7802      	ldrb	r2, [r0, #0]
    1ba2:	b99a      	cbnz	r2, 1bcc <rt_pop_req+0x58>
    1ba4:	8919      	ldrh	r1, [r3, #8]
    1ba6:	f000 fa0b 	bl	1fc0 <rt_evt_psh>
    1baa:	78e3      	ldrb	r3, [r4, #3]
    1bac:	3501      	adds	r5, #1
    1bae:	429d      	cmp	r5, r3
    1bb0:	bf08      	it	eq
    1bb2:	2500      	moveq	r5, #0
    1bb4:	f3ef 8310 	mrs	r3, PRIMASK
    1bb8:	f3ef 8210 	mrs	r2, PRIMASK
    1bbc:	b672      	cpsid	i
    1bbe:	78a2      	ldrb	r2, [r4, #2]
    1bc0:	3a01      	subs	r2, #1
    1bc2:	70a2      	strb	r2, [r4, #2]
    1bc4:	2b00      	cmp	r3, #0
    1bc6:	d1de      	bne.n	1b86 <rt_pop_req+0x12>
    1bc8:	b662      	cpsie	i
    1bca:	e7dc      	b.n	1b86 <rt_pop_req+0x12>
    1bcc:	2a01      	cmp	r2, #1
    1bce:	d103      	bne.n	1bd8 <rt_pop_req+0x64>
    1bd0:	6899      	ldr	r1, [r3, #8]
    1bd2:	f000 f983 	bl	1edc <rt_mbx_psh>
    1bd6:	e7e8      	b.n	1baa <rt_pop_req+0x36>
    1bd8:	f001 f892 	bl	2d00 <rt_sem_psh>
    1bdc:	e7e5      	b.n	1baa <rt_pop_req+0x36>
    1bde:	bf00      	nop
    1be0:	100025cc 	.word	0x100025cc
    1be4:	10001e04 	.word	0x10001e04
    1be8:	10002580 	.word	0x10002580

00001bec <os_tick_init>:
    1bec:	4b08      	ldr	r3, [pc, #32]	; (1c10 <os_tick_init+0x24>)
    1bee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    1bf2:	681a      	ldr	r2, [r3, #0]
    1bf4:	4b07      	ldr	r3, [pc, #28]	; (1c14 <os_tick_init+0x28>)
    1bf6:	601a      	str	r2, [r3, #0]
    1bf8:	2200      	movs	r2, #0
    1bfa:	605a      	str	r2, [r3, #4]
    1bfc:	2207      	movs	r2, #7
    1bfe:	f843 2c04 	str.w	r2, [r3, #-4]
    1c02:	4a05      	ldr	r2, [pc, #20]	; (1c18 <os_tick_init+0x2c>)
    1c04:	6813      	ldr	r3, [r2, #0]
    1c06:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
    1c0a:	6013      	str	r3, [r2, #0]
    1c0c:	4770      	bx	lr
    1c0e:	bf00      	nop
    1c10:	00004f00 	.word	0x00004f00
    1c14:	e000e014 	.word	0xe000e014
    1c18:	e000ed20 	.word	0xe000ed20

00001c1c <os_tick_irqack>:
    1c1c:	4770      	bx	lr
	...

00001c20 <rt_systick>:
    1c20:	b508      	push	{r3, lr}
    1c22:	4b0b      	ldr	r3, [pc, #44]	; (1c50 <rt_systick+0x30>)
    1c24:	6818      	ldr	r0, [r3, #0]
    1c26:	2301      	movs	r3, #1
    1c28:	7043      	strb	r3, [r0, #1]
    1c2a:	f7ff fec3 	bl	19b4 <rt_put_rdy_first>
    1c2e:	f000 f9fd 	bl	202c <rt_chk_robin>
    1c32:	4a08      	ldr	r2, [pc, #32]	; (1c54 <rt_systick+0x34>)
    1c34:	6813      	ldr	r3, [r2, #0]
    1c36:	3301      	adds	r3, #1
    1c38:	6013      	str	r3, [r2, #0]
    1c3a:	f7ff fee9 	bl	1a10 <rt_dec_dly>
    1c3e:	f000 fce1 	bl	2604 <sysTimerTick>
    1c42:	4805      	ldr	r0, [pc, #20]	; (1c58 <rt_systick+0x38>)
    1c44:	f7ff fea4 	bl	1990 <rt_get_first>
    1c48:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    1c4c:	f000 bd52 	b.w	26f4 <rt_switch_req>
    1c50:	100025cc 	.word	0x100025cc
    1c54:	10002614 	.word	0x10002614
    1c58:	10002580 	.word	0x10002580

00001c5c <rt_stk_check>:
    1c5c:	4b06      	ldr	r3, [pc, #24]	; (1c78 <rt_stk_check+0x1c>)
    1c5e:	681a      	ldr	r2, [r3, #0]
    1c60:	6b13      	ldr	r3, [r2, #48]	; 0x30
    1c62:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
    1c64:	4293      	cmp	r3, r2
    1c66:	d803      	bhi.n	1c70 <rt_stk_check+0x14>
    1c68:	681a      	ldr	r2, [r3, #0]
    1c6a:	4b04      	ldr	r3, [pc, #16]	; (1c7c <rt_stk_check+0x20>)
    1c6c:	429a      	cmp	r2, r3
    1c6e:	d002      	beq.n	1c76 <rt_stk_check+0x1a>
    1c70:	2001      	movs	r0, #1
    1c72:	f7ff be27 	b.w	18c4 <os_error>
    1c76:	4770      	bx	lr
    1c78:	100025cc 	.word	0x100025cc
    1c7c:	e25a2ea5 	.word	0xe25a2ea5

00001c80 <rt_init_stack>:
    1c80:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c82:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
    1c86:	f04f 0e00 	mov.w	lr, #0
    1c8a:	6a83      	ldr	r3, [r0, #40]	; 0x28
    1c8c:	6b05      	ldr	r5, [r0, #48]	; 0x30
    1c8e:	089b      	lsrs	r3, r3, #2
    1c90:	bf02      	ittt	eq
    1c92:	4b1e      	ldreq	r3, [pc, #120]	; (1d0c <rt_init_stack+0x8c>)
    1c94:	881b      	ldrheq	r3, [r3, #0]
    1c96:	089b      	lsreq	r3, r3, #2
    1c98:	eb05 0283 	add.w	r2, r5, r3, lsl #2
    1c9c:	0754      	lsls	r4, r2, #29
    1c9e:	bf48      	it	mi
    1ca0:	3a04      	submi	r2, #4
    1ca2:	e902 0042 	stmdb	r2, {r1, r6}
    1ca6:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
    1caa:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
    1cae:	f1a2 070c 	sub.w	r7, r2, #12
    1cb2:	f846 ef04 	str.w	lr, [r6, #4]!
    1cb6:	42be      	cmp	r6, r7
    1cb8:	d1fb      	bne.n	1cb2 <rt_init_stack+0x32>
    1cba:	69c6      	ldr	r6, [r0, #28]
    1cbc:	f842 6c20 	str.w	r6, [r2, #-32]
    1cc0:	6341      	str	r1, [r0, #52]	; 0x34
    1cc2:	4912      	ldr	r1, [pc, #72]	; (1d0c <rt_init_stack+0x8c>)
    1cc4:	62c4      	str	r4, [r0, #44]	; 0x2c
    1cc6:	6809      	ldr	r1, [r1, #0]
    1cc8:	00c9      	lsls	r1, r1, #3
    1cca:	d517      	bpl.n	1cfc <rt_init_stack+0x7c>
    1ccc:	2b11      	cmp	r3, #17
    1cce:	d915      	bls.n	1cfc <rt_init_stack+0x7c>
    1cd0:	f06f 0107 	mvn.w	r1, #7
    1cd4:	3b10      	subs	r3, #16
    1cd6:	085b      	lsrs	r3, r3, #1
    1cd8:	434b      	muls	r3, r1
    1cda:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
    1cde:	440a      	add	r2, r1
    1ce0:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
    1ce4:	4621      	mov	r1, r4
    1ce6:	4291      	cmp	r1, r2
    1ce8:	d10b      	bne.n	1d02 <rt_init_stack+0x82>
    1cea:	3308      	adds	r3, #8
    1cec:	441c      	add	r4, r3
    1cee:	1f23      	subs	r3, r4, #4
    1cf0:	429d      	cmp	r5, r3
    1cf2:	bf3c      	itt	cc
    1cf4:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
    1cf8:	f844 3c04 	strcc.w	r3, [r4, #-4]
    1cfc:	4b04      	ldr	r3, [pc, #16]	; (1d10 <rt_init_stack+0x90>)
    1cfe:	602b      	str	r3, [r5, #0]
    1d00:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1d02:	f841 0c04 	str.w	r0, [r1, #-4]
    1d06:	f841 0d08 	str.w	r0, [r1, #-8]!
    1d0a:	e7ec      	b.n	1ce6 <rt_init_stack+0x66>
    1d0c:	00004ee8 	.word	0x00004ee8
    1d10:	e25a2ea5 	.word	0xe25a2ea5

00001d14 <rt_ret_val>:
    1d14:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    1d16:	6219      	str	r1, [r3, #32]
    1d18:	4770      	bx	lr

00001d1a <rt_ret_val2>:
    1d1a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    1d1c:	6219      	str	r1, [r3, #32]
    1d1e:	625a      	str	r2, [r3, #36]	; 0x24
    1d20:	4770      	bx	lr

00001d22 <_init_box>:
    1d22:	2a00      	cmp	r2, #0
    1d24:	bfbb      	ittet	lt
    1d26:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
    1d2a:	3207      	addlt	r2, #7
    1d2c:	3203      	addge	r2, #3
    1d2e:	f022 0207 	biclt.w	r2, r2, #7
    1d32:	bfa8      	it	ge
    1d34:	f022 0203 	bicge.w	r2, r2, #3
    1d38:	b510      	push	{r4, lr}
    1d3a:	bfb4      	ite	lt
    1d3c:	2310      	movlt	r3, #16
    1d3e:	230c      	movge	r3, #12
    1d40:	b192      	cbz	r2, 1d68 <_init_box+0x46>
    1d42:	18d4      	adds	r4, r2, r3
    1d44:	428c      	cmp	r4, r1
    1d46:	d80f      	bhi.n	1d68 <_init_box+0x46>
    1d48:	4401      	add	r1, r0
    1d4a:	4403      	add	r3, r0
    1d4c:	4254      	negs	r4, r2
    1d4e:	6041      	str	r1, [r0, #4]
    1d50:	6003      	str	r3, [r0, #0]
    1d52:	6082      	str	r2, [r0, #8]
    1d54:	4421      	add	r1, r4
    1d56:	1898      	adds	r0, r3, r2
    1d58:	4281      	cmp	r1, r0
    1d5a:	d302      	bcc.n	1d62 <_init_box+0x40>
    1d5c:	5100      	str	r0, [r0, r4]
    1d5e:	4603      	mov	r3, r0
    1d60:	e7f9      	b.n	1d56 <_init_box+0x34>
    1d62:	2000      	movs	r0, #0
    1d64:	6018      	str	r0, [r3, #0]
    1d66:	bd10      	pop	{r4, pc}
    1d68:	2001      	movs	r0, #1
    1d6a:	bd10      	pop	{r4, pc}

00001d6c <rt_alloc_box>:
    1d6c:	f3ef 8310 	mrs	r3, PRIMASK
    1d70:	b672      	cpsid	i
    1d72:	6802      	ldr	r2, [r0, #0]
    1d74:	f003 0301 	and.w	r3, r3, #1
    1d78:	b10a      	cbz	r2, 1d7e <rt_alloc_box+0x12>
    1d7a:	6811      	ldr	r1, [r2, #0]
    1d7c:	6001      	str	r1, [r0, #0]
    1d7e:	b903      	cbnz	r3, 1d82 <rt_alloc_box+0x16>
    1d80:	b662      	cpsie	i
    1d82:	4610      	mov	r0, r2
    1d84:	4770      	bx	lr

00001d86 <rt_free_box>:
    1d86:	4281      	cmp	r1, r0
    1d88:	d30d      	bcc.n	1da6 <rt_free_box+0x20>
    1d8a:	6843      	ldr	r3, [r0, #4]
    1d8c:	4299      	cmp	r1, r3
    1d8e:	d20a      	bcs.n	1da6 <rt_free_box+0x20>
    1d90:	f3ef 8310 	mrs	r3, PRIMASK
    1d94:	b672      	cpsid	i
    1d96:	6802      	ldr	r2, [r0, #0]
    1d98:	600a      	str	r2, [r1, #0]
    1d9a:	6001      	str	r1, [r0, #0]
    1d9c:	f013 0001 	ands.w	r0, r3, #1
    1da0:	d103      	bne.n	1daa <rt_free_box+0x24>
    1da2:	b662      	cpsie	i
    1da4:	4770      	bx	lr
    1da6:	2001      	movs	r0, #1
    1da8:	4770      	bx	lr
    1daa:	2000      	movs	r0, #0
    1dac:	4770      	bx	lr

00001dae <rt_mbx_init>:
    1dae:	2301      	movs	r3, #1
    1db0:	7003      	strb	r3, [r0, #0]
    1db2:	2300      	movs	r3, #0
    1db4:	3910      	subs	r1, #16
    1db6:	0889      	lsrs	r1, r1, #2
    1db8:	7043      	strb	r3, [r0, #1]
    1dba:	7083      	strb	r3, [r0, #2]
    1dbc:	6043      	str	r3, [r0, #4]
    1dbe:	8103      	strh	r3, [r0, #8]
    1dc0:	8143      	strh	r3, [r0, #10]
    1dc2:	8183      	strh	r3, [r0, #12]
    1dc4:	81c1      	strh	r1, [r0, #14]
    1dc6:	4770      	bx	lr

00001dc8 <rt_mbx_wait>:
    1dc8:	b570      	push	{r4, r5, r6, lr}
    1dca:	8985      	ldrh	r5, [r0, #12]
    1dcc:	4604      	mov	r4, r0
    1dce:	4616      	mov	r6, r2
    1dd0:	2d00      	cmp	r5, #0
    1dd2:	d038      	beq.n	1e46 <rt_mbx_wait+0x7e>
    1dd4:	8943      	ldrh	r3, [r0, #10]
    1dd6:	1d1a      	adds	r2, r3, #4
    1dd8:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
    1ddc:	3301      	adds	r3, #1
    1dde:	600a      	str	r2, [r1, #0]
    1de0:	89c2      	ldrh	r2, [r0, #14]
    1de2:	b29b      	uxth	r3, r3
    1de4:	429a      	cmp	r2, r3
    1de6:	8143      	strh	r3, [r0, #10]
    1de8:	bf04      	itt	eq
    1dea:	2300      	moveq	r3, #0
    1dec:	8143      	strheq	r3, [r0, #10]
    1dee:	6843      	ldr	r3, [r0, #4]
    1df0:	b1f3      	cbz	r3, 1e30 <rt_mbx_wait+0x68>
    1df2:	7843      	ldrb	r3, [r0, #1]
    1df4:	2b02      	cmp	r3, #2
    1df6:	d11b      	bne.n	1e30 <rt_mbx_wait+0x68>
    1df8:	f7ff fdca 	bl	1990 <rt_get_first>
    1dfc:	4605      	mov	r5, r0
    1dfe:	2100      	movs	r1, #0
    1e00:	f7ff ff88 	bl	1d14 <rt_ret_val>
    1e04:	8923      	ldrh	r3, [r4, #8]
    1e06:	69e9      	ldr	r1, [r5, #28]
    1e08:	1d1a      	adds	r2, r3, #4
    1e0a:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
    1e0e:	3301      	adds	r3, #1
    1e10:	89e2      	ldrh	r2, [r4, #14]
    1e12:	b29b      	uxth	r3, r3
    1e14:	429a      	cmp	r2, r3
    1e16:	8123      	strh	r3, [r4, #8]
    1e18:	bf08      	it	eq
    1e1a:	2300      	moveq	r3, #0
    1e1c:	4628      	mov	r0, r5
    1e1e:	bf08      	it	eq
    1e20:	8123      	strheq	r3, [r4, #8]
    1e22:	f7ff fe5b 	bl	1adc <rt_rmv_dly>
    1e26:	4628      	mov	r0, r5
    1e28:	f000 fc7e 	bl	2728 <rt_dispatch>
    1e2c:	2000      	movs	r0, #0
    1e2e:	bd70      	pop	{r4, r5, r6, pc}
    1e30:	f3ef 8010 	mrs	r0, PRIMASK
    1e34:	f3ef 8310 	mrs	r3, PRIMASK
    1e38:	b672      	cpsid	i
    1e3a:	3d01      	subs	r5, #1
    1e3c:	81a5      	strh	r5, [r4, #12]
    1e3e:	2800      	cmp	r0, #0
    1e40:	d1f4      	bne.n	1e2c <rt_mbx_wait+0x64>
    1e42:	b662      	cpsie	i
    1e44:	bd70      	pop	{r4, r5, r6, pc}
    1e46:	b14a      	cbz	r2, 1e5c <rt_mbx_wait+0x94>
    1e48:	6842      	ldr	r2, [r0, #4]
    1e4a:	4b09      	ldr	r3, [pc, #36]	; (1e70 <rt_mbx_wait+0xa8>)
    1e4c:	b142      	cbz	r2, 1e60 <rt_mbx_wait+0x98>
    1e4e:	6819      	ldr	r1, [r3, #0]
    1e50:	f7ff fd86 	bl	1960 <rt_put_prio>
    1e54:	2108      	movs	r1, #8
    1e56:	4630      	mov	r0, r6
    1e58:	f000 fc88 	bl	276c <rt_block>
    1e5c:	2001      	movs	r0, #1
    1e5e:	bd70      	pop	{r4, r5, r6, pc}
    1e60:	681b      	ldr	r3, [r3, #0]
    1e62:	6043      	str	r3, [r0, #4]
    1e64:	605a      	str	r2, [r3, #4]
    1e66:	6098      	str	r0, [r3, #8]
    1e68:	2301      	movs	r3, #1
    1e6a:	7043      	strb	r3, [r0, #1]
    1e6c:	e7f2      	b.n	1e54 <rt_mbx_wait+0x8c>
    1e6e:	bf00      	nop
    1e70:	100025cc 	.word	0x100025cc

00001e74 <rt_mbx_check>:
    1e74:	89c2      	ldrh	r2, [r0, #14]
    1e76:	8980      	ldrh	r0, [r0, #12]
    1e78:	1a10      	subs	r0, r2, r0
    1e7a:	4770      	bx	lr

00001e7c <isr_mbx_send>:
    1e7c:	b508      	push	{r3, lr}
    1e7e:	f7ff fe41 	bl	1b04 <rt_psq_enq>
    1e82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    1e86:	f7ff be63 	b.w	1b50 <rt_psh_req>

00001e8a <isr_mbx_receive>:
    1e8a:	8983      	ldrh	r3, [r0, #12]
    1e8c:	b510      	push	{r4, lr}
    1e8e:	4604      	mov	r4, r0
    1e90:	b30b      	cbz	r3, 1ed6 <isr_mbx_receive+0x4c>
    1e92:	8943      	ldrh	r3, [r0, #10]
    1e94:	3304      	adds	r3, #4
    1e96:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
    1e9a:	600b      	str	r3, [r1, #0]
    1e9c:	7843      	ldrb	r3, [r0, #1]
    1e9e:	2b02      	cmp	r3, #2
    1ea0:	d104      	bne.n	1eac <isr_mbx_receive+0x22>
    1ea2:	2100      	movs	r1, #0
    1ea4:	f7ff fe2e 	bl	1b04 <rt_psq_enq>
    1ea8:	f7ff fe52 	bl	1b50 <rt_psh_req>
    1eac:	f3ef 8310 	mrs	r3, PRIMASK
    1eb0:	f3ef 8210 	mrs	r2, PRIMASK
    1eb4:	b672      	cpsid	i
    1eb6:	89a2      	ldrh	r2, [r4, #12]
    1eb8:	3a01      	subs	r2, #1
    1eba:	81a2      	strh	r2, [r4, #12]
    1ebc:	b903      	cbnz	r3, 1ec0 <isr_mbx_receive+0x36>
    1ebe:	b662      	cpsie	i
    1ec0:	8963      	ldrh	r3, [r4, #10]
    1ec2:	89e2      	ldrh	r2, [r4, #14]
    1ec4:	3301      	adds	r3, #1
    1ec6:	b29b      	uxth	r3, r3
    1ec8:	429a      	cmp	r2, r3
    1eca:	8163      	strh	r3, [r4, #10]
    1ecc:	d101      	bne.n	1ed2 <isr_mbx_receive+0x48>
    1ece:	2300      	movs	r3, #0
    1ed0:	8163      	strh	r3, [r4, #10]
    1ed2:	2004      	movs	r0, #4
    1ed4:	bd10      	pop	{r4, pc}
    1ed6:	4618      	mov	r0, r3
    1ed8:	bd10      	pop	{r4, pc}
	...

00001edc <rt_mbx_psh>:
    1edc:	6843      	ldr	r3, [r0, #4]
    1ede:	b570      	push	{r4, r5, r6, lr}
    1ee0:	4604      	mov	r4, r0
    1ee2:	460e      	mov	r6, r1
    1ee4:	2b00      	cmp	r3, #0
    1ee6:	d04b      	beq.n	1f80 <rt_mbx_psh+0xa4>
    1ee8:	7845      	ldrb	r5, [r0, #1]
    1eea:	2d02      	cmp	r5, #2
    1eec:	d020      	beq.n	1f30 <rt_mbx_psh+0x54>
    1eee:	2d03      	cmp	r5, #3
    1ef0:	d00a      	beq.n	1f08 <rt_mbx_psh+0x2c>
    1ef2:	2d01      	cmp	r5, #1
    1ef4:	d161      	bne.n	1fba <rt_mbx_psh+0xde>
    1ef6:	f7ff fd4b 	bl	1990 <rt_get_first>
    1efa:	4604      	mov	r4, r0
    1efc:	4632      	mov	r2, r6
    1efe:	2110      	movs	r1, #16
    1f00:	f7ff ff0b 	bl	1d1a <rt_ret_val2>
    1f04:	7065      	strb	r5, [r4, #1]
    1f06:	e00e      	b.n	1f26 <rt_mbx_psh+0x4a>
    1f08:	4608      	mov	r0, r1
    1f0a:	f7ff ff2f 	bl	1d6c <rt_alloc_box>
    1f0e:	4605      	mov	r5, r0
    1f10:	2800      	cmp	r0, #0
    1f12:	d052      	beq.n	1fba <rt_mbx_psh+0xde>
    1f14:	4620      	mov	r0, r4
    1f16:	f7ff fd3b 	bl	1990 <rt_get_first>
    1f1a:	4629      	mov	r1, r5
    1f1c:	4604      	mov	r4, r0
    1f1e:	f7ff fef9 	bl	1d14 <rt_ret_val>
    1f22:	2301      	movs	r3, #1
    1f24:	7063      	strb	r3, [r4, #1]
    1f26:	4620      	mov	r0, r4
    1f28:	f7ff fdd8 	bl	1adc <rt_rmv_dly>
    1f2c:	4621      	mov	r1, r4
    1f2e:	e022      	b.n	1f76 <rt_mbx_psh+0x9a>
    1f30:	f7ff fd2e 	bl	1990 <rt_get_first>
    1f34:	4605      	mov	r5, r0
    1f36:	2100      	movs	r1, #0
    1f38:	f7ff feec 	bl	1d14 <rt_ret_val>
    1f3c:	8923      	ldrh	r3, [r4, #8]
    1f3e:	69e9      	ldr	r1, [r5, #28]
    1f40:	1d1a      	adds	r2, r3, #4
    1f42:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
    1f46:	f3ef 8210 	mrs	r2, PRIMASK
    1f4a:	f3ef 8110 	mrs	r1, PRIMASK
    1f4e:	b672      	cpsid	i
    1f50:	89a1      	ldrh	r1, [r4, #12]
    1f52:	3101      	adds	r1, #1
    1f54:	81a1      	strh	r1, [r4, #12]
    1f56:	b902      	cbnz	r2, 1f5a <rt_mbx_psh+0x7e>
    1f58:	b662      	cpsie	i
    1f5a:	89e2      	ldrh	r2, [r4, #14]
    1f5c:	3301      	adds	r3, #1
    1f5e:	b29b      	uxth	r3, r3
    1f60:	429a      	cmp	r2, r3
    1f62:	8123      	strh	r3, [r4, #8]
    1f64:	bf04      	itt	eq
    1f66:	2300      	moveq	r3, #0
    1f68:	8123      	strheq	r3, [r4, #8]
    1f6a:	2301      	movs	r3, #1
    1f6c:	4628      	mov	r0, r5
    1f6e:	706b      	strb	r3, [r5, #1]
    1f70:	f7ff fdb4 	bl	1adc <rt_rmv_dly>
    1f74:	4629      	mov	r1, r5
    1f76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1f7a:	4810      	ldr	r0, [pc, #64]	; (1fbc <rt_mbx_psh+0xe0>)
    1f7c:	f7ff bcf0 	b.w	1960 <rt_put_prio>
    1f80:	8980      	ldrh	r0, [r0, #12]
    1f82:	89e1      	ldrh	r1, [r4, #14]
    1f84:	4288      	cmp	r0, r1
    1f86:	d213      	bcs.n	1fb0 <rt_mbx_psh+0xd4>
    1f88:	8923      	ldrh	r3, [r4, #8]
    1f8a:	1d1a      	adds	r2, r3, #4
    1f8c:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
    1f90:	f3ef 8210 	mrs	r2, PRIMASK
    1f94:	f3ef 8510 	mrs	r5, PRIMASK
    1f98:	b672      	cpsid	i
    1f9a:	3001      	adds	r0, #1
    1f9c:	81a0      	strh	r0, [r4, #12]
    1f9e:	b902      	cbnz	r2, 1fa2 <rt_mbx_psh+0xc6>
    1fa0:	b662      	cpsie	i
    1fa2:	3301      	adds	r3, #1
    1fa4:	b29b      	uxth	r3, r3
    1fa6:	4299      	cmp	r1, r3
    1fa8:	bf08      	it	eq
    1faa:	2300      	moveq	r3, #0
    1fac:	8123      	strh	r3, [r4, #8]
    1fae:	bd70      	pop	{r4, r5, r6, pc}
    1fb0:	2003      	movs	r0, #3
    1fb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1fb6:	f7ff bc85 	b.w	18c4 <os_error>
    1fba:	bd70      	pop	{r4, r5, r6, pc}
    1fbc:	10002580 	.word	0x10002580

00001fc0 <rt_evt_psh>:
    1fc0:	b510      	push	{r4, lr}
    1fc2:	8b03      	ldrh	r3, [r0, #24]
    1fc4:	7842      	ldrb	r2, [r0, #1]
    1fc6:	4319      	orrs	r1, r3
    1fc8:	2a06      	cmp	r2, #6
    1fca:	4604      	mov	r4, r0
    1fcc:	8301      	strh	r1, [r0, #24]
    1fce:	8b43      	ldrh	r3, [r0, #26]
    1fd0:	d115      	bne.n	1ffe <rt_evt_psh+0x3e>
    1fd2:	ea33 0201 	bics.w	r2, r3, r1
    1fd6:	d119      	bne.n	200c <rt_evt_psh+0x4c>
    1fd8:	ea21 0103 	bic.w	r1, r1, r3
    1fdc:	8321      	strh	r1, [r4, #24]
    1fde:	4620      	mov	r0, r4
    1fe0:	f7ff fd7c 	bl	1adc <rt_rmv_dly>
    1fe4:	2301      	movs	r3, #1
    1fe6:	4620      	mov	r0, r4
    1fe8:	7063      	strb	r3, [r4, #1]
    1fea:	8b62      	ldrh	r2, [r4, #26]
    1fec:	2108      	movs	r1, #8
    1fee:	f7ff fe94 	bl	1d1a <rt_ret_val2>
    1ff2:	4621      	mov	r1, r4
    1ff4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    1ff8:	4805      	ldr	r0, [pc, #20]	; (2010 <rt_evt_psh+0x50>)
    1ffa:	f7ff bcb1 	b.w	1960 <rt_put_prio>
    1ffe:	2a05      	cmp	r2, #5
    2000:	d104      	bne.n	200c <rt_evt_psh+0x4c>
    2002:	ea11 0203 	ands.w	r2, r1, r3
    2006:	d001      	beq.n	200c <rt_evt_psh+0x4c>
    2008:	8342      	strh	r2, [r0, #26]
    200a:	e7e5      	b.n	1fd8 <rt_evt_psh+0x18>
    200c:	bd10      	pop	{r4, pc}
    200e:	bf00      	nop
    2010:	10002580 	.word	0x10002580

00002014 <rt_init_robin>:
    2014:	2200      	movs	r2, #0
    2016:	4b03      	ldr	r3, [pc, #12]	; (2024 <rt_init_robin+0x10>)
    2018:	601a      	str	r2, [r3, #0]
    201a:	4a03      	ldr	r2, [pc, #12]	; (2028 <rt_init_robin+0x14>)
    201c:	6812      	ldr	r2, [r2, #0]
    201e:	80da      	strh	r2, [r3, #6]
    2020:	4770      	bx	lr
    2022:	bf00      	nop
    2024:	100025b8 	.word	0x100025b8
    2028:	00004ee4 	.word	0x00004ee4

0000202c <rt_chk_robin>:
    202c:	b508      	push	{r3, lr}
    202e:	4b0e      	ldr	r3, [pc, #56]	; (2068 <rt_chk_robin+0x3c>)
    2030:	685a      	ldr	r2, [r3, #4]
    2032:	4b0e      	ldr	r3, [pc, #56]	; (206c <rt_chk_robin+0x40>)
    2034:	6819      	ldr	r1, [r3, #0]
    2036:	4291      	cmp	r1, r2
    2038:	490d      	ldr	r1, [pc, #52]	; (2070 <rt_chk_robin+0x44>)
    203a:	d005      	beq.n	2048 <rt_chk_robin+0x1c>
    203c:	601a      	str	r2, [r3, #0]
    203e:	88da      	ldrh	r2, [r3, #6]
    2040:	6808      	ldr	r0, [r1, #0]
    2042:	3a01      	subs	r2, #1
    2044:	4402      	add	r2, r0
    2046:	809a      	strh	r2, [r3, #4]
    2048:	8898      	ldrh	r0, [r3, #4]
    204a:	880a      	ldrh	r2, [r1, #0]
    204c:	4290      	cmp	r0, r2
    204e:	d10a      	bne.n	2066 <rt_chk_robin+0x3a>
    2050:	2200      	movs	r2, #0
    2052:	4805      	ldr	r0, [pc, #20]	; (2068 <rt_chk_robin+0x3c>)
    2054:	601a      	str	r2, [r3, #0]
    2056:	f7ff fc9b 	bl	1990 <rt_get_first>
    205a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    205e:	4601      	mov	r1, r0
    2060:	4801      	ldr	r0, [pc, #4]	; (2068 <rt_chk_robin+0x3c>)
    2062:	f7ff bc7d 	b.w	1960 <rt_put_prio>
    2066:	bd08      	pop	{r3, pc}
    2068:	10002580 	.word	0x10002580
    206c:	100025b8 	.word	0x100025b8
    2070:	10002614 	.word	0x10002614

00002074 <rt_timer_insert>:
    2074:	b530      	push	{r4, r5, lr}
    2076:	2400      	movs	r4, #0
    2078:	4a0a      	ldr	r2, [pc, #40]	; (20a4 <rt_timer_insert+0x30>)
    207a:	6813      	ldr	r3, [r2, #0]
    207c:	b943      	cbnz	r3, 2090 <rt_timer_insert+0x1c>
    207e:	6003      	str	r3, [r0, #0]
    2080:	6081      	str	r1, [r0, #8]
    2082:	b113      	cbz	r3, 208a <rt_timer_insert+0x16>
    2084:	689d      	ldr	r5, [r3, #8]
    2086:	1a69      	subs	r1, r5, r1
    2088:	6099      	str	r1, [r3, #8]
    208a:	b144      	cbz	r4, 209e <rt_timer_insert+0x2a>
    208c:	6020      	str	r0, [r4, #0]
    208e:	bd30      	pop	{r4, r5, pc}
    2090:	689d      	ldr	r5, [r3, #8]
    2092:	42a9      	cmp	r1, r5
    2094:	d3f3      	bcc.n	207e <rt_timer_insert+0xa>
    2096:	461c      	mov	r4, r3
    2098:	1b49      	subs	r1, r1, r5
    209a:	681b      	ldr	r3, [r3, #0]
    209c:	e7ee      	b.n	207c <rt_timer_insert+0x8>
    209e:	6010      	str	r0, [r2, #0]
    20a0:	bd30      	pop	{r4, r5, pc}
    20a2:	bf00      	nop
    20a4:	100025c8 	.word	0x100025c8

000020a8 <rt_ms2tick>:
    20a8:	b1c0      	cbz	r0, 20dc <rt_ms2tick+0x34>
    20aa:	1c43      	adds	r3, r0, #1
    20ac:	d011      	beq.n	20d2 <rt_ms2tick+0x2a>
    20ae:	4b0c      	ldr	r3, [pc, #48]	; (20e0 <rt_ms2tick+0x38>)
    20b0:	4298      	cmp	r0, r3
    20b2:	d811      	bhi.n	20d8 <rt_ms2tick+0x30>
    20b4:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
    20b8:	4b0a      	ldr	r3, [pc, #40]	; (20e4 <rt_ms2tick+0x3c>)
    20ba:	681b      	ldr	r3, [r3, #0]
    20bc:	1e5a      	subs	r2, r3, #1
    20be:	fb01 2000 	mla	r0, r1, r0, r2
    20c2:	fbb0 f3f3 	udiv	r3, r0, r3
    20c6:	f64f 70fe 	movw	r0, #65534	; 0xfffe
    20ca:	4283      	cmp	r3, r0
    20cc:	d806      	bhi.n	20dc <rt_ms2tick+0x34>
    20ce:	b298      	uxth	r0, r3
    20d0:	4770      	bx	lr
    20d2:	f64f 70ff 	movw	r0, #65535	; 0xffff
    20d6:	4770      	bx	lr
    20d8:	f64f 70fe 	movw	r0, #65534	; 0xfffe
    20dc:	4770      	bx	lr
    20de:	bf00      	nop
    20e0:	003d0900 	.word	0x003d0900
    20e4:	00004e9c 	.word	0x00004e9c

000020e8 <rt_tid2ptcb>:
    20e8:	b138      	cbz	r0, 20fa <rt_tid2ptcb+0x12>
    20ea:	0783      	lsls	r3, r0, #30
    20ec:	d104      	bne.n	20f8 <rt_tid2ptcb+0x10>
    20ee:	7803      	ldrb	r3, [r0, #0]
    20f0:	2b00      	cmp	r3, #0
    20f2:	bf18      	it	ne
    20f4:	2000      	movne	r0, #0
    20f6:	4770      	bx	lr
    20f8:	2000      	movs	r0, #0
    20fa:	4770      	bx	lr

000020fc <svcKernelStart>:
    20fc:	b5b0      	push	{r4, r5, r7, lr}
    20fe:	4d0e      	ldr	r5, [pc, #56]	; (2138 <svcKernelStart+0x3c>)
    2100:	af00      	add	r7, sp, #0
    2102:	7828      	ldrb	r0, [r5, #0]
    2104:	b9a8      	cbnz	r0, 2132 <svcKernelStart+0x36>
    2106:	4c0d      	ldr	r4, [pc, #52]	; (213c <svcKernelStart+0x40>)
    2108:	6823      	ldr	r3, [r4, #0]
    210a:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
    210e:	f000 fb4f 	bl	27b0 <rt_tsk_prio>
    2112:	6823      	ldr	r3, [r4, #0]
    2114:	78da      	ldrb	r2, [r3, #3]
    2116:	2aff      	cmp	r2, #255	; 0xff
    2118:	d103      	bne.n	2122 <svcKernelStart+0x26>
    211a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    211c:	3220      	adds	r2, #32
    211e:	f382 8809 	msr	PSP, r2
    2122:	6862      	ldr	r2, [r4, #4]
    2124:	b90a      	cbnz	r2, 212a <svcKernelStart+0x2e>
    2126:	e884 000c 	stmia.w	r4, {r2, r3}
    212a:	f000 fcf9 	bl	2b20 <rt_sys_start>
    212e:	2301      	movs	r3, #1
    2130:	702b      	strb	r3, [r5, #0]
    2132:	2000      	movs	r0, #0
    2134:	bdb0      	pop	{r4, r5, r7, pc}
    2136:	bf00      	nop
    2138:	100025c5 	.word	0x100025c5
    213c:	100025cc 	.word	0x100025cc

00002140 <svcKernelRunning>:
    2140:	4b01      	ldr	r3, [pc, #4]	; (2148 <svcKernelRunning+0x8>)
    2142:	7818      	ldrb	r0, [r3, #0]
    2144:	4770      	bx	lr
    2146:	bf00      	nop
    2148:	100025c5 	.word	0x100025c5

0000214c <osKernelRunning>:
    214c:	b510      	push	{r4, lr}
    214e:	f3ef 8410 	mrs	r4, PRIMASK
    2152:	b934      	cbnz	r4, 2162 <osKernelRunning+0x16>
    2154:	f3ef 8405 	mrs	r4, IPSR
    2158:	b91c      	cbnz	r4, 2162 <osKernelRunning+0x16>
    215a:	f3ef 8414 	mrs	r4, CONTROL
    215e:	07e4      	lsls	r4, r4, #31
    2160:	d402      	bmi.n	2168 <osKernelRunning+0x1c>
    2162:	4b03      	ldr	r3, [pc, #12]	; (2170 <osKernelRunning+0x24>)
    2164:	7818      	ldrb	r0, [r3, #0]
    2166:	bd10      	pop	{r4, pc}
    2168:	f8df c008 	ldr.w	r12, [pc, #8]	; 2174 <osKernelRunning+0x28>
    216c:	df00      	svc	0
    216e:	bd10      	pop	{r4, pc}
    2170:	100025c5 	.word	0x100025c5
    2174:	00002141 	.word	0x00002141

00002178 <osKernelStart>:
    2178:	b590      	push	{r4, r7, lr}
    217a:	b089      	sub	sp, #36	; 0x24
    217c:	af00      	add	r7, sp, #0
    217e:	f3ef 8310 	mrs	r3, PRIMASK
    2182:	2b00      	cmp	r3, #0
    2184:	d137      	bne.n	21f6 <osKernelStart+0x7e>
    2186:	f3ef 8305 	mrs	r3, IPSR
    218a:	2b00      	cmp	r3, #0
    218c:	d133      	bne.n	21f6 <osKernelStart+0x7e>
    218e:	f7ff ffdd 	bl	214c <osKernelRunning>
    2192:	b928      	cbnz	r0, 21a0 <osKernelStart+0x28>
    2194:	4c19      	ldr	r4, [pc, #100]	; (21fc <osKernelStart+0x84>)
    2196:	6824      	ldr	r4, [r4, #0]
    2198:	b114      	cbz	r4, 21a0 <osKernelStart+0x28>
    219a:	6864      	ldr	r4, [r4, #4]
    219c:	b104      	cbz	r4, 21a0 <osKernelStart+0x28>
    219e:	47a0      	blx	r4
    21a0:	f3ef 8414 	mrs	r4, CONTROL
    21a4:	f004 0403 	and.w	r4, r4, #3
    21a8:	2c02      	cmp	r4, #2
    21aa:	d018      	beq.n	21de <osKernelStart+0x66>
    21ac:	2c03      	cmp	r4, #3
    21ae:	d01c      	beq.n	21ea <osKernelStart+0x72>
    21b0:	2c01      	cmp	r4, #1
    21b2:	d01e      	beq.n	21f2 <osKernelStart+0x7a>
    21b4:	f107 0420 	add.w	r4, r7, #32
    21b8:	f384 8809 	msr	PSP, r4
    21bc:	4c10      	ldr	r4, [pc, #64]	; (2200 <osKernelStart+0x88>)
    21be:	7824      	ldrb	r4, [r4, #0]
    21c0:	07e4      	lsls	r4, r4, #31
    21c2:	d510      	bpl.n	21e6 <osKernelStart+0x6e>
    21c4:	2402      	movs	r4, #2
    21c6:	f384 8814 	msr	CONTROL, r4
    21ca:	f3bf 8f4f 	dsb	sy
    21ce:	f3bf 8f6f 	isb	sy
    21d2:	f8df c030 	ldr.w	r12, [pc, #48]	; 2204 <osKernelStart+0x8c>
    21d6:	df00      	svc	0
    21d8:	3724      	adds	r7, #36	; 0x24
    21da:	46bd      	mov	sp, r7
    21dc:	bd90      	pop	{r4, r7, pc}
    21de:	4c08      	ldr	r4, [pc, #32]	; (2200 <osKernelStart+0x88>)
    21e0:	7824      	ldrb	r4, [r4, #0]
    21e2:	07e4      	lsls	r4, r4, #31
    21e4:	d4f5      	bmi.n	21d2 <osKernelStart+0x5a>
    21e6:	2403      	movs	r4, #3
    21e8:	e7ed      	b.n	21c6 <osKernelStart+0x4e>
    21ea:	4c05      	ldr	r4, [pc, #20]	; (2200 <osKernelStart+0x88>)
    21ec:	7824      	ldrb	r4, [r4, #0]
    21ee:	07e4      	lsls	r4, r4, #31
    21f0:	d5ef      	bpl.n	21d2 <osKernelStart+0x5a>
    21f2:	20ff      	movs	r0, #255	; 0xff
    21f4:	e7f0      	b.n	21d8 <osKernelStart+0x60>
    21f6:	2082      	movs	r0, #130	; 0x82
    21f8:	e7ee      	b.n	21d8 <osKernelStart+0x60>
    21fa:	bf00      	nop
    21fc:	100025b4 	.word	0x100025b4
    2200:	00004eca 	.word	0x00004eca
    2204:	000020fd 	.word	0x000020fd

00002208 <svcThreadCreate>:
    2208:	b570      	push	{r4, r5, r6, lr}
    220a:	460b      	mov	r3, r1
    220c:	4616      	mov	r6, r2
    220e:	4602      	mov	r2, r0
    2210:	b910      	cbnz	r0, 2218 <svcThreadCreate+0x10>
    2212:	2400      	movs	r4, #0
    2214:	4620      	mov	r0, r4
    2216:	bd70      	pop	{r4, r5, r6, pc}
    2218:	6800      	ldr	r0, [r0, #0]
    221a:	2800      	cmp	r0, #0
    221c:	d0f9      	beq.n	2212 <svcThreadCreate+0xa>
    221e:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
    2222:	1ce5      	adds	r5, r4, #3
    2224:	b2ad      	uxth	r5, r5
    2226:	2d06      	cmp	r5, #6
    2228:	d8f3      	bhi.n	2212 <svcThreadCreate+0xa>
    222a:	68d1      	ldr	r1, [r2, #12]
    222c:	b1c1      	cbz	r1, 2260 <svcThreadCreate+0x58>
    222e:	6912      	ldr	r2, [r2, #16]
    2230:	3404      	adds	r4, #4
    2232:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
    2236:	f000 faf9 	bl	282c <rt_tsk_create>
    223a:	2800      	cmp	r0, #0
    223c:	d0e9      	beq.n	2212 <svcThreadCreate+0xa>
    223e:	4b0a      	ldr	r3, [pc, #40]	; (2268 <svcThreadCreate+0x60>)
    2240:	3801      	subs	r0, #1
    2242:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
    2246:	4a09      	ldr	r2, [pc, #36]	; (226c <svcThreadCreate+0x64>)
    2248:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    224a:	635a      	str	r2, [r3, #52]	; 0x34
    224c:	4b08      	ldr	r3, [pc, #32]	; (2270 <svcThreadCreate+0x68>)
    224e:	681b      	ldr	r3, [r3, #0]
    2250:	b143      	cbz	r3, 2264 <svcThreadCreate+0x5c>
    2252:	689b      	ldr	r3, [r3, #8]
    2254:	b133      	cbz	r3, 2264 <svcThreadCreate+0x5c>
    2256:	4631      	mov	r1, r6
    2258:	78e0      	ldrb	r0, [r4, #3]
    225a:	4798      	blx	r3
    225c:	63e0      	str	r0, [r4, #60]	; 0x3c
    225e:	e7d9      	b.n	2214 <svcThreadCreate+0xc>
    2260:	460a      	mov	r2, r1
    2262:	e7e5      	b.n	2230 <svcThreadCreate+0x28>
    2264:	63e6      	str	r6, [r4, #60]	; 0x3c
    2266:	e7d5      	b.n	2214 <svcThreadCreate+0xc>
    2268:	10001dc8 	.word	0x10001dc8
    226c:	000023f5 	.word	0x000023f5
    2270:	100025b4 	.word	0x100025b4

00002274 <svcThreadGetId>:
    2274:	b508      	push	{r3, lr}
    2276:	f000 fa93 	bl	27a0 <rt_tsk_self>
    227a:	b118      	cbz	r0, 2284 <svcThreadGetId+0x10>
    227c:	4b02      	ldr	r3, [pc, #8]	; (2288 <svcThreadGetId+0x14>)
    227e:	3801      	subs	r0, #1
    2280:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    2284:	bd08      	pop	{r3, pc}
    2286:	bf00      	nop
    2288:	10001dc8 	.word	0x10001dc8

0000228c <svcThreadTerminate>:
    228c:	b510      	push	{r4, lr}
    228e:	f7ff ff2b 	bl	20e8 <rt_tid2ptcb>
    2292:	4604      	mov	r4, r0
    2294:	b170      	cbz	r0, 22b4 <svcThreadTerminate+0x28>
    2296:	4b08      	ldr	r3, [pc, #32]	; (22b8 <svcThreadTerminate+0x2c>)
    2298:	681b      	ldr	r3, [r3, #0]
    229a:	b11b      	cbz	r3, 22a4 <svcThreadTerminate+0x18>
    229c:	68db      	ldr	r3, [r3, #12]
    229e:	b10b      	cbz	r3, 22a4 <svcThreadTerminate+0x18>
    22a0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
    22a2:	4798      	blx	r3
    22a4:	78e0      	ldrb	r0, [r4, #3]
    22a6:	f000 fb17 	bl	28d8 <rt_tsk_delete>
    22aa:	28ff      	cmp	r0, #255	; 0xff
    22ac:	bf0c      	ite	eq
    22ae:	2081      	moveq	r0, #129	; 0x81
    22b0:	2000      	movne	r0, #0
    22b2:	bd10      	pop	{r4, pc}
    22b4:	2080      	movs	r0, #128	; 0x80
    22b6:	bd10      	pop	{r4, pc}
    22b8:	100025b4 	.word	0x100025b4

000022bc <svcDelay>:
    22bc:	b508      	push	{r3, lr}
    22be:	b128      	cbz	r0, 22cc <svcDelay+0x10>
    22c0:	f7ff fef2 	bl	20a8 <rt_ms2tick>
    22c4:	f000 fd18 	bl	2cf8 <rt_dly_wait>
    22c8:	2040      	movs	r0, #64	; 0x40
    22ca:	bd08      	pop	{r3, pc}
    22cc:	bd08      	pop	{r3, pc}
	...

000022d0 <osDelay>:
    22d0:	b510      	push	{r4, lr}
    22d2:	f3ef 8410 	mrs	r4, PRIMASK
    22d6:	b934      	cbnz	r4, 22e6 <osDelay+0x16>
    22d8:	f3ef 8405 	mrs	r4, IPSR
    22dc:	b91c      	cbnz	r4, 22e6 <osDelay+0x16>
    22de:	f8df c00c 	ldr.w	r12, [pc, #12]	; 22ec <osDelay+0x1c>
    22e2:	df00      	svc	0
    22e4:	bd10      	pop	{r4, pc}
    22e6:	2082      	movs	r0, #130	; 0x82
    22e8:	bd10      	pop	{r4, pc}
    22ea:	0000      	.short	0x0000
    22ec:	000022bd 	.word	0x000022bd

000022f0 <svcTimerCall>:
    22f0:	0783      	lsls	r3, r0, #30
    22f2:	d105      	bne.n	2300 <svcTimerCall+0x10>
    22f4:	b138      	cbz	r0, 2306 <svcTimerCall+0x16>
    22f6:	6943      	ldr	r3, [r0, #20]
    22f8:	6901      	ldr	r1, [r0, #16]
    22fa:	681b      	ldr	r3, [r3, #0]
    22fc:	4618      	mov	r0, r3
    22fe:	4770      	bx	lr
    2300:	2300      	movs	r3, #0
    2302:	4619      	mov	r1, r3
    2304:	e7fa      	b.n	22fc <svcTimerCall+0xc>
    2306:	4603      	mov	r3, r0
    2308:	e7fb      	b.n	2302 <svcTimerCall+0x12>
	...

0000230c <osTimerCall>:
    230c:	b510      	push	{r4, lr}
    230e:	4604      	mov	r4, r0
    2310:	4608      	mov	r0, r1
    2312:	f8df c00c 	ldr.w	r12, [pc, #12]	; 2320 <osTimerCall+0x14>
    2316:	df00      	svc	0
    2318:	e884 0003 	stmia.w	r4, {r0, r1}
    231c:	4620      	mov	r0, r4
    231e:	bd10      	pop	{r4, pc}
    2320:	000022f1 	.word	0x000022f1

00002324 <svcMutexCreate>:
    2324:	b510      	push	{r4, lr}
    2326:	b148      	cbz	r0, 233c <svcMutexCreate+0x18>
    2328:	6804      	ldr	r4, [r0, #0]
    232a:	b124      	cbz	r4, 2336 <svcMutexCreate+0x12>
    232c:	7823      	ldrb	r3, [r4, #0]
    232e:	b923      	cbnz	r3, 233a <svcMutexCreate+0x16>
    2330:	4620      	mov	r0, r4
    2332:	f000 fc3b 	bl	2bac <rt_mut_init>
    2336:	4620      	mov	r0, r4
    2338:	bd10      	pop	{r4, pc}
    233a:	2000      	movs	r0, #0
    233c:	bd10      	pop	{r4, pc}

0000233e <svcMutexWait>:
    233e:	b570      	push	{r4, r5, r6, lr}
    2340:	f010 0403 	ands.w	r4, r0, #3
    2344:	4605      	mov	r5, r0
    2346:	460e      	mov	r6, r1
    2348:	d111      	bne.n	236e <svcMutexWait+0x30>
    234a:	b180      	cbz	r0, 236e <svcMutexWait+0x30>
    234c:	7803      	ldrb	r3, [r0, #0]
    234e:	2b03      	cmp	r3, #3
    2350:	d10d      	bne.n	236e <svcMutexWait+0x30>
    2352:	4608      	mov	r0, r1
    2354:	f7ff fea8 	bl	20a8 <rt_ms2tick>
    2358:	4601      	mov	r1, r0
    235a:	4628      	mov	r0, r5
    235c:	f000 fc9e 	bl	2c9c <rt_mut_wait>
    2360:	2801      	cmp	r0, #1
    2362:	d106      	bne.n	2372 <svcMutexWait+0x34>
    2364:	2e00      	cmp	r6, #0
    2366:	bf14      	ite	ne
    2368:	20c1      	movne	r0, #193	; 0xc1
    236a:	2081      	moveq	r0, #129	; 0x81
    236c:	bd70      	pop	{r4, r5, r6, pc}
    236e:	2080      	movs	r0, #128	; 0x80
    2370:	bd70      	pop	{r4, r5, r6, pc}
    2372:	4620      	mov	r0, r4
    2374:	bd70      	pop	{r4, r5, r6, pc}

00002376 <svcMutexRelease>:
    2376:	0782      	lsls	r2, r0, #30
    2378:	b508      	push	{r3, lr}
    237a:	d10a      	bne.n	2392 <svcMutexRelease+0x1c>
    237c:	b148      	cbz	r0, 2392 <svcMutexRelease+0x1c>
    237e:	7803      	ldrb	r3, [r0, #0]
    2380:	2b03      	cmp	r3, #3
    2382:	d106      	bne.n	2392 <svcMutexRelease+0x1c>
    2384:	f000 fc1a 	bl	2bbc <rt_mut_release>
    2388:	28ff      	cmp	r0, #255	; 0xff
    238a:	bf0c      	ite	eq
    238c:	2081      	moveq	r0, #129	; 0x81
    238e:	2000      	movne	r0, #0
    2390:	bd08      	pop	{r3, pc}
    2392:	2080      	movs	r0, #128	; 0x80
    2394:	bd08      	pop	{r3, pc}
	...

00002398 <osMutexCreate>:
    2398:	b570      	push	{r4, r5, r6, lr}
    239a:	4605      	mov	r5, r0
    239c:	f3ef 8410 	mrs	r4, PRIMASK
    23a0:	b994      	cbnz	r4, 23c8 <osMutexCreate+0x30>
    23a2:	f3ef 8605 	mrs	r6, IPSR
    23a6:	b97e      	cbnz	r6, 23c8 <osMutexCreate+0x30>
    23a8:	f3ef 8414 	mrs	r4, CONTROL
    23ac:	07e4      	lsls	r4, r4, #31
    23ae:	d406      	bmi.n	23be <osMutexCreate+0x26>
    23b0:	4c06      	ldr	r4, [pc, #24]	; (23cc <osMutexCreate+0x34>)
    23b2:	7824      	ldrb	r4, [r4, #0]
    23b4:	b91c      	cbnz	r4, 23be <osMutexCreate+0x26>
    23b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    23ba:	f7ff bfb3 	b.w	2324 <svcMutexCreate>
    23be:	4628      	mov	r0, r5
    23c0:	f8df c00c 	ldr.w	r12, [pc, #12]	; 23d0 <osMutexCreate+0x38>
    23c4:	df00      	svc	0
    23c6:	bd70      	pop	{r4, r5, r6, pc}
    23c8:	2000      	movs	r0, #0
    23ca:	bd70      	pop	{r4, r5, r6, pc}
    23cc:	100025c5 	.word	0x100025c5
    23d0:	00002325 	.word	0x00002325

000023d4 <osMutexWait>:
    23d4:	b510      	push	{r4, lr}
    23d6:	f3ef 8410 	mrs	r4, PRIMASK
    23da:	b934      	cbnz	r4, 23ea <osMutexWait+0x16>
    23dc:	f3ef 8405 	mrs	r4, IPSR
    23e0:	b91c      	cbnz	r4, 23ea <osMutexWait+0x16>
    23e2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 23f0 <osMutexWait+0x1c>
    23e6:	df00      	svc	0
    23e8:	bd10      	pop	{r4, pc}
    23ea:	2082      	movs	r0, #130	; 0x82
    23ec:	bd10      	pop	{r4, pc}
    23ee:	0000      	.short	0x0000
    23f0:	0000233f 	.word	0x0000233f

000023f4 <osThreadExit>:
    23f4:	4808      	ldr	r0, [pc, #32]	; (2418 <osThreadExit+0x24>)
    23f6:	b508      	push	{r3, lr}
    23f8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    23fc:	6800      	ldr	r0, [r0, #0]
    23fe:	f7ff ffe9 	bl	23d4 <osMutexWait>
    2402:	f8df c018 	ldr.w	r12, [pc, #24]	; 241c <osThreadExit+0x28>
    2406:	df00      	svc	0
    2408:	4604      	mov	r4, r0
    240a:	f7ff fa69 	bl	18e0 <sysThreadTerminate>
    240e:	4620      	mov	r0, r4
    2410:	f8df c00c 	ldr.w	r12, [pc, #12]	; 2420 <osThreadExit+0x2c>
    2414:	df00      	svc	0
    2416:	e7fe      	b.n	2416 <osThreadExit+0x22>
    2418:	100025c0 	.word	0x100025c0
    241c:	00002275 	.word	0x00002275
    2420:	0000228d 	.word	0x0000228d

00002424 <osMutexRelease>:
    2424:	b510      	push	{r4, lr}
    2426:	f3ef 8410 	mrs	r4, PRIMASK
    242a:	b934      	cbnz	r4, 243a <osMutexRelease+0x16>
    242c:	f3ef 8405 	mrs	r4, IPSR
    2430:	b91c      	cbnz	r4, 243a <osMutexRelease+0x16>
    2432:	f8df c00c 	ldr.w	r12, [pc, #12]	; 2440 <osMutexRelease+0x1c>
    2436:	df00      	svc	0
    2438:	bd10      	pop	{r4, pc}
    243a:	2082      	movs	r0, #130	; 0x82
    243c:	bd10      	pop	{r4, pc}
    243e:	0000      	.short	0x0000
    2440:	00002377 	.word	0x00002377

00002444 <osThreadContextCreate>:
    2444:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2448:	4680      	mov	r8, r0
    244a:	460f      	mov	r7, r1
    244c:	4616      	mov	r6, r2
    244e:	f3ef 8410 	mrs	r4, PRIMASK
    2452:	bb04      	cbnz	r4, 2496 <osThreadContextCreate+0x52>
    2454:	f3ef 8305 	mrs	r3, IPSR
    2458:	b9d3      	cbnz	r3, 2490 <osThreadContextCreate+0x4c>
    245a:	f3ef 8314 	mrs	r3, CONTROL
    245e:	07db      	lsls	r3, r3, #31
    2460:	d406      	bmi.n	2470 <osThreadContextCreate+0x2c>
    2462:	4b0e      	ldr	r3, [pc, #56]	; (249c <osThreadContextCreate+0x58>)
    2464:	781b      	ldrb	r3, [r3, #0]
    2466:	b91b      	cbnz	r3, 2470 <osThreadContextCreate+0x2c>
    2468:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    246c:	f7ff becc 	b.w	2208 <svcThreadCreate>
    2470:	4d0b      	ldr	r5, [pc, #44]	; (24a0 <osThreadContextCreate+0x5c>)
    2472:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    2476:	6828      	ldr	r0, [r5, #0]
    2478:	f7ff ffac 	bl	23d4 <osMutexWait>
    247c:	4640      	mov	r0, r8
    247e:	4639      	mov	r1, r7
    2480:	4632      	mov	r2, r6
    2482:	f8df c020 	ldr.w	r12, [pc, #32]	; 24a4 <osThreadContextCreate+0x60>
    2486:	df00      	svc	0
    2488:	4604      	mov	r4, r0
    248a:	6828      	ldr	r0, [r5, #0]
    248c:	f7ff ffca 	bl	2424 <osMutexRelease>
    2490:	4620      	mov	r0, r4
    2492:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2496:	2400      	movs	r4, #0
    2498:	e7fa      	b.n	2490 <osThreadContextCreate+0x4c>
    249a:	bf00      	nop
    249c:	100025c5 	.word	0x100025c5
    24a0:	100025c0 	.word	0x100025c0
    24a4:	00002209 	.word	0x00002209

000024a8 <osThreadCreate>:
    24a8:	2200      	movs	r2, #0
    24aa:	f7ff bfcb 	b.w	2444 <osThreadContextCreate>

000024ae <svcMessageCreate>:
    24ae:	b510      	push	{r4, lr}
    24b0:	4604      	mov	r4, r0
    24b2:	b160      	cbz	r0, 24ce <svcMessageCreate+0x20>
    24b4:	6801      	ldr	r1, [r0, #0]
    24b6:	b151      	cbz	r1, 24ce <svcMessageCreate+0x20>
    24b8:	6840      	ldr	r0, [r0, #4]
    24ba:	b148      	cbz	r0, 24d0 <svcMessageCreate+0x22>
    24bc:	7803      	ldrb	r3, [r0, #0]
    24be:	b933      	cbnz	r3, 24ce <svcMessageCreate+0x20>
    24c0:	3104      	adds	r1, #4
    24c2:	0089      	lsls	r1, r1, #2
    24c4:	b289      	uxth	r1, r1
    24c6:	f7ff fc72 	bl	1dae <rt_mbx_init>
    24ca:	6860      	ldr	r0, [r4, #4]
    24cc:	bd10      	pop	{r4, pc}
    24ce:	2000      	movs	r0, #0
    24d0:	bd10      	pop	{r4, pc}
	...

000024d4 <svcKernelInitialize>:
    24d4:	b538      	push	{r3, r4, r5, lr}
    24d6:	4c11      	ldr	r4, [pc, #68]	; (251c <svcKernelInitialize+0x48>)
    24d8:	7823      	ldrb	r3, [r4, #0]
    24da:	b90b      	cbnz	r3, 24e0 <svcKernelInitialize+0xc>
    24dc:	f000 faa6 	bl	2a2c <rt_sys_init>
    24e0:	22ff      	movs	r2, #255	; 0xff
    24e2:	4b0f      	ldr	r3, [pc, #60]	; (2520 <svcKernelInitialize+0x4c>)
    24e4:	7825      	ldrb	r5, [r4, #0]
    24e6:	681b      	ldr	r3, [r3, #0]
    24e8:	709a      	strb	r2, [r3, #2]
    24ea:	b98d      	cbnz	r5, 2510 <svcKernelInitialize+0x3c>
    24ec:	4629      	mov	r1, r5
    24ee:	480d      	ldr	r0, [pc, #52]	; (2524 <svcKernelInitialize+0x50>)
    24f0:	f7ff ffdd 	bl	24ae <svcMessageCreate>
    24f4:	4b0c      	ldr	r3, [pc, #48]	; (2528 <svcKernelInitialize+0x54>)
    24f6:	462a      	mov	r2, r5
    24f8:	6018      	str	r0, [r3, #0]
    24fa:	4629      	mov	r1, r5
    24fc:	480b      	ldr	r0, [pc, #44]	; (252c <svcKernelInitialize+0x58>)
    24fe:	f7ff fe83 	bl	2208 <svcThreadCreate>
    2502:	4b0b      	ldr	r3, [pc, #44]	; (2530 <svcKernelInitialize+0x5c>)
    2504:	6018      	str	r0, [r3, #0]
    2506:	480b      	ldr	r0, [pc, #44]	; (2534 <svcKernelInitialize+0x60>)
    2508:	f7ff ff46 	bl	2398 <osMutexCreate>
    250c:	4b0a      	ldr	r3, [pc, #40]	; (2538 <svcKernelInitialize+0x64>)
    250e:	6018      	str	r0, [r3, #0]
    2510:	2301      	movs	r3, #1
    2512:	2000      	movs	r0, #0
    2514:	7023      	strb	r3, [r4, #0]
    2516:	4b09      	ldr	r3, [pc, #36]	; (253c <svcKernelInitialize+0x68>)
    2518:	7018      	strb	r0, [r3, #0]
    251a:	bd38      	pop	{r3, r4, r5, pc}
    251c:	100025c4 	.word	0x100025c4
    2520:	100025cc 	.word	0x100025cc
    2524:	00004ed0 	.word	0x00004ed0
    2528:	10001e88 	.word	0x10001e88
    252c:	00004eec 	.word	0x00004eec
    2530:	1000257c 	.word	0x1000257c
    2534:	00004f04 	.word	0x00004f04
    2538:	100025c0 	.word	0x100025c0
    253c:	100025c5 	.word	0x100025c5

00002540 <osKernelInitialize>:
    2540:	b510      	push	{r4, lr}
    2542:	f3ef 8410 	mrs	r4, PRIMASK
    2546:	b974      	cbnz	r4, 2566 <osKernelInitialize+0x26>
    2548:	f3ef 8405 	mrs	r4, IPSR
    254c:	b95c      	cbnz	r4, 2566 <osKernelInitialize+0x26>
    254e:	f3ef 8414 	mrs	r4, CONTROL
    2552:	07e4      	lsls	r4, r4, #31
    2554:	d403      	bmi.n	255e <osKernelInitialize+0x1e>
    2556:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    255a:	f7ff bfbb 	b.w	24d4 <svcKernelInitialize>
    255e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 256c <osKernelInitialize+0x2c>
    2562:	df00      	svc	0
    2564:	bd10      	pop	{r4, pc}
    2566:	2082      	movs	r0, #130	; 0x82
    2568:	bd10      	pop	{r4, pc}
    256a:	0000      	.short	0x0000
    256c:	000024d5 	.word	0x000024d5

00002570 <svcMessageGet>:
    2570:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    2574:	460c      	mov	r4, r1
    2576:	4680      	mov	r8, r0
    2578:	b318      	cbz	r0, 25c2 <svcMessageGet+0x52>
    257a:	7803      	ldrb	r3, [r0, #0]
    257c:	2b01      	cmp	r3, #1
    257e:	d125      	bne.n	25cc <svcMessageGet+0x5c>
    2580:	4608      	mov	r0, r1
    2582:	f7ff fd91 	bl	20a8 <rt_ms2tick>
    2586:	a902      	add	r1, sp, #8
    2588:	4602      	mov	r2, r0
    258a:	4640      	mov	r0, r8
    258c:	f7ff fc1c 	bl	1dc8 <rt_mbx_wait>
    2590:	2801      	cmp	r0, #1
    2592:	d111      	bne.n	25b8 <svcMessageGet+0x48>
    2594:	2000      	movs	r0, #0
    2596:	2c00      	cmp	r4, #0
    2598:	4602      	mov	r2, r0
    259a:	4603      	mov	r3, r0
    259c:	bf18      	it	ne
    259e:	2040      	movne	r0, #64	; 0x40
    25a0:	9902      	ldr	r1, [sp, #8]
    25a2:	4604      	mov	r4, r0
    25a4:	460d      	mov	r5, r1
    25a6:	4616      	mov	r6, r2
    25a8:	461f      	mov	r7, r3
    25aa:	4620      	mov	r0, r4
    25ac:	4629      	mov	r1, r5
    25ae:	4632      	mov	r2, r6
    25b0:	463b      	mov	r3, r7
    25b2:	b004      	add	sp, #16
    25b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    25b8:	2000      	movs	r0, #0
    25ba:	4602      	mov	r2, r0
    25bc:	4603      	mov	r3, r0
    25be:	2010      	movs	r0, #16
    25c0:	e7ee      	b.n	25a0 <svcMessageGet+0x30>
    25c2:	2480      	movs	r4, #128	; 0x80
    25c4:	4605      	mov	r5, r0
    25c6:	4606      	mov	r6, r0
    25c8:	4607      	mov	r7, r0
    25ca:	e7ee      	b.n	25aa <svcMessageGet+0x3a>
    25cc:	2500      	movs	r5, #0
    25ce:	2480      	movs	r4, #128	; 0x80
    25d0:	462e      	mov	r6, r5
    25d2:	462f      	mov	r7, r5
    25d4:	e7e9      	b.n	25aa <svcMessageGet+0x3a>

000025d6 <isrMessagePut>:
    25d6:	b570      	push	{r4, r5, r6, lr}
    25d8:	460e      	mov	r6, r1
    25da:	4614      	mov	r4, r2
    25dc:	4605      	mov	r5, r0
    25de:	b160      	cbz	r0, 25fa <isrMessagePut+0x24>
    25e0:	b95a      	cbnz	r2, 25fa <isrMessagePut+0x24>
    25e2:	7803      	ldrb	r3, [r0, #0]
    25e4:	2b01      	cmp	r3, #1
    25e6:	d108      	bne.n	25fa <isrMessagePut+0x24>
    25e8:	f7ff fc44 	bl	1e74 <rt_mbx_check>
    25ec:	b138      	cbz	r0, 25fe <isrMessagePut+0x28>
    25ee:	4628      	mov	r0, r5
    25f0:	4631      	mov	r1, r6
    25f2:	f7ff fc43 	bl	1e7c <isr_mbx_send>
    25f6:	4620      	mov	r0, r4
    25f8:	bd70      	pop	{r4, r5, r6, pc}
    25fa:	2080      	movs	r0, #128	; 0x80
    25fc:	bd70      	pop	{r4, r5, r6, pc}
    25fe:	2081      	movs	r0, #129	; 0x81
    2600:	bd70      	pop	{r4, r5, r6, pc}
	...

00002604 <sysTimerTick>:
    2604:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2606:	4e11      	ldr	r6, [pc, #68]	; (264c <sysTimerTick+0x48>)
    2608:	6834      	ldr	r4, [r6, #0]
    260a:	b12c      	cbz	r4, 2618 <sysTimerTick+0x14>
    260c:	68a3      	ldr	r3, [r4, #8]
    260e:	4f10      	ldr	r7, [pc, #64]	; (2650 <sysTimerTick+0x4c>)
    2610:	3b01      	subs	r3, #1
    2612:	60a3      	str	r3, [r4, #8]
    2614:	68a2      	ldr	r2, [r4, #8]
    2616:	b102      	cbz	r2, 261a <sysTimerTick+0x16>
    2618:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    261a:	6825      	ldr	r5, [r4, #0]
    261c:	4621      	mov	r1, r4
    261e:	6838      	ldr	r0, [r7, #0]
    2620:	6035      	str	r5, [r6, #0]
    2622:	f7ff ffd8 	bl	25d6 <isrMessagePut>
    2626:	b110      	cbz	r0, 262e <sysTimerTick+0x2a>
    2628:	2004      	movs	r0, #4
    262a:	f7ff f94b 	bl	18c4 <os_error>
    262e:	7963      	ldrb	r3, [r4, #5]
    2630:	2b01      	cmp	r3, #1
    2632:	d107      	bne.n	2644 <sysTimerTick+0x40>
    2634:	68e1      	ldr	r1, [r4, #12]
    2636:	4620      	mov	r0, r4
    2638:	f7ff fd1c 	bl	2074 <rt_timer_insert>
    263c:	2d00      	cmp	r5, #0
    263e:	d0eb      	beq.n	2618 <sysTimerTick+0x14>
    2640:	462c      	mov	r4, r5
    2642:	e7e7      	b.n	2614 <sysTimerTick+0x10>
    2644:	2301      	movs	r3, #1
    2646:	7123      	strb	r3, [r4, #4]
    2648:	e7f8      	b.n	263c <sysTimerTick+0x38>
    264a:	bf00      	nop
    264c:	100025c8 	.word	0x100025c8
    2650:	10001e88 	.word	0x10001e88

00002654 <isrMessageGet>:
    2654:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    2656:	4604      	mov	r4, r0
    2658:	4616      	mov	r6, r2
    265a:	4608      	mov	r0, r1
    265c:	b101      	cbz	r1, 2660 <isrMessageGet+0xc>
    265e:	b122      	cbz	r2, 266a <isrMessageGet+0x16>
    2660:	2380      	movs	r3, #128	; 0x80
    2662:	6023      	str	r3, [r4, #0]
    2664:	4620      	mov	r0, r4
    2666:	b004      	add	sp, #16
    2668:	bd70      	pop	{r4, r5, r6, pc}
    266a:	780b      	ldrb	r3, [r1, #0]
    266c:	2b01      	cmp	r3, #1
    266e:	d1f7      	bne.n	2660 <isrMessageGet+0xc>
    2670:	a902      	add	r1, sp, #8
    2672:	f7ff fc0a 	bl	1e8a <isr_mbx_receive>
    2676:	2804      	cmp	r0, #4
    2678:	bf08      	it	eq
    267a:	2310      	moveq	r3, #16
    267c:	ad01      	add	r5, sp, #4
    267e:	bf14      	ite	ne
    2680:	9601      	strne	r6, [sp, #4]
    2682:	9301      	streq	r3, [sp, #4]
    2684:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    2688:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    268c:	e7ea      	b.n	2664 <isrMessageGet+0x10>
	...

00002690 <osMessageGet>:
    2690:	b538      	push	{r3, r4, r5, lr}
    2692:	4604      	mov	r4, r0
    2694:	4615      	mov	r5, r2
    2696:	f3ef 8010 	mrs	r0, PRIMASK
    269a:	b910      	cbnz	r0, 26a2 <osMessageGet+0x12>
    269c:	f3ef 8005 	mrs	r0, IPSR
    26a0:	b128      	cbz	r0, 26ae <osMessageGet+0x1e>
    26a2:	462a      	mov	r2, r5
    26a4:	4620      	mov	r0, r4
    26a6:	f7ff ffd5 	bl	2654 <isrMessageGet>
    26aa:	4620      	mov	r0, r4
    26ac:	bd38      	pop	{r3, r4, r5, pc}
    26ae:	4608      	mov	r0, r1
    26b0:	4611      	mov	r1, r2
    26b2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 26c0 <osMessageGet+0x30>
    26b6:	df00      	svc	0
    26b8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    26bc:	e7f5      	b.n	26aa <osMessageGet+0x1a>
    26be:	0000      	.short	0x0000
    26c0:	00002571 	.word	0x00002571

000026c4 <osTimerThread>:
    26c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    26c6:	4c0a      	ldr	r4, [pc, #40]	; (26f0 <osTimerThread+0x2c>)
    26c8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    26cc:	6821      	ldr	r1, [r4, #0]
    26ce:	a803      	add	r0, sp, #12
    26d0:	f7ff ffde 	bl	2690 <osMessageGet>
    26d4:	9b03      	ldr	r3, [sp, #12]
    26d6:	2b10      	cmp	r3, #16
    26d8:	d1f6      	bne.n	26c8 <osTimerThread+0x4>
    26da:	9904      	ldr	r1, [sp, #16]
    26dc:	a801      	add	r0, sp, #4
    26de:	f7ff fe15 	bl	230c <osTimerCall>
    26e2:	9b01      	ldr	r3, [sp, #4]
    26e4:	2b00      	cmp	r3, #0
    26e6:	d0ef      	beq.n	26c8 <osTimerThread+0x4>
    26e8:	9802      	ldr	r0, [sp, #8]
    26ea:	4798      	blx	r3
    26ec:	e7ec      	b.n	26c8 <osTimerThread+0x4>
    26ee:	bf00      	nop
    26f0:	10001e88 	.word	0x10001e88

000026f4 <rt_switch_req>:
    26f4:	4b05      	ldr	r3, [pc, #20]	; (270c <rt_switch_req+0x18>)
    26f6:	6058      	str	r0, [r3, #4]
    26f8:	2302      	movs	r3, #2
    26fa:	7043      	strb	r3, [r0, #1]
    26fc:	4b04      	ldr	r3, [pc, #16]	; (2710 <rt_switch_req+0x1c>)
    26fe:	681b      	ldr	r3, [r3, #0]
    2700:	b11b      	cbz	r3, 270a <rt_switch_req+0x16>
    2702:	691b      	ldr	r3, [r3, #16]
    2704:	b10b      	cbz	r3, 270a <rt_switch_req+0x16>
    2706:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
    2708:	4718      	bx	r3
    270a:	4770      	bx	lr
    270c:	100025cc 	.word	0x100025cc
    2710:	100025b4 	.word	0x100025b4

00002714 <rt_dispatch.part.0>:
    2714:	b508      	push	{r3, lr}
    2716:	4803      	ldr	r0, [pc, #12]	; (2724 <rt_dispatch.part.0+0x10>)
    2718:	f7ff f93a 	bl	1990 <rt_get_first>
    271c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    2720:	f7ff bfe8 	b.w	26f4 <rt_switch_req>
    2724:	10002580 	.word	0x10002580

00002728 <rt_dispatch>:
    2728:	b570      	push	{r4, r5, r6, lr}
    272a:	4604      	mov	r4, r0
    272c:	b918      	cbnz	r0, 2736 <rt_dispatch+0xe>
    272e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    2732:	f7ff bfef 	b.w	2714 <rt_dispatch.part.0>
    2736:	4e0b      	ldr	r6, [pc, #44]	; (2764 <rt_dispatch+0x3c>)
    2738:	78a2      	ldrb	r2, [r4, #2]
    273a:	6830      	ldr	r0, [r6, #0]
    273c:	2501      	movs	r5, #1
    273e:	7883      	ldrb	r3, [r0, #2]
    2740:	429a      	cmp	r2, r3
    2742:	d908      	bls.n	2756 <rt_dispatch+0x2e>
    2744:	f7ff f936 	bl	19b4 <rt_put_rdy_first>
    2748:	6833      	ldr	r3, [r6, #0]
    274a:	4620      	mov	r0, r4
    274c:	705d      	strb	r5, [r3, #1]
    274e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    2752:	f7ff bfcf 	b.w	26f4 <rt_switch_req>
    2756:	7065      	strb	r5, [r4, #1]
    2758:	4621      	mov	r1, r4
    275a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    275e:	4802      	ldr	r0, [pc, #8]	; (2768 <rt_dispatch+0x40>)
    2760:	f7ff b8fe 	b.w	1960 <rt_put_prio>
    2764:	100025cc 	.word	0x100025cc
    2768:	10002580 	.word	0x10002580

0000276c <rt_block>:
    276c:	b538      	push	{r3, r4, r5, lr}
    276e:	460d      	mov	r5, r1
    2770:	4601      	mov	r1, r0
    2772:	b180      	cbz	r0, 2796 <rt_block+0x2a>
    2774:	f64f 73ff 	movw	r3, #65535	; 0xffff
    2778:	4298      	cmp	r0, r3
    277a:	4c07      	ldr	r4, [pc, #28]	; (2798 <rt_block+0x2c>)
    277c:	d002      	beq.n	2784 <rt_block+0x18>
    277e:	6820      	ldr	r0, [r4, #0]
    2780:	f7ff f922 	bl	19c8 <rt_put_dly>
    2784:	6823      	ldr	r3, [r4, #0]
    2786:	4805      	ldr	r0, [pc, #20]	; (279c <rt_block+0x30>)
    2788:	705d      	strb	r5, [r3, #1]
    278a:	f7ff f901 	bl	1990 <rt_get_first>
    278e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2792:	f7ff bfaf 	b.w	26f4 <rt_switch_req>
    2796:	bd38      	pop	{r3, r4, r5, pc}
    2798:	100025cc 	.word	0x100025cc
    279c:	10002580 	.word	0x10002580

000027a0 <rt_tsk_self>:
    27a0:	4b02      	ldr	r3, [pc, #8]	; (27ac <rt_tsk_self+0xc>)
    27a2:	6818      	ldr	r0, [r3, #0]
    27a4:	b100      	cbz	r0, 27a8 <rt_tsk_self+0x8>
    27a6:	78c0      	ldrb	r0, [r0, #3]
    27a8:	4770      	bx	lr
    27aa:	bf00      	nop
    27ac:	100025cc 	.word	0x100025cc

000027b0 <rt_tsk_prio>:
    27b0:	b510      	push	{r4, lr}
    27b2:	b9a8      	cbnz	r0, 27e0 <rt_tsk_prio+0x30>
    27b4:	4b19      	ldr	r3, [pc, #100]	; (281c <rt_tsk_prio+0x6c>)
    27b6:	681b      	ldr	r3, [r3, #0]
    27b8:	7099      	strb	r1, [r3, #2]
    27ba:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
    27be:	4818      	ldr	r0, [pc, #96]	; (2820 <rt_tsk_prio+0x70>)
    27c0:	6843      	ldr	r3, [r0, #4]
    27c2:	789b      	ldrb	r3, [r3, #2]
    27c4:	428b      	cmp	r3, r1
    27c6:	d801      	bhi.n	27cc <rt_tsk_prio+0x1c>
    27c8:	2000      	movs	r0, #0
    27ca:	bd10      	pop	{r4, pc}
    27cc:	4c13      	ldr	r4, [pc, #76]	; (281c <rt_tsk_prio+0x6c>)
    27ce:	6821      	ldr	r1, [r4, #0]
    27d0:	f7ff f8c6 	bl	1960 <rt_put_prio>
    27d4:	2201      	movs	r2, #1
    27d6:	6823      	ldr	r3, [r4, #0]
    27d8:	705a      	strb	r2, [r3, #1]
    27da:	f7ff ff9b 	bl	2714 <rt_dispatch.part.0>
    27de:	e7f3      	b.n	27c8 <rt_tsk_prio+0x18>
    27e0:	4b10      	ldr	r3, [pc, #64]	; (2824 <rt_tsk_prio+0x74>)
    27e2:	881b      	ldrh	r3, [r3, #0]
    27e4:	4298      	cmp	r0, r3
    27e6:	d817      	bhi.n	2818 <rt_tsk_prio+0x68>
    27e8:	4b0f      	ldr	r3, [pc, #60]	; (2828 <rt_tsk_prio+0x78>)
    27ea:	3801      	subs	r0, #1
    27ec:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
    27f0:	b194      	cbz	r4, 2818 <rt_tsk_prio+0x68>
    27f2:	4b0a      	ldr	r3, [pc, #40]	; (281c <rt_tsk_prio+0x6c>)
    27f4:	70a1      	strb	r1, [r4, #2]
    27f6:	681b      	ldr	r3, [r3, #0]
    27f8:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
    27fc:	429c      	cmp	r4, r3
    27fe:	d0de      	beq.n	27be <rt_tsk_prio+0xe>
    2800:	4620      	mov	r0, r4
    2802:	f7ff f953 	bl	1aac <rt_resort_prio>
    2806:	7863      	ldrb	r3, [r4, #1]
    2808:	2b01      	cmp	r3, #1
    280a:	d1dd      	bne.n	27c8 <rt_tsk_prio+0x18>
    280c:	4804      	ldr	r0, [pc, #16]	; (2820 <rt_tsk_prio+0x70>)
    280e:	f7ff f8bf 	bl	1990 <rt_get_first>
    2812:	f7ff ff89 	bl	2728 <rt_dispatch>
    2816:	e7d7      	b.n	27c8 <rt_tsk_prio+0x18>
    2818:	20ff      	movs	r0, #255	; 0xff
    281a:	bd10      	pop	{r4, pc}
    281c:	100025cc 	.word	0x100025cc
    2820:	10002580 	.word	0x10002580
    2824:	00004ecc 	.word	0x00004ecc
    2828:	10001dc8 	.word	0x10001dc8

0000282c <rt_tsk_create>:
    282c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    2830:	460d      	mov	r5, r1
    2832:	f011 0fff 	tst.w	r1, #255	; 0xff
    2836:	4680      	mov	r8, r0
    2838:	4823      	ldr	r0, [pc, #140]	; (28c8 <rt_tsk_create+0x9c>)
    283a:	4616      	mov	r6, r2
    283c:	469a      	mov	r10, r3
    283e:	bf08      	it	eq
    2840:	3501      	addeq	r5, #1
    2842:	f7ff fa93 	bl	1d6c <rt_alloc_box>
    2846:	4604      	mov	r4, r0
    2848:	b920      	cbnz	r0, 2854 <rt_tsk_create+0x28>
    284a:	f04f 0900 	mov.w	r9, #0
    284e:	4648      	mov	r0, r9
    2850:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
    2854:	2100      	movs	r1, #0
    2856:	4b1d      	ldr	r3, [pc, #116]	; (28cc <rt_tsk_create+0xa0>)
    2858:	6306      	str	r6, [r0, #48]	; 0x30
    285a:	881b      	ldrh	r3, [r3, #0]
    285c:	0a28      	lsrs	r0, r5, #8
    285e:	4e1c      	ldr	r6, [pc, #112]	; (28d0 <rt_tsk_create+0xa4>)
    2860:	62a0      	str	r0, [r4, #40]	; 0x28
    2862:	428b      	cmp	r3, r1
    2864:	f101 0901 	add.w	r9, r1, #1
    2868:	d0ef      	beq.n	284a <rt_tsk_create+0x1e>
    286a:	eb06 0289 	add.w	r2, r6, r9, lsl #2
    286e:	f852 2c04 	ldr.w	r2, [r2, #-4]
    2872:	460f      	mov	r7, r1
    2874:	4649      	mov	r1, r9
    2876:	2a00      	cmp	r2, #0
    2878:	d1f3      	bne.n	2862 <rt_tsk_create+0x36>
    287a:	2301      	movs	r3, #1
    287c:	b2ed      	uxtb	r5, r5
    287e:	f884 9003 	strb.w	r9, [r4, #3]
    2882:	f8c4 a01c 	str.w	r10, [r4, #28]
    2886:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
    288a:	7022      	strb	r2, [r4, #0]
    288c:	7063      	strb	r3, [r4, #1]
    288e:	70a5      	strb	r5, [r4, #2]
    2890:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
    2894:	6062      	str	r2, [r4, #4]
    2896:	60a2      	str	r2, [r4, #8]
    2898:	60e2      	str	r2, [r4, #12]
    289a:	6122      	str	r2, [r4, #16]
    289c:	6222      	str	r2, [r4, #32]
    289e:	82a2      	strh	r2, [r4, #20]
    28a0:	82e2      	strh	r2, [r4, #22]
    28a2:	8322      	strh	r2, [r4, #24]
    28a4:	8362      	strh	r2, [r4, #26]
    28a6:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
    28aa:	b918      	cbnz	r0, 28b4 <rt_tsk_create+0x88>
    28ac:	4809      	ldr	r0, [pc, #36]	; (28d4 <rt_tsk_create+0xa8>)
    28ae:	f7ff fa5d 	bl	1d6c <rt_alloc_box>
    28b2:	6320      	str	r0, [r4, #48]	; 0x30
    28b4:	4620      	mov	r0, r4
    28b6:	4641      	mov	r1, r8
    28b8:	f7ff f9e2 	bl	1c80 <rt_init_stack>
    28bc:	4620      	mov	r0, r4
    28be:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
    28c2:	f7ff ff31 	bl	2728 <rt_dispatch>
    28c6:	e7c2      	b.n	284e <rt_tsk_create+0x22>
    28c8:	100021b0 	.word	0x100021b0
    28cc:	00004ecc 	.word	0x00004ecc
    28d0:	10001dc8 	.word	0x10001dc8
    28d4:	10001bb8 	.word	0x10001bb8

000028d8 <rt_tsk_delete>:
    28d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    28dc:	4d4d      	ldr	r5, [pc, #308]	; (2a14 <rt_tsk_delete+0x13c>)
    28de:	b118      	cbz	r0, 28e8 <rt_tsk_delete+0x10>
    28e0:	682b      	ldr	r3, [r5, #0]
    28e2:	78db      	ldrb	r3, [r3, #3]
    28e4:	4298      	cmp	r0, r3
    28e6:	d141      	bne.n	296c <rt_tsk_delete+0x94>
    28e8:	2300      	movs	r3, #0
    28ea:	682c      	ldr	r4, [r5, #0]
    28ec:	2701      	movs	r7, #1
    28ee:	7063      	strb	r3, [r4, #1]
    28f0:	f001 f97f 	bl	3bf2 <rt_get_PSP>
    28f4:	62e0      	str	r0, [r4, #44]	; 0x2c
    28f6:	f7ff f9b1 	bl	1c5c <rt_stk_check>
    28fa:	682b      	ldr	r3, [r5, #0]
    28fc:	f8df 8128 	ldr.w	r8, [pc, #296]	; 2a28 <rt_tsk_delete+0x150>
    2900:	6a1c      	ldr	r4, [r3, #32]
    2902:	b9a4      	cbnz	r4, 292e <rt_tsk_delete+0x56>
    2904:	682a      	ldr	r2, [r5, #0]
    2906:	4944      	ldr	r1, [pc, #272]	; (2a18 <rt_tsk_delete+0x140>)
    2908:	78d3      	ldrb	r3, [r2, #3]
    290a:	4844      	ldr	r0, [pc, #272]	; (2a1c <rt_tsk_delete+0x144>)
    290c:	3b01      	subs	r3, #1
    290e:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
    2912:	6b11      	ldr	r1, [r2, #48]	; 0x30
    2914:	f7ff fa37 	bl	1d86 <rt_free_box>
    2918:	6829      	ldr	r1, [r5, #0]
    291a:	4841      	ldr	r0, [pc, #260]	; (2a20 <rt_tsk_delete+0x148>)
    291c:	630c      	str	r4, [r1, #48]	; 0x30
    291e:	f7ff fa32 	bl	1d86 <rt_free_box>
    2922:	602c      	str	r4, [r5, #0]
    2924:	f7ff fef6 	bl	2714 <rt_dispatch.part.0>
    2928:	4620      	mov	r0, r4
    292a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
    292e:	6863      	ldr	r3, [r4, #4]
    2930:	b1b3      	cbz	r3, 2960 <rt_tsk_delete+0x88>
    2932:	4620      	mov	r0, r4
    2934:	f7ff f82c 	bl	1990 <rt_get_first>
    2938:	4606      	mov	r6, r0
    293a:	2100      	movs	r1, #0
    293c:	f7ff f9ea 	bl	1d14 <rt_ret_val>
    2940:	4630      	mov	r0, r6
    2942:	f7ff f8cb 	bl	1adc <rt_rmv_dly>
    2946:	7077      	strb	r7, [r6, #1]
    2948:	4631      	mov	r1, r6
    294a:	4640      	mov	r0, r8
    294c:	f7ff f808 	bl	1960 <rt_put_prio>
    2950:	68e3      	ldr	r3, [r4, #12]
    2952:	6a32      	ldr	r2, [r6, #32]
    2954:	8067      	strh	r7, [r4, #2]
    2956:	60a6      	str	r6, [r4, #8]
    2958:	60e2      	str	r2, [r4, #12]
    295a:	6234      	str	r4, [r6, #32]
    295c:	461c      	mov	r4, r3
    295e:	e7d0      	b.n	2902 <rt_tsk_delete+0x2a>
    2960:	68e2      	ldr	r2, [r4, #12]
    2962:	8063      	strh	r3, [r4, #2]
    2964:	60a3      	str	r3, [r4, #8]
    2966:	60e3      	str	r3, [r4, #12]
    2968:	4614      	mov	r4, r2
    296a:	e7ca      	b.n	2902 <rt_tsk_delete+0x2a>
    296c:	4b2d      	ldr	r3, [pc, #180]	; (2a24 <rt_tsk_delete+0x14c>)
    296e:	881b      	ldrh	r3, [r3, #0]
    2970:	4298      	cmp	r0, r3
    2972:	d84d      	bhi.n	2a10 <rt_tsk_delete+0x138>
    2974:	4b28      	ldr	r3, [pc, #160]	; (2a18 <rt_tsk_delete+0x140>)
    2976:	1e47      	subs	r7, r0, #1
    2978:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
    297c:	4699      	mov	r9, r3
    297e:	2e00      	cmp	r6, #0
    2980:	d046      	beq.n	2a10 <rt_tsk_delete+0x138>
    2982:	f04f 0a01 	mov.w	r10, #1
    2986:	4630      	mov	r0, r6
    2988:	f7ff f87a 	bl	1a80 <rt_rmv_list>
    298c:	4630      	mov	r0, r6
    298e:	f7ff f8a5 	bl	1adc <rt_rmv_dly>
    2992:	f8df b094 	ldr.w	r11, [pc, #148]	; 2a28 <rt_tsk_delete+0x150>
    2996:	6a34      	ldr	r4, [r6, #32]
    2998:	b9b4      	cbnz	r4, 29c8 <rt_tsk_delete+0xf0>
    299a:	6b31      	ldr	r1, [r6, #48]	; 0x30
    299c:	481f      	ldr	r0, [pc, #124]	; (2a1c <rt_tsk_delete+0x144>)
    299e:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
    29a2:	f7ff f9f0 	bl	1d86 <rt_free_box>
    29a6:	4631      	mov	r1, r6
    29a8:	6334      	str	r4, [r6, #48]	; 0x30
    29aa:	481d      	ldr	r0, [pc, #116]	; (2a20 <rt_tsk_delete+0x148>)
    29ac:	f7ff f9eb 	bl	1d86 <rt_free_box>
    29b0:	481d      	ldr	r0, [pc, #116]	; (2a28 <rt_tsk_delete+0x150>)
    29b2:	6829      	ldr	r1, [r5, #0]
    29b4:	6843      	ldr	r3, [r0, #4]
    29b6:	789a      	ldrb	r2, [r3, #2]
    29b8:	788b      	ldrb	r3, [r1, #2]
    29ba:	429a      	cmp	r2, r3
    29bc:	d9b4      	bls.n	2928 <rt_tsk_delete+0x50>
    29be:	2301      	movs	r3, #1
    29c0:	704b      	strb	r3, [r1, #1]
    29c2:	f7fe ffcd 	bl	1960 <rt_put_prio>
    29c6:	e7ad      	b.n	2924 <rt_tsk_delete+0x4c>
    29c8:	6863      	ldr	r3, [r4, #4]
    29ca:	b1db      	cbz	r3, 2a04 <rt_tsk_delete+0x12c>
    29cc:	4620      	mov	r0, r4
    29ce:	f7fe ffdf 	bl	1990 <rt_get_first>
    29d2:	4680      	mov	r8, r0
    29d4:	2100      	movs	r1, #0
    29d6:	f7ff f99d 	bl	1d14 <rt_ret_val>
    29da:	4640      	mov	r0, r8
    29dc:	f7ff f87e 	bl	1adc <rt_rmv_dly>
    29e0:	f888 a001 	strb.w	r10, [r8, #1]
    29e4:	4641      	mov	r1, r8
    29e6:	4658      	mov	r0, r11
    29e8:	f7fe ffba 	bl	1960 <rt_put_prio>
    29ec:	68e3      	ldr	r3, [r4, #12]
    29ee:	f8d8 2020 	ldr.w	r2, [r8, #32]
    29f2:	f8a4 a002 	strh.w	r10, [r4, #2]
    29f6:	f8c4 8008 	str.w	r8, [r4, #8]
    29fa:	60e2      	str	r2, [r4, #12]
    29fc:	f8c8 4020 	str.w	r4, [r8, #32]
    2a00:	461c      	mov	r4, r3
    2a02:	e7c9      	b.n	2998 <rt_tsk_delete+0xc0>
    2a04:	68e2      	ldr	r2, [r4, #12]
    2a06:	8063      	strh	r3, [r4, #2]
    2a08:	60a3      	str	r3, [r4, #8]
    2a0a:	60e3      	str	r3, [r4, #12]
    2a0c:	4614      	mov	r4, r2
    2a0e:	e7c3      	b.n	2998 <rt_tsk_delete+0xc0>
    2a10:	24ff      	movs	r4, #255	; 0xff
    2a12:	e789      	b.n	2928 <rt_tsk_delete+0x50>
    2a14:	100025cc 	.word	0x100025cc
    2a18:	10001dc8 	.word	0x10001dc8
    2a1c:	10001bb8 	.word	0x10001bb8
    2a20:	100021b0 	.word	0x100021b0
    2a24:	00004ecc 	.word	0x00004ecc
    2a28:	10002580 	.word	0x10002580

00002a2c <rt_sys_init>:
    2a2c:	b538      	push	{r3, r4, r5, lr}
    2a2e:	4b2c      	ldr	r3, [pc, #176]	; (2ae0 <rt_sys_init+0xb4>)
    2a30:	492c      	ldr	r1, [pc, #176]	; (2ae4 <rt_sys_init+0xb8>)
    2a32:	881a      	ldrh	r2, [r3, #0]
    2a34:	2300      	movs	r3, #0
    2a36:	4618      	mov	r0, r3
    2a38:	4293      	cmp	r3, r2
    2a3a:	d34d      	bcc.n	2ad8 <rt_sys_init+0xac>
    2a3c:	4b2a      	ldr	r3, [pc, #168]	; (2ae8 <rt_sys_init+0xbc>)
    2a3e:	2240      	movs	r2, #64	; 0x40
    2a40:	8819      	ldrh	r1, [r3, #0]
    2a42:	482a      	ldr	r0, [pc, #168]	; (2aec <rt_sys_init+0xc0>)
    2a44:	f7ff f96d 	bl	1d22 <_init_box>
    2a48:	4b29      	ldr	r3, [pc, #164]	; (2af0 <rt_sys_init+0xc4>)
    2a4a:	482a      	ldr	r0, [pc, #168]	; (2af4 <rt_sys_init+0xc8>)
    2a4c:	881a      	ldrh	r2, [r3, #0]
    2a4e:	4b2a      	ldr	r3, [pc, #168]	; (2af8 <rt_sys_init+0xcc>)
    2a50:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
    2a54:	6819      	ldr	r1, [r3, #0]
    2a56:	f7ff f964 	bl	1d22 <_init_box>
    2a5a:	4b28      	ldr	r3, [pc, #160]	; (2afc <rt_sys_init+0xd0>)
    2a5c:	2208      	movs	r2, #8
    2a5e:	8819      	ldrh	r1, [r3, #0]
    2a60:	4b27      	ldr	r3, [pc, #156]	; (2b00 <rt_sys_init+0xd4>)
    2a62:	4c28      	ldr	r4, [pc, #160]	; (2b04 <rt_sys_init+0xd8>)
    2a64:	6818      	ldr	r0, [r3, #0]
    2a66:	f7ff f95c 	bl	1d22 <_init_box>
    2a6a:	23ff      	movs	r3, #255	; 0xff
    2a6c:	2500      	movs	r5, #0
    2a6e:	70e3      	strb	r3, [r4, #3]
    2a70:	2301      	movs	r3, #1
    2a72:	4820      	ldr	r0, [pc, #128]	; (2af4 <rt_sys_init+0xc8>)
    2a74:	7063      	strb	r3, [r4, #1]
    2a76:	62a5      	str	r5, [r4, #40]	; 0x28
    2a78:	7025      	strb	r5, [r4, #0]
    2a7a:	70a5      	strb	r5, [r4, #2]
    2a7c:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
    2a80:	6065      	str	r5, [r4, #4]
    2a82:	60a5      	str	r5, [r4, #8]
    2a84:	60e5      	str	r5, [r4, #12]
    2a86:	6125      	str	r5, [r4, #16]
    2a88:	6225      	str	r5, [r4, #32]
    2a8a:	82a5      	strh	r5, [r4, #20]
    2a8c:	82e5      	strh	r5, [r4, #22]
    2a8e:	8325      	strh	r5, [r4, #24]
    2a90:	8365      	strh	r5, [r4, #26]
    2a92:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
    2a96:	f7ff f969 	bl	1d6c <rt_alloc_box>
    2a9a:	491b      	ldr	r1, [pc, #108]	; (2b08 <rt_sys_init+0xdc>)
    2a9c:	6320      	str	r0, [r4, #48]	; 0x30
    2a9e:	4620      	mov	r0, r4
    2aa0:	f7ff f8ee 	bl	1c80 <rt_init_stack>
    2aa4:	2204      	movs	r2, #4
    2aa6:	4b19      	ldr	r3, [pc, #100]	; (2b0c <rt_sys_init+0xe0>)
    2aa8:	4620      	mov	r0, r4
    2aaa:	701a      	strb	r2, [r3, #0]
    2aac:	605d      	str	r5, [r3, #4]
    2aae:	4b18      	ldr	r3, [pc, #96]	; (2b10 <rt_sys_init+0xe4>)
    2ab0:	701a      	strb	r2, [r3, #0]
    2ab2:	60dd      	str	r5, [r3, #12]
    2ab4:	611d      	str	r5, [r3, #16]
    2ab6:	829d      	strh	r5, [r3, #20]
    2ab8:	4b16      	ldr	r3, [pc, #88]	; (2b14 <rt_sys_init+0xe8>)
    2aba:	601c      	str	r4, [r3, #0]
    2abc:	2302      	movs	r3, #2
    2abe:	7063      	strb	r3, [r4, #1]
    2ac0:	f7ff fe18 	bl	26f4 <rt_switch_req>
    2ac4:	4a14      	ldr	r2, [pc, #80]	; (2b18 <rt_sys_init+0xec>)
    2ac6:	4b15      	ldr	r3, [pc, #84]	; (2b1c <rt_sys_init+0xf0>)
    2ac8:	7812      	ldrb	r2, [r2, #0]
    2aca:	701d      	strb	r5, [r3, #0]
    2acc:	705d      	strb	r5, [r3, #1]
    2ace:	70da      	strb	r2, [r3, #3]
    2ad0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2ad4:	f7ff ba9e 	b.w	2014 <rt_init_robin>
    2ad8:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
    2adc:	3301      	adds	r3, #1
    2ade:	e7ab      	b.n	2a38 <rt_sys_init+0xc>
    2ae0:	00004ecc 	.word	0x00004ecc
    2ae4:	10001dc8 	.word	0x10001dc8
    2ae8:	00004e98 	.word	0x00004e98
    2aec:	100021b0 	.word	0x100021b0
    2af0:	00004ee8 	.word	0x00004ee8
    2af4:	10001bb8 	.word	0x10001bb8
    2af8:	00004e94 	.word	0x00004e94
    2afc:	00004e9a 	.word	0x00004e9a
    2b00:	10000944 	.word	0x10000944
    2b04:	100025d4 	.word	0x100025d4
    2b08:	000018c1 	.word	0x000018c1
    2b0c:	10002580 	.word	0x10002580
    2b10:	10002598 	.word	0x10002598
    2b14:	100025cc 	.word	0x100025cc
    2b18:	00004ec9 	.word	0x00004ec9
    2b1c:	10001e04 	.word	0x10001e04

00002b20 <rt_sys_start>:
    2b20:	b508      	push	{r3, lr}
    2b22:	4b1e      	ldr	r3, [pc, #120]	; (2b9c <rt_sys_start+0x7c>)
    2b24:	681a      	ldr	r2, [r3, #0]
    2b26:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
    2b2a:	601a      	str	r2, [r3, #0]
    2b2c:	681b      	ldr	r3, [r3, #0]
    2b2e:	021b      	lsls	r3, r3, #8
    2b30:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
    2b34:	43db      	mvns	r3, r3
    2b36:	fab3 f383 	clz	r3, r3
    2b3a:	4a19      	ldr	r2, [pc, #100]	; (2ba0 <rt_sys_start+0x80>)
    2b3c:	b2db      	uxtb	r3, r3
    2b3e:	6812      	ldr	r2, [r2, #0]
    2b40:	f1c3 0308 	rsb	r3, r3, #8
    2b44:	f3c2 2202 	ubfx	r2, r2, #8, #3
    2b48:	4293      	cmp	r3, r2
    2b4a:	bf98      	it	ls
    2b4c:	1c53      	addls	r3, r2, #1
    2b4e:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
    2b52:	4814      	ldr	r0, [pc, #80]	; (2ba4 <rt_sys_start+0x84>)
    2b54:	fa02 f303 	lsl.w	r3, r2, r3
    2b58:	6801      	ldr	r1, [r0, #0]
    2b5a:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
    2b5e:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
    2b62:	4313      	orrs	r3, r2
    2b64:	6003      	str	r3, [r0, #0]
    2b66:	f7ff f841 	bl	1bec <os_tick_init>
    2b6a:	4b0f      	ldr	r3, [pc, #60]	; (2ba8 <rt_sys_start+0x88>)
    2b6c:	2800      	cmp	r0, #0
    2b6e:	6018      	str	r0, [r3, #0]
    2b70:	db12      	blt.n	2b98 <rt_sys_start+0x78>
    2b72:	22ff      	movs	r2, #255	; 0xff
    2b74:	2101      	movs	r1, #1
    2b76:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
    2b7a:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
    2b7e:	7002      	strb	r2, [r0, #0]
    2b80:	681a      	ldr	r2, [r3, #0]
    2b82:	0953      	lsrs	r3, r2, #5
    2b84:	009b      	lsls	r3, r3, #2
    2b86:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2b8a:	f002 021f 	and.w	r2, r2, #31
    2b8e:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
    2b92:	fa01 f202 	lsl.w	r2, r1, r2
    2b96:	601a      	str	r2, [r3, #0]
    2b98:	bd08      	pop	{r3, pc}
    2b9a:	bf00      	nop
    2b9c:	e000ed20 	.word	0xe000ed20
    2ba0:	e000ed0c 	.word	0xe000ed0c
    2ba4:	e000ed1c 	.word	0xe000ed1c
    2ba8:	100025b0 	.word	0x100025b0

00002bac <rt_mut_init>:
    2bac:	2303      	movs	r3, #3
    2bae:	7003      	strb	r3, [r0, #0]
    2bb0:	2300      	movs	r3, #0
    2bb2:	8043      	strh	r3, [r0, #2]
    2bb4:	6043      	str	r3, [r0, #4]
    2bb6:	6083      	str	r3, [r0, #8]
    2bb8:	60c3      	str	r3, [r0, #12]
    2bba:	4770      	bx	lr

00002bbc <rt_mut_release>:
    2bbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    2bc0:	8843      	ldrh	r3, [r0, #2]
    2bc2:	4605      	mov	r5, r0
    2bc4:	2b00      	cmp	r3, #0
    2bc6:	d063      	beq.n	2c90 <rt_mut_release+0xd4>
    2bc8:	4f32      	ldr	r7, [pc, #200]	; (2c94 <rt_mut_release+0xd8>)
    2bca:	6881      	ldr	r1, [r0, #8]
    2bcc:	683a      	ldr	r2, [r7, #0]
    2bce:	4291      	cmp	r1, r2
    2bd0:	d15e      	bne.n	2c90 <rt_mut_release+0xd4>
    2bd2:	3b01      	subs	r3, #1
    2bd4:	b29b      	uxth	r3, r3
    2bd6:	8043      	strh	r3, [r0, #2]
    2bd8:	b11b      	cbz	r3, 2be2 <rt_mut_release+0x26>
    2bda:	2400      	movs	r4, #0
    2bdc:	4620      	mov	r0, r4
    2bde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    2be2:	6a0b      	ldr	r3, [r1, #32]
    2be4:	4298      	cmp	r0, r3
    2be6:	d129      	bne.n	2c3c <rt_mut_release+0x80>
    2be8:	68c3      	ldr	r3, [r0, #12]
    2bea:	620b      	str	r3, [r1, #32]
    2bec:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
    2bf0:	6a0c      	ldr	r4, [r1, #32]
    2bf2:	bb5c      	cbnz	r4, 2c4c <rt_mut_release+0x90>
    2bf4:	708b      	strb	r3, [r1, #2]
    2bf6:	686a      	ldr	r2, [r5, #4]
    2bf8:	f8df 809c 	ldr.w	r8, [pc, #156]	; 2c98 <rt_mut_release+0xdc>
    2bfc:	2a00      	cmp	r2, #0
    2bfe:	d03b      	beq.n	2c78 <rt_mut_release+0xbc>
    2c00:	4628      	mov	r0, r5
    2c02:	f7fe fec5 	bl	1990 <rt_get_first>
    2c06:	4606      	mov	r6, r0
    2c08:	f04f 0901 	mov.w	r9, #1
    2c0c:	4621      	mov	r1, r4
    2c0e:	f7ff f881 	bl	1d14 <rt_ret_val>
    2c12:	4630      	mov	r0, r6
    2c14:	f7fe ff62 	bl	1adc <rt_rmv_dly>
    2c18:	6a33      	ldr	r3, [r6, #32]
    2c1a:	6839      	ldr	r1, [r7, #0]
    2c1c:	60eb      	str	r3, [r5, #12]
    2c1e:	f8d8 3004 	ldr.w	r3, [r8, #4]
    2c22:	f8a5 9002 	strh.w	r9, [r5, #2]
    2c26:	60ae      	str	r6, [r5, #8]
    2c28:	6235      	str	r5, [r6, #32]
    2c2a:	788a      	ldrb	r2, [r1, #2]
    2c2c:	789b      	ldrb	r3, [r3, #2]
    2c2e:	429a      	cmp	r2, r3
    2c30:	d314      	bcc.n	2c5c <rt_mut_release+0xa0>
    2c32:	4630      	mov	r0, r6
    2c34:	f7ff fd78 	bl	2728 <rt_dispatch>
    2c38:	e7d0      	b.n	2bdc <rt_mut_release+0x20>
    2c3a:	4613      	mov	r3, r2
    2c3c:	2b00      	cmp	r3, #0
    2c3e:	d0d5      	beq.n	2bec <rt_mut_release+0x30>
    2c40:	68da      	ldr	r2, [r3, #12]
    2c42:	4295      	cmp	r5, r2
    2c44:	d1f9      	bne.n	2c3a <rt_mut_release+0x7e>
    2c46:	68ea      	ldr	r2, [r5, #12]
    2c48:	60da      	str	r2, [r3, #12]
    2c4a:	e7cf      	b.n	2bec <rt_mut_release+0x30>
    2c4c:	6862      	ldr	r2, [r4, #4]
    2c4e:	b11a      	cbz	r2, 2c58 <rt_mut_release+0x9c>
    2c50:	7892      	ldrb	r2, [r2, #2]
    2c52:	4293      	cmp	r3, r2
    2c54:	bf38      	it	cc
    2c56:	4613      	movcc	r3, r2
    2c58:	68e4      	ldr	r4, [r4, #12]
    2c5a:	e7ca      	b.n	2bf2 <rt_mut_release+0x36>
    2c5c:	4640      	mov	r0, r8
    2c5e:	f7fe fe7f 	bl	1960 <rt_put_prio>
    2c62:	4631      	mov	r1, r6
    2c64:	4640      	mov	r0, r8
    2c66:	f7fe fe7b 	bl	1960 <rt_put_prio>
    2c6a:	683b      	ldr	r3, [r7, #0]
    2c6c:	f883 9001 	strb.w	r9, [r3, #1]
    2c70:	f886 9001 	strb.w	r9, [r6, #1]
    2c74:	4620      	mov	r0, r4
    2c76:	e7dd      	b.n	2c34 <rt_mut_release+0x78>
    2c78:	f8d8 2004 	ldr.w	r2, [r8, #4]
    2c7c:	7892      	ldrb	r2, [r2, #2]
    2c7e:	429a      	cmp	r2, r3
    2c80:	d9ab      	bls.n	2bda <rt_mut_release+0x1e>
    2c82:	4640      	mov	r0, r8
    2c84:	f7fe fe6c 	bl	1960 <rt_put_prio>
    2c88:	2201      	movs	r2, #1
    2c8a:	683b      	ldr	r3, [r7, #0]
    2c8c:	705a      	strb	r2, [r3, #1]
    2c8e:	e7f1      	b.n	2c74 <rt_mut_release+0xb8>
    2c90:	24ff      	movs	r4, #255	; 0xff
    2c92:	e7a3      	b.n	2bdc <rt_mut_release+0x20>
    2c94:	100025cc 	.word	0x100025cc
    2c98:	10002580 	.word	0x10002580

00002c9c <rt_mut_wait>:
    2c9c:	8843      	ldrh	r3, [r0, #2]
    2c9e:	b570      	push	{r4, r5, r6, lr}
    2ca0:	4604      	mov	r4, r0
    2ca2:	460e      	mov	r6, r1
    2ca4:	4d13      	ldr	r5, [pc, #76]	; (2cf4 <rt_mut_wait+0x58>)
    2ca6:	b943      	cbnz	r3, 2cba <rt_mut_wait+0x1e>
    2ca8:	682a      	ldr	r2, [r5, #0]
    2caa:	6a11      	ldr	r1, [r2, #32]
    2cac:	6082      	str	r2, [r0, #8]
    2cae:	60c1      	str	r1, [r0, #12]
    2cb0:	6210      	str	r0, [r2, #32]
    2cb2:	3301      	adds	r3, #1
    2cb4:	8063      	strh	r3, [r4, #2]
    2cb6:	2000      	movs	r0, #0
    2cb8:	bd70      	pop	{r4, r5, r6, pc}
    2cba:	6880      	ldr	r0, [r0, #8]
    2cbc:	682a      	ldr	r2, [r5, #0]
    2cbe:	4290      	cmp	r0, r2
    2cc0:	d0f7      	beq.n	2cb2 <rt_mut_wait+0x16>
    2cc2:	b181      	cbz	r1, 2ce6 <rt_mut_wait+0x4a>
    2cc4:	7893      	ldrb	r3, [r2, #2]
    2cc6:	7882      	ldrb	r2, [r0, #2]
    2cc8:	429a      	cmp	r2, r3
    2cca:	d202      	bcs.n	2cd2 <rt_mut_wait+0x36>
    2ccc:	7083      	strb	r3, [r0, #2]
    2cce:	f7fe feed 	bl	1aac <rt_resort_prio>
    2cd2:	6862      	ldr	r2, [r4, #4]
    2cd4:	b14a      	cbz	r2, 2cea <rt_mut_wait+0x4e>
    2cd6:	6829      	ldr	r1, [r5, #0]
    2cd8:	4620      	mov	r0, r4
    2cda:	f7fe fe41 	bl	1960 <rt_put_prio>
    2cde:	2109      	movs	r1, #9
    2ce0:	4630      	mov	r0, r6
    2ce2:	f7ff fd43 	bl	276c <rt_block>
    2ce6:	2001      	movs	r0, #1
    2ce8:	bd70      	pop	{r4, r5, r6, pc}
    2cea:	682b      	ldr	r3, [r5, #0]
    2cec:	6063      	str	r3, [r4, #4]
    2cee:	605a      	str	r2, [r3, #4]
    2cf0:	609c      	str	r4, [r3, #8]
    2cf2:	e7f4      	b.n	2cde <rt_mut_wait+0x42>
    2cf4:	100025cc 	.word	0x100025cc

00002cf8 <rt_dly_wait>:
    2cf8:	2103      	movs	r1, #3
    2cfa:	f7ff bd37 	b.w	276c <rt_block>
	...

00002d00 <rt_sem_psh>:
    2d00:	6842      	ldr	r2, [r0, #4]
    2d02:	b510      	push	{r4, lr}
    2d04:	b17a      	cbz	r2, 2d26 <rt_sem_psh+0x26>
    2d06:	f7fe fe43 	bl	1990 <rt_get_first>
    2d0a:	4604      	mov	r4, r0
    2d0c:	f7fe fee6 	bl	1adc <rt_rmv_dly>
    2d10:	2101      	movs	r1, #1
    2d12:	4620      	mov	r0, r4
    2d14:	7061      	strb	r1, [r4, #1]
    2d16:	f7fe fffd 	bl	1d14 <rt_ret_val>
    2d1a:	4621      	mov	r1, r4
    2d1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    2d20:	4803      	ldr	r0, [pc, #12]	; (2d30 <rt_sem_psh+0x30>)
    2d22:	f7fe be1d 	b.w	1960 <rt_put_prio>
    2d26:	8842      	ldrh	r2, [r0, #2]
    2d28:	3201      	adds	r2, #1
    2d2a:	8042      	strh	r2, [r0, #2]
    2d2c:	bd10      	pop	{r4, pc}
    2d2e:	bf00      	nop
    2d30:	10002580 	.word	0x10002580

00002d34 <gpio_set>:
    2d34:	b510      	push	{r4, lr}
    2d36:	2100      	movs	r1, #0
    2d38:	4604      	mov	r4, r0
    2d3a:	f000 fbc9 	bl	34d0 <pin_function>
    2d3e:	2001      	movs	r0, #1
    2d40:	f004 041f 	and.w	r4, r4, #31
    2d44:	40a0      	lsls	r0, r4
    2d46:	bd10      	pop	{r4, pc}

00002d48 <gpio_init>:
    2d48:	b538      	push	{r3, r4, r5, lr}
    2d4a:	4605      	mov	r5, r0
    2d4c:	1c4b      	adds	r3, r1, #1
    2d4e:	460c      	mov	r4, r1
    2d50:	6029      	str	r1, [r5, #0]
    2d52:	d00f      	beq.n	2d74 <gpio_init+0x2c>
    2d54:	4608      	mov	r0, r1
    2d56:	f7ff ffed 	bl	2d34 <gpio_set>
    2d5a:	f024 041f 	bic.w	r4, r4, #31
    2d5e:	f104 0318 	add.w	r3, r4, #24
    2d62:	60eb      	str	r3, [r5, #12]
    2d64:	f104 031c 	add.w	r3, r4, #28
    2d68:	612b      	str	r3, [r5, #16]
    2d6a:	f104 0314 	add.w	r3, r4, #20
    2d6e:	6068      	str	r0, [r5, #4]
    2d70:	616b      	str	r3, [r5, #20]
    2d72:	60ac      	str	r4, [r5, #8]
    2d74:	bd38      	pop	{r3, r4, r5, pc}

00002d76 <gpio_mode>:
    2d76:	6800      	ldr	r0, [r0, #0]
    2d78:	f000 bbc3 	b.w	3502 <pin_mode>

00002d7c <gpio_dir>:
    2d7c:	b111      	cbz	r1, 2d84 <gpio_dir+0x8>
    2d7e:	2901      	cmp	r1, #1
    2d80:	d007      	beq.n	2d92 <gpio_dir+0x16>
    2d82:	4770      	bx	lr
    2d84:	6882      	ldr	r2, [r0, #8]
    2d86:	6841      	ldr	r1, [r0, #4]
    2d88:	6813      	ldr	r3, [r2, #0]
    2d8a:	ea23 0301 	bic.w	r3, r3, r1
    2d8e:	6013      	str	r3, [r2, #0]
    2d90:	4770      	bx	lr
    2d92:	6882      	ldr	r2, [r0, #8]
    2d94:	6841      	ldr	r1, [r0, #4]
    2d96:	6813      	ldr	r3, [r2, #0]
    2d98:	430b      	orrs	r3, r1
    2d9a:	e7f8      	b.n	2d8e <gpio_dir+0x12>

00002d9c <hal_sleep>:
    2d9c:	b508      	push	{r3, lr}
    2d9e:	f7fe fcbf 	bl	1720 <mbed_interface_disconnect>
    2da2:	2200      	movs	r2, #0
    2da4:	4b04      	ldr	r3, [pc, #16]	; (2db8 <hal_sleep+0x1c>)
    2da6:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
    2daa:	4a04      	ldr	r2, [pc, #16]	; (2dbc <hal_sleep+0x20>)
    2dac:	6913      	ldr	r3, [r2, #16]
    2dae:	f023 0304 	bic.w	r3, r3, #4
    2db2:	6113      	str	r3, [r2, #16]
    2db4:	bf30      	wfi
    2db6:	bd08      	pop	{r3, pc}
    2db8:	400fc000 	.word	0x400fc000
    2dbc:	e000ed00 	.word	0xe000ed00

00002dc0 <uart_irq>:
    2dc0:	2801      	cmp	r0, #1
    2dc2:	b410      	push	{r4}
    2dc4:	d008      	beq.n	2dd8 <uart_irq+0x18>
    2dc6:	2802      	cmp	r0, #2
    2dc8:	d008      	beq.n	2ddc <uart_irq+0x1c>
    2dca:	bc10      	pop	{r4}
    2dcc:	4770      	bx	lr
    2dce:	6850      	ldr	r0, [r2, #4]
    2dd0:	f020 0001 	bic.w	r0, r0, #1
    2dd4:	6050      	str	r0, [r2, #4]
    2dd6:	e010      	b.n	2dfa <uart_irq+0x3a>
    2dd8:	4603      	mov	r3, r0
    2dda:	e00e      	b.n	2dfa <uart_irq+0x3a>
    2ddc:	2338      	movs	r3, #56	; 0x38
    2dde:	480f      	ldr	r0, [pc, #60]	; (2e1c <uart_irq+0x5c>)
    2de0:	fb03 0301 	mla	r3, r3, r1, r0
    2de4:	6858      	ldr	r0, [r3, #4]
    2de6:	3001      	adds	r0, #1
    2de8:	d006      	beq.n	2df8 <uart_irq+0x38>
    2dea:	6918      	ldr	r0, [r3, #16]
    2dec:	689c      	ldr	r4, [r3, #8]
    2dee:	6004      	str	r4, [r0, #0]
    2df0:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
    2df4:	2b00      	cmp	r3, #0
    2df6:	d0ea      	beq.n	2dce <uart_irq+0xe>
    2df8:	2300      	movs	r3, #0
    2dfa:	2238      	movs	r2, #56	; 0x38
    2dfc:	4351      	muls	r1, r2
    2dfe:	4807      	ldr	r0, [pc, #28]	; (2e1c <uart_irq+0x5c>)
    2e00:	1842      	adds	r2, r0, r1
    2e02:	5840      	ldr	r0, [r0, r1]
    2e04:	2800      	cmp	r0, #0
    2e06:	d0e0      	beq.n	2dca <uart_irq+0xa>
    2e08:	b91b      	cbnz	r3, 2e12 <uart_irq+0x52>
    2e0a:	f892 2036 	ldrb.w	r2, [r2, #54]	; 0x36
    2e0e:	2a00      	cmp	r2, #0
    2e10:	d0db      	beq.n	2dca <uart_irq+0xa>
    2e12:	4a03      	ldr	r2, [pc, #12]	; (2e20 <uart_irq+0x60>)
    2e14:	4619      	mov	r1, r3
    2e16:	6812      	ldr	r2, [r2, #0]
    2e18:	bc10      	pop	{r4}
    2e1a:	4710      	bx	r2
    2e1c:	100019c0 	.word	0x100019c0
    2e20:	100019b8 	.word	0x100019b8

00002e24 <uart0_irq>:
    2e24:	4a03      	ldr	r2, [pc, #12]	; (2e34 <uart0_irq+0x10>)
    2e26:	2100      	movs	r1, #0
    2e28:	6890      	ldr	r0, [r2, #8]
    2e2a:	f3c0 0042 	ubfx	r0, r0, #1, #3
    2e2e:	f7ff bfc7 	b.w	2dc0 <uart_irq>
    2e32:	bf00      	nop
    2e34:	4000c000 	.word	0x4000c000

00002e38 <uart1_irq>:
    2e38:	4a03      	ldr	r2, [pc, #12]	; (2e48 <uart1_irq+0x10>)
    2e3a:	2101      	movs	r1, #1
    2e3c:	6890      	ldr	r0, [r2, #8]
    2e3e:	f3c0 0042 	ubfx	r0, r0, #1, #3
    2e42:	f7ff bfbd 	b.w	2dc0 <uart_irq>
    2e46:	bf00      	nop
    2e48:	40010000 	.word	0x40010000

00002e4c <uart2_irq>:
    2e4c:	4a03      	ldr	r2, [pc, #12]	; (2e5c <uart2_irq+0x10>)
    2e4e:	2102      	movs	r1, #2
    2e50:	6890      	ldr	r0, [r2, #8]
    2e52:	f3c0 0042 	ubfx	r0, r0, #1, #3
    2e56:	f7ff bfb3 	b.w	2dc0 <uart_irq>
    2e5a:	bf00      	nop
    2e5c:	40098000 	.word	0x40098000

00002e60 <uart3_irq>:
    2e60:	4a03      	ldr	r2, [pc, #12]	; (2e70 <uart3_irq+0x10>)
    2e62:	2103      	movs	r1, #3
    2e64:	6890      	ldr	r0, [r2, #8]
    2e66:	f3c0 0042 	ubfx	r0, r0, #1, #3
    2e6a:	f7ff bfa9 	b.w	2dc0 <uart_irq>
    2e6e:	bf00      	nop
    2e70:	4009c000 	.word	0x4009c000

00002e74 <serial_irq_set_internal>:
    2e74:	b570      	push	{r4, r5, r6, lr}
    2e76:	460b      	mov	r3, r1
    2e78:	6806      	ldr	r6, [r0, #0]
    2e7a:	4929      	ldr	r1, [pc, #164]	; (2f20 <serial_irq_set_internal+0xac>)
    2e7c:	428e      	cmp	r6, r1
    2e7e:	d022      	beq.n	2ec6 <serial_irq_set_internal+0x52>
    2e80:	dc06      	bgt.n	2e90 <serial_irq_set_internal+0x1c>
    2e82:	f5a1 4180 	sub.w	r1, r1, #16384	; 0x4000
    2e86:	428e      	cmp	r6, r1
    2e88:	d00c      	beq.n	2ea4 <serial_irq_set_internal+0x30>
    2e8a:	2100      	movs	r1, #0
    2e8c:	460c      	mov	r4, r1
    2e8e:	e00b      	b.n	2ea8 <serial_irq_set_internal+0x34>
    2e90:	4924      	ldr	r1, [pc, #144]	; (2f24 <serial_irq_set_internal+0xb0>)
    2e92:	428e      	cmp	r6, r1
    2e94:	d01a      	beq.n	2ecc <serial_irq_set_internal+0x58>
    2e96:	f501 4180 	add.w	r1, r1, #16384	; 0x4000
    2e9a:	428e      	cmp	r6, r1
    2e9c:	d1f5      	bne.n	2e8a <serial_irq_set_internal+0x16>
    2e9e:	4922      	ldr	r1, [pc, #136]	; (2f28 <serial_irq_set_internal+0xb4>)
    2ea0:	2408      	movs	r4, #8
    2ea2:	e001      	b.n	2ea8 <serial_irq_set_internal+0x34>
    2ea4:	2405      	movs	r4, #5
    2ea6:	4921      	ldr	r1, [pc, #132]	; (2f2c <serial_irq_set_internal+0xb8>)
    2ea8:	b19a      	cbz	r2, 2ed2 <serial_irq_set_internal+0x5e>
    2eaa:	2501      	movs	r5, #1
    2eac:	6872      	ldr	r2, [r6, #4]
    2eae:	fa05 f303 	lsl.w	r3, r5, r3
    2eb2:	4313      	orrs	r3, r2
    2eb4:	6073      	str	r3, [r6, #4]
    2eb6:	4620      	mov	r0, r4
    2eb8:	f000 fb50 	bl	355c <__NVIC_SetVector>
    2ebc:	4b1c      	ldr	r3, [pc, #112]	; (2f30 <serial_irq_set_internal+0xbc>)
    2ebe:	fa05 f404 	lsl.w	r4, r5, r4
    2ec2:	601c      	str	r4, [r3, #0]
    2ec4:	bd70      	pop	{r4, r5, r6, pc}
    2ec6:	491b      	ldr	r1, [pc, #108]	; (2f34 <serial_irq_set_internal+0xc0>)
    2ec8:	2406      	movs	r4, #6
    2eca:	e7ed      	b.n	2ea8 <serial_irq_set_internal+0x34>
    2ecc:	491a      	ldr	r1, [pc, #104]	; (2f38 <serial_irq_set_internal+0xc4>)
    2ece:	2407      	movs	r4, #7
    2ed0:	e7ea      	b.n	2ea8 <serial_irq_set_internal+0x34>
    2ed2:	2b01      	cmp	r3, #1
    2ed4:	d00a      	beq.n	2eec <serial_irq_set_internal+0x78>
    2ed6:	6842      	ldr	r2, [r0, #4]
    2ed8:	2038      	movs	r0, #56	; 0x38
    2eda:	4918      	ldr	r1, [pc, #96]	; (2f3c <serial_irq_set_internal+0xc8>)
    2edc:	fb00 1202 	mla	r2, r0, r2, r1
    2ee0:	f892 1036 	ldrb.w	r1, [r2, #54]	; 0x36
    2ee4:	f892 2035 	ldrb.w	r2, [r2, #53]	; 0x35
    2ee8:	42d1      	cmn	r1, r2
    2eea:	d117      	bne.n	2f1c <serial_irq_set_internal+0xa8>
    2eec:	2201      	movs	r2, #1
    2eee:	fa02 f003 	lsl.w	r0, r2, r3
    2ef2:	fab3 f383 	clz	r3, r3
    2ef6:	6871      	ldr	r1, [r6, #4]
    2ef8:	095b      	lsrs	r3, r3, #5
    2efa:	ea21 0100 	bic.w	r1, r1, r0
    2efe:	6071      	str	r1, [r6, #4]
    2f00:	6871      	ldr	r1, [r6, #4]
    2f02:	fa02 f303 	lsl.w	r3, r2, r3
    2f06:	420b      	tst	r3, r1
    2f08:	d108      	bne.n	2f1c <serial_irq_set_internal+0xa8>
    2f0a:	4b09      	ldr	r3, [pc, #36]	; (2f30 <serial_irq_set_internal+0xbc>)
    2f0c:	fa02 f404 	lsl.w	r4, r2, r4
    2f10:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
    2f14:	f3bf 8f4f 	dsb	sy
    2f18:	f3bf 8f6f 	isb	sy
    2f1c:	bd70      	pop	{r4, r5, r6, pc}
    2f1e:	bf00      	nop
    2f20:	40010000 	.word	0x40010000
    2f24:	40098000 	.word	0x40098000
    2f28:	00002e61 	.word	0x00002e61
    2f2c:	00002e25 	.word	0x00002e25
    2f30:	e000e100 	.word	0xe000e100
    2f34:	00002e39 	.word	0x00002e39
    2f38:	00002e4d 	.word	0x00002e4d
    2f3c:	100019c0 	.word	0x100019c0

00002f40 <serial_baud>:
    2f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    2f44:	4b64      	ldr	r3, [pc, #400]	; (30d8 <serial_baud+0x198>)
    2f46:	6804      	ldr	r4, [r0, #0]
    2f48:	b087      	sub	sp, #28
    2f4a:	429c      	cmp	r4, r3
    2f4c:	f000 808d 	beq.w	306a <serial_baud+0x12a>
    2f50:	dc6a      	bgt.n	3028 <serial_baud+0xe8>
    2f52:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
    2f56:	429c      	cmp	r4, r3
    2f58:	d079      	beq.n	304e <serial_baud+0x10e>
    2f5a:	4b60      	ldr	r3, [pc, #384]	; (30dc <serial_baud+0x19c>)
    2f5c:	0108      	lsls	r0, r1, #4
    2f5e:	f8d3 c000 	ldr.w	r12, [r3]
    2f62:	fbbc f2f0 	udiv	r2, r12, r0
    2f66:	b293      	uxth	r3, r2
    2f68:	fb00 c212 	mls	r2, r0, r2, r12
    2f6c:	2a00      	cmp	r2, #0
    2f6e:	f000 80aa 	beq.w	30c6 <serial_baud+0x186>
    2f72:	2501      	movs	r5, #1
    2f74:	46e6      	mov	lr, r12
    2f76:	4699      	mov	r9, r3
    2f78:	46ab      	mov	r11, r5
    2f7a:	f04f 0a00 	mov.w	r10, #0
    2f7e:	9101      	str	r1, [sp, #4]
    2f80:	9103      	str	r1, [sp, #12]
    2f82:	2600      	movs	r6, #0
    2f84:	ea4f 034e 	mov.w	r3, lr, lsl #1
    2f88:	9304      	str	r3, [sp, #16]
    2f8a:	f8dd 8004 	ldr.w	r8, [sp, #4]
    2f8e:	ea4f 038e 	mov.w	r3, lr, lsl #2
    2f92:	b2ef      	uxtb	r7, r5
    2f94:	9305      	str	r3, [sp, #20]
    2f96:	b2f3      	uxtb	r3, r6
    2f98:	9300      	str	r3, [sp, #0]
    2f9a:	9b04      	ldr	r3, [sp, #16]
    2f9c:	2b00      	cmp	r3, #0
    2f9e:	bfab      	itete	ge
    2fa0:	9b05      	ldrge	r3, [sp, #20]
    2fa2:	fbb3 f3f8 	udivlt	r3, r3, r8
    2fa6:	fbb3 f3f8 	udivge	r3, r3, r8
    2faa:	091b      	lsrlt	r3, r3, #4
    2fac:	bfa8      	it	ge
    2fae:	095b      	lsrge	r3, r3, #5
    2fb0:	3301      	adds	r3, #1
    2fb2:	f3c3 034f 	ubfx	r3, r3, #1, #16
    2fb6:	2b00      	cmp	r3, #0
    2fb8:	f000 8088 	beq.w	30cc <serial_baud+0x18c>
    2fbc:	b116      	cbz	r6, 2fc4 <serial_baud+0x84>
    2fbe:	2b01      	cmp	r3, #1
    2fc0:	bf08      	it	eq
    2fc2:	2302      	moveq	r3, #2
    2fc4:	19a8      	adds	r0, r5, r6
    2fc6:	4358      	muls	r0, r3
    2fc8:	00c0      	lsls	r0, r0, #3
    2fca:	fbbe f0f0 	udiv	r0, lr, r0
    2fce:	3001      	adds	r0, #1
    2fd0:	ebc1 0050 	rsb	r0, r1, r0, lsr #1
    2fd4:	2800      	cmp	r0, #0
    2fd6:	bfb8      	it	lt
    2fd8:	4240      	neglt	r0, r0
    2fda:	9002      	str	r0, [sp, #8]
    2fdc:	9a02      	ldr	r2, [sp, #8]
    2fde:	9803      	ldr	r0, [sp, #12]
    2fe0:	4282      	cmp	r2, r0
    2fe2:	da62      	bge.n	30aa <serial_baud+0x16a>
    2fe4:	4291      	cmp	r1, r2
    2fe6:	d15a      	bne.n	309e <serial_baud+0x15e>
    2fe8:	2d0f      	cmp	r5, #15
    2fea:	d107      	bne.n	2ffc <serial_baud+0xbc>
    2fec:	46bb      	mov	r11, r7
    2fee:	4699      	mov	r9, r3
    2ff0:	f8dd a000 	ldr.w	r10, [sp]
    2ff4:	465f      	mov	r7, r11
    2ff6:	464b      	mov	r3, r9
    2ff8:	f8cd a000 	str.w	r10, [sp]
    2ffc:	7b21      	ldrb	r1, [r4, #12]
    2ffe:	f041 0180 	orr.w	r1, r1, #128	; 0x80
    3002:	7321      	strb	r1, [r4, #12]
    3004:	f3c3 2107 	ubfx	r1, r3, #8, #8
    3008:	b2db      	uxtb	r3, r3
    300a:	7121      	strb	r1, [r4, #4]
    300c:	7023      	strb	r3, [r4, #0]
    300e:	9b00      	ldr	r3, [sp, #0]
    3010:	ea43 1207 	orr.w	r2, r3, r7, lsl #4
    3014:	b2d2      	uxtb	r2, r2
    3016:	f884 2028 	strb.w	r2, [r4, #40]	; 0x28
    301a:	7b23      	ldrb	r3, [r4, #12]
    301c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    3020:	7323      	strb	r3, [r4, #12]
    3022:	b007      	add	sp, #28
    3024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    3028:	4b2d      	ldr	r3, [pc, #180]	; (30e0 <serial_baud+0x1a0>)
    302a:	429c      	cmp	r4, r3
    302c:	d029      	beq.n	3082 <serial_baud+0x142>
    302e:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    3032:	429c      	cmp	r4, r3
    3034:	d191      	bne.n	2f5a <serial_baud+0x1a>
    3036:	4b2b      	ldr	r3, [pc, #172]	; (30e4 <serial_baud+0x1a4>)
    3038:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    303c:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
    3040:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    3044:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    3048:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
    304c:	e024      	b.n	3098 <serial_baud+0x158>
    304e:	4b25      	ldr	r3, [pc, #148]	; (30e4 <serial_baud+0x1a4>)
    3050:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    3054:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
    3058:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    305c:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    3060:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    3064:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    3068:	e777      	b.n	2f5a <serial_baud+0x1a>
    306a:	4b1e      	ldr	r3, [pc, #120]	; (30e4 <serial_baud+0x1a4>)
    306c:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    3070:	f422 7240 	bic.w	r2, r2, #768	; 0x300
    3074:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    3078:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    307c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
    3080:	e7f0      	b.n	3064 <serial_baud+0x124>
    3082:	4b18      	ldr	r3, [pc, #96]	; (30e4 <serial_baud+0x1a4>)
    3084:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    3088:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
    308c:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    3090:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    3094:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
    3098:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    309c:	e75d      	b.n	2f5a <serial_baud+0x1a>
    309e:	46bb      	mov	r11, r7
    30a0:	4699      	mov	r9, r3
    30a2:	9a02      	ldr	r2, [sp, #8]
    30a4:	f8dd a000 	ldr.w	r10, [sp]
    30a8:	9203      	str	r2, [sp, #12]
    30aa:	3601      	adds	r6, #1
    30ac:	b2f3      	uxtb	r3, r6
    30ae:	42bb      	cmp	r3, r7
    30b0:	4488      	add	r8, r1
    30b2:	f4ff af70 	bcc.w	2f96 <serial_baud+0x56>
    30b6:	2d0f      	cmp	r5, #15
    30b8:	d09c      	beq.n	2ff4 <serial_baud+0xb4>
    30ba:	9b01      	ldr	r3, [sp, #4]
    30bc:	3501      	adds	r5, #1
    30be:	440b      	add	r3, r1
    30c0:	44e6      	add	lr, r12
    30c2:	9301      	str	r3, [sp, #4]
    30c4:	e75d      	b.n	2f82 <serial_baud+0x42>
    30c6:	2701      	movs	r7, #1
    30c8:	9200      	str	r2, [sp, #0]
    30ca:	e797      	b.n	2ffc <serial_baud+0xbc>
    30cc:	2e00      	cmp	r6, #0
    30ce:	bf0c      	ite	eq
    30d0:	2301      	moveq	r3, #1
    30d2:	2302      	movne	r3, #2
    30d4:	e776      	b.n	2fc4 <serial_baud+0x84>
    30d6:	bf00      	nop
    30d8:	40010000 	.word	0x40010000
    30dc:	100000e4 	.word	0x100000e4
    30e0:	40098000 	.word	0x40098000
    30e4:	400fc000 	.word	0x400fc000

000030e8 <serial_irq_handler>:
    30e8:	4b03      	ldr	r3, [pc, #12]	; (30f8 <serial_irq_handler+0x10>)
    30ea:	6019      	str	r1, [r3, #0]
    30ec:	2338      	movs	r3, #56	; 0x38
    30ee:	6841      	ldr	r1, [r0, #4]
    30f0:	434b      	muls	r3, r1
    30f2:	4902      	ldr	r1, [pc, #8]	; (30fc <serial_irq_handler+0x14>)
    30f4:	50ca      	str	r2, [r1, r3]
    30f6:	4770      	bx	lr
    30f8:	100019b8 	.word	0x100019b8
    30fc:	100019c0 	.word	0x100019c0

00003100 <serial_irq_set>:
    3100:	b430      	push	{r4, r5}
    3102:	b931      	cbnz	r1, 3112 <serial_irq_set+0x12>
    3104:	2538      	movs	r5, #56	; 0x38
    3106:	6843      	ldr	r3, [r0, #4]
    3108:	4c03      	ldr	r4, [pc, #12]	; (3118 <serial_irq_set+0x18>)
    310a:	fb05 4303 	mla	r3, r5, r3, r4
    310e:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
    3112:	bc30      	pop	{r4, r5}
    3114:	f7ff beae 	b.w	2e74 <serial_irq_set_internal>
    3118:	100019c0 	.word	0x100019c0

0000311c <serial_getc>:
    311c:	b510      	push	{r4, lr}
    311e:	6802      	ldr	r2, [r0, #0]
    3120:	7d13      	ldrb	r3, [r2, #20]
    3122:	07db      	lsls	r3, r3, #31
    3124:	d5fc      	bpl.n	3120 <serial_getc+0x4>
    3126:	2438      	movs	r4, #56	; 0x38
    3128:	6843      	ldr	r3, [r0, #4]
    312a:	4808      	ldr	r0, [pc, #32]	; (314c <serial_getc+0x30>)
    312c:	7811      	ldrb	r1, [r2, #0]
    312e:	fb04 0303 	mla	r3, r4, r3, r0
    3132:	6858      	ldr	r0, [r3, #4]
    3134:	b2c9      	uxtb	r1, r1
    3136:	3001      	adds	r0, #1
    3138:	d006      	beq.n	3148 <serial_getc+0x2c>
    313a:	6958      	ldr	r0, [r3, #20]
    313c:	689b      	ldr	r3, [r3, #8]
    313e:	6003      	str	r3, [r0, #0]
    3140:	6853      	ldr	r3, [r2, #4]
    3142:	f043 0301 	orr.w	r3, r3, #1
    3146:	6053      	str	r3, [r2, #4]
    3148:	4608      	mov	r0, r1
    314a:	bd10      	pop	{r4, pc}
    314c:	100019c0 	.word	0x100019c0

00003150 <serial_readable>:
    3150:	6803      	ldr	r3, [r0, #0]
    3152:	7d18      	ldrb	r0, [r3, #20]
    3154:	f000 0001 	and.w	r0, r0, #1
    3158:	4770      	bx	lr
	...

0000315c <serial_writable>:
    315c:	2138      	movs	r1, #56	; 0x38
    315e:	4a11      	ldr	r2, [pc, #68]	; (31a4 <serial_writable+0x48>)
    3160:	6843      	ldr	r3, [r0, #4]
    3162:	fb01 2303 	mla	r3, r1, r3, r2
    3166:	69da      	ldr	r2, [r3, #28]
    3168:	3201      	adds	r2, #1
    316a:	d009      	beq.n	3180 <serial_writable+0x24>
    316c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    316e:	6a1b      	ldr	r3, [r3, #32]
    3170:	6812      	ldr	r2, [r2, #0]
    3172:	421a      	tst	r2, r3
    3174:	d114      	bne.n	31a0 <serial_writable+0x44>
    3176:	6803      	ldr	r3, [r0, #0]
    3178:	7d18      	ldrb	r0, [r3, #20]
    317a:	f3c0 1080 	ubfx	r0, r0, #6, #1
    317e:	4770      	bx	lr
    3180:	6802      	ldr	r2, [r0, #0]
    3182:	7d12      	ldrb	r2, [r2, #20]
    3184:	0692      	lsls	r2, r2, #26
    3186:	d504      	bpl.n	3192 <serial_writable+0x36>
    3188:	2200      	movs	r2, #0
    318a:	2001      	movs	r0, #1
    318c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    3190:	4770      	bx	lr
    3192:	f893 0034 	ldrb.w	r0, [r3, #52]	; 0x34
    3196:	280f      	cmp	r0, #15
    3198:	bf8c      	ite	hi
    319a:	2000      	movhi	r0, #0
    319c:	2001      	movls	r0, #1
    319e:	4770      	bx	lr
    31a0:	2000      	movs	r0, #0
    31a2:	4770      	bx	lr
    31a4:	100019c0 	.word	0x100019c0

000031a8 <serial_putc>:
    31a8:	b538      	push	{r3, r4, r5, lr}
    31aa:	4604      	mov	r4, r0
    31ac:	460d      	mov	r5, r1
    31ae:	4620      	mov	r0, r4
    31b0:	f7ff ffd4 	bl	315c <serial_writable>
    31b4:	2800      	cmp	r0, #0
    31b6:	d0fa      	beq.n	31ae <serial_putc+0x6>
    31b8:	2138      	movs	r1, #56	; 0x38
    31ba:	6823      	ldr	r3, [r4, #0]
    31bc:	b2ed      	uxtb	r5, r5
    31be:	701d      	strb	r5, [r3, #0]
    31c0:	6863      	ldr	r3, [r4, #4]
    31c2:	4a04      	ldr	r2, [pc, #16]	; (31d4 <serial_putc+0x2c>)
    31c4:	fb01 2303 	mla	r3, r1, r3, r2
    31c8:	f893 2034 	ldrb.w	r2, [r3, #52]	; 0x34
    31cc:	3201      	adds	r2, #1
    31ce:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    31d2:	bd38      	pop	{r3, r4, r5, pc}
    31d4:	100019c0 	.word	0x100019c0

000031d8 <serial_set_flow_control>:
    31d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    31dc:	469a      	mov	r10, r3
    31de:	4c3c      	ldr	r4, [pc, #240]	; (32d0 <serial_set_flow_control+0xf8>)
    31e0:	6803      	ldr	r3, [r0, #0]
    31e2:	4605      	mov	r5, r0
    31e4:	42a3      	cmp	r3, r4
    31e6:	bf18      	it	ne
    31e8:	2400      	movne	r4, #0
    31ea:	4689      	mov	r9, r1
    31ec:	4690      	mov	r8, r2
    31ee:	6847      	ldr	r7, [r0, #4]
    31f0:	b11c      	cbz	r4, 31fa <serial_set_flow_control+0x22>
    31f2:	7c23      	ldrb	r3, [r4, #16]
    31f4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    31f8:	7423      	strb	r3, [r4, #16]
    31fa:	2338      	movs	r3, #56	; 0x38
    31fc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    3200:	4e34      	ldr	r6, [pc, #208]	; (32d4 <serial_set_flow_control+0xfc>)
    3202:	4628      	mov	r0, r5
    3204:	fb03 6307 	mla	r3, r3, r7, r6
    3208:	61da      	str	r2, [r3, #28]
    320a:	605a      	str	r2, [r3, #4]
    320c:	2200      	movs	r2, #0
    320e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    3212:	4611      	mov	r1, r2
    3214:	f7ff fe2e 	bl	2e74 <serial_irq_set_internal>
    3218:	f1b9 0f00 	cmp.w	r9, #0
    321c:	d055      	beq.n	32ca <serial_set_flow_control+0xf2>
    321e:	492e      	ldr	r1, [pc, #184]	; (32d8 <serial_set_flow_control+0x100>)
    3220:	4640      	mov	r0, r8
    3222:	f7fe fa5f 	bl	16e4 <pinmap_find_peripheral>
    3226:	492d      	ldr	r1, [pc, #180]	; (32dc <serial_set_flow_control+0x104>)
    3228:	4683      	mov	r11, r0
    322a:	4650      	mov	r0, r10
    322c:	f7fe fa5a 	bl	16e4 <pinmap_find_peripheral>
    3230:	f1a9 0302 	sub.w	r3, r9, #2
    3234:	2b01      	cmp	r3, #1
    3236:	d81b      	bhi.n	3270 <serial_set_flow_control+0x98>
    3238:	f1ba 3fff 	cmp.w	r10, #4294967295	; 0xffffffff
    323c:	d00b      	beq.n	3256 <serial_set_flow_control+0x7e>
    323e:	4b24      	ldr	r3, [pc, #144]	; (32d0 <serial_set_flow_control+0xf8>)
    3240:	4298      	cmp	r0, r3
    3242:	d10d      	bne.n	3260 <serial_set_flow_control+0x88>
    3244:	b164      	cbz	r4, 3260 <serial_set_flow_control+0x88>
    3246:	7c23      	ldrb	r3, [r4, #16]
    3248:	4924      	ldr	r1, [pc, #144]	; (32dc <serial_set_flow_control+0x104>)
    324a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    324e:	7423      	strb	r3, [r4, #16]
    3250:	4650      	mov	r0, r10
    3252:	f7fe fa19 	bl	1688 <pinmap_pinout>
    3256:	f1b9 0f03 	cmp.w	r9, #3
    325a:	d00c      	beq.n	3276 <serial_set_flow_control+0x9e>
    325c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
    3260:	2038      	movs	r0, #56	; 0x38
    3262:	fb00 6007 	mla	r0, r0, r7, r6
    3266:	4651      	mov	r1, r10
    3268:	301c      	adds	r0, #28
    326a:	f7fe f97b 	bl	1564 <gpio_init_in>
    326e:	e7f2      	b.n	3256 <serial_set_flow_control+0x7e>
    3270:	f1b9 0f01 	cmp.w	r9, #1
    3274:	d129      	bne.n	32ca <serial_set_flow_control+0xf2>
    3276:	f1b8 3fff 	cmp.w	r8, #4294967295	; 0xffffffff
    327a:	d101      	bne.n	3280 <serial_set_flow_control+0xa8>
    327c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
    3280:	2207      	movs	r2, #7
    3282:	682b      	ldr	r3, [r5, #0]
    3284:	721a      	strb	r2, [r3, #8]
    3286:	4b12      	ldr	r3, [pc, #72]	; (32d0 <serial_set_flow_control+0xf8>)
    3288:	459b      	cmp	r11, r3
    328a:	d10a      	bne.n	32a2 <serial_set_flow_control+0xca>
    328c:	b14c      	cbz	r4, 32a2 <serial_set_flow_control+0xca>
    328e:	7c23      	ldrb	r3, [r4, #16]
    3290:	4640      	mov	r0, r8
    3292:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    3296:	7423      	strb	r3, [r4, #16]
    3298:	490f      	ldr	r1, [pc, #60]	; (32d8 <serial_set_flow_control+0x100>)
    329a:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    329e:	f7fe b9f3 	b.w	1688 <pinmap_pinout>
    32a2:	2438      	movs	r4, #56	; 0x38
    32a4:	fb04 6007 	mla	r0, r4, r7, r6
    32a8:	4641      	mov	r1, r8
    32aa:	2200      	movs	r2, #0
    32ac:	3004      	adds	r0, #4
    32ae:	f7fe f95e 	bl	156e <gpio_init_out_ex>
    32b2:	2201      	movs	r2, #1
    32b4:	686b      	ldr	r3, [r5, #4]
    32b6:	4628      	mov	r0, r5
    32b8:	fb04 6603 	mla	r6, r4, r3, r6
    32bc:	f886 2035 	strb.w	r2, [r6, #53]	; 0x35
    32c0:	2100      	movs	r1, #0
    32c2:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    32c6:	f7ff bdd5 	b.w	2e74 <serial_irq_set_internal>
    32ca:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
    32ce:	bf00      	nop
    32d0:	40010000 	.word	0x40010000
    32d4:	100019c0 	.word	0x100019c0
    32d8:	00004f2c 	.word	0x00004f2c
    32dc:	00004f08 	.word	0x00004f08

000032e0 <serial_init>:
    32e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    32e4:	460f      	mov	r7, r1
    32e6:	4605      	mov	r5, r0
    32e8:	4946      	ldr	r1, [pc, #280]	; (3404 <serial_init+0x124>)
    32ea:	4638      	mov	r0, r7
    32ec:	4616      	mov	r6, r2
    32ee:	f7fe fa05 	bl	16fc <pinmap_peripheral>
    32f2:	4945      	ldr	r1, [pc, #276]	; (3408 <serial_init+0x128>)
    32f4:	4604      	mov	r4, r0
    32f6:	4630      	mov	r0, r6
    32f8:	f7fe fa00 	bl	16fc <pinmap_peripheral>
    32fc:	4601      	mov	r1, r0
    32fe:	4620      	mov	r0, r4
    3300:	f7fe f9de 	bl	16c0 <pinmap_merge>
    3304:	4b41      	ldr	r3, [pc, #260]	; (340c <serial_init+0x12c>)
    3306:	4604      	mov	r4, r0
    3308:	4298      	cmp	r0, r3
    330a:	6028      	str	r0, [r5, #0]
    330c:	d05d      	beq.n	33ca <serial_init+0xea>
    330e:	d847      	bhi.n	33a0 <serial_init+0xc0>
    3310:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
    3314:	4298      	cmp	r0, r3
    3316:	d050      	beq.n	33ba <serial_init+0xda>
    3318:	2301      	movs	r3, #1
    331a:	f04f 0800 	mov.w	r8, #0
    331e:	7223      	strb	r3, [r4, #8]
    3320:	f44f 5116 	mov.w	r1, #9600	; 0x2580
    3324:	4628      	mov	r0, r5
    3326:	f8c4 8004 	str.w	r8, [r4, #4]
    332a:	f7ff fe09 	bl	2f40 <serial_baud>
    332e:	2203      	movs	r2, #3
    3330:	682b      	ldr	r3, [r5, #0]
    3332:	4934      	ldr	r1, [pc, #208]	; (3404 <serial_init+0x124>)
    3334:	731a      	strb	r2, [r3, #12]
    3336:	4638      	mov	r0, r7
    3338:	f7fe f9a6 	bl	1688 <pinmap_pinout>
    333c:	4932      	ldr	r1, [pc, #200]	; (3408 <serial_init+0x128>)
    333e:	4630      	mov	r0, r6
    3340:	f7fe f9a2 	bl	1688 <pinmap_pinout>
    3344:	1c7a      	adds	r2, r7, #1
    3346:	d003      	beq.n	3350 <serial_init+0x70>
    3348:	4641      	mov	r1, r8
    334a:	4638      	mov	r0, r7
    334c:	f000 f8d9 	bl	3502 <pin_mode>
    3350:	1c73      	adds	r3, r6, #1
    3352:	d003      	beq.n	335c <serial_init+0x7c>
    3354:	2100      	movs	r1, #0
    3356:	4630      	mov	r0, r6
    3358:	f000 f8d3 	bl	3502 <pin_mode>
    335c:	4b2b      	ldr	r3, [pc, #172]	; (340c <serial_init+0x12c>)
    335e:	429c      	cmp	r4, r3
    3360:	d04b      	beq.n	33fa <serial_init+0x11a>
    3362:	d83e      	bhi.n	33e2 <serial_init+0x102>
    3364:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
    3368:	429c      	cmp	r4, r3
    336a:	d043      	beq.n	33f4 <serial_init+0x114>
    336c:	2138      	movs	r1, #56	; 0x38
    336e:	686a      	ldr	r2, [r5, #4]
    3370:	4b27      	ldr	r3, [pc, #156]	; (3410 <serial_init+0x130>)
    3372:	4628      	mov	r0, r5
    3374:	fb01 3202 	mla	r2, r1, r2, r3
    3378:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    337c:	2100      	movs	r1, #0
    337e:	6053      	str	r3, [r2, #4]
    3380:	61d3      	str	r3, [r2, #28]
    3382:	461a      	mov	r2, r3
    3384:	f7ff ff28 	bl	31d8 <serial_set_flow_control>
    3388:	4b22      	ldr	r3, [pc, #136]	; (3414 <serial_init+0x134>)
    338a:	429c      	cmp	r4, r3
    338c:	d106      	bne.n	339c <serial_init+0xbc>
    338e:	2201      	movs	r2, #1
    3390:	4b21      	ldr	r3, [pc, #132]	; (3418 <serial_init+0x138>)
    3392:	6869      	ldr	r1, [r5, #4]
    3394:	601a      	str	r2, [r3, #0]
    3396:	6828      	ldr	r0, [r5, #0]
    3398:	4b20      	ldr	r3, [pc, #128]	; (341c <serial_init+0x13c>)
    339a:	c303      	stmia	r3!, {r0, r1}
    339c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    33a0:	4b1f      	ldr	r3, [pc, #124]	; (3420 <serial_init+0x140>)
    33a2:	4298      	cmp	r0, r3
    33a4:	d017      	beq.n	33d6 <serial_init+0xf6>
    33a6:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    33aa:	4298      	cmp	r0, r3
    33ac:	d1b4      	bne.n	3318 <serial_init+0x38>
    33ae:	4a1d      	ldr	r2, [pc, #116]	; (3424 <serial_init+0x144>)
    33b0:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    33b4:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
    33b8:	e004      	b.n	33c4 <serial_init+0xe4>
    33ba:	4a1a      	ldr	r2, [pc, #104]	; (3424 <serial_init+0x144>)
    33bc:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    33c0:	f043 0308 	orr.w	r3, r3, #8
    33c4:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
    33c8:	e7a6      	b.n	3318 <serial_init+0x38>
    33ca:	4a16      	ldr	r2, [pc, #88]	; (3424 <serial_init+0x144>)
    33cc:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    33d0:	f043 0310 	orr.w	r3, r3, #16
    33d4:	e7f6      	b.n	33c4 <serial_init+0xe4>
    33d6:	4a13      	ldr	r2, [pc, #76]	; (3424 <serial_init+0x144>)
    33d8:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    33dc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
    33e0:	e7f0      	b.n	33c4 <serial_init+0xe4>
    33e2:	4b0f      	ldr	r3, [pc, #60]	; (3420 <serial_init+0x140>)
    33e4:	429c      	cmp	r4, r3
    33e6:	d00a      	beq.n	33fe <serial_init+0x11e>
    33e8:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    33ec:	429c      	cmp	r4, r3
    33ee:	d1bd      	bne.n	336c <serial_init+0x8c>
    33f0:	2303      	movs	r3, #3
    33f2:	e000      	b.n	33f6 <serial_init+0x116>
    33f4:	2300      	movs	r3, #0
    33f6:	606b      	str	r3, [r5, #4]
    33f8:	e7b8      	b.n	336c <serial_init+0x8c>
    33fa:	2301      	movs	r3, #1
    33fc:	e7fb      	b.n	33f6 <serial_init+0x116>
    33fe:	2302      	movs	r3, #2
    3400:	e7f9      	b.n	33f6 <serial_init+0x116>
    3402:	bf00      	nop
    3404:	00004fbc 	.word	0x00004fbc
    3408:	00004f50 	.word	0x00004f50
    340c:	40010000 	.word	0x40010000
    3410:	100019c0 	.word	0x100019c0
    3414:	4000c000 	.word	0x4000c000
    3418:	100019bc 	.word	0x100019bc
    341c:	10002618 	.word	0x10002618
    3420:	40098000 	.word	0x40098000
    3424:	400fc000 	.word	0x400fc000

00003428 <us_ticker_init>:
    3428:	b508      	push	{r3, lr}
    342a:	4b10      	ldr	r3, [pc, #64]	; (346c <us_ticker_init+0x44>)
    342c:	6818      	ldr	r0, [r3, #0]
    342e:	b9e0      	cbnz	r0, 346a <us_ticker_init+0x42>
    3430:	2101      	movs	r1, #1
    3432:	4a0f      	ldr	r2, [pc, #60]	; (3470 <us_ticker_init+0x48>)
    3434:	6019      	str	r1, [r3, #0]
    3436:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    343a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
    343e:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
    3442:	f5a2 22d0 	sub.w	r2, r2, #425984	; 0x68000
    3446:	6710      	str	r0, [r2, #112]	; 0x70
    3448:	2002      	movs	r0, #2
    344a:	4b0a      	ldr	r3, [pc, #40]	; (3474 <us_ticker_init+0x4c>)
    344c:	681b      	ldr	r3, [r3, #0]
    344e:	6050      	str	r0, [r2, #4]
    3450:	4809      	ldr	r0, [pc, #36]	; (3478 <us_ticker_init+0x50>)
    3452:	fbb3 f3f0 	udiv	r3, r3, r0
    3456:	3b01      	subs	r3, #1
    3458:	60d3      	str	r3, [r2, #12]
    345a:	2004      	movs	r0, #4
    345c:	6051      	str	r1, [r2, #4]
    345e:	4907      	ldr	r1, [pc, #28]	; (347c <us_ticker_init+0x54>)
    3460:	f000 f87c 	bl	355c <__NVIC_SetVector>
    3464:	2210      	movs	r2, #16
    3466:	4b06      	ldr	r3, [pc, #24]	; (3480 <us_ticker_init+0x58>)
    3468:	601a      	str	r2, [r3, #0]
    346a:	bd08      	pop	{r3, pc}
    346c:	10001aa0 	.word	0x10001aa0
    3470:	400fc000 	.word	0x400fc000
    3474:	100000e4 	.word	0x100000e4
    3478:	003d0900 	.word	0x003d0900
    347c:	0000159d 	.word	0x0000159d
    3480:	e000e100 	.word	0xe000e100

00003484 <us_ticker_read>:
    3484:	b508      	push	{r3, lr}
    3486:	4b04      	ldr	r3, [pc, #16]	; (3498 <us_ticker_read+0x14>)
    3488:	681b      	ldr	r3, [r3, #0]
    348a:	b90b      	cbnz	r3, 3490 <us_ticker_read+0xc>
    348c:	f7ff ffcc 	bl	3428 <us_ticker_init>
    3490:	4b02      	ldr	r3, [pc, #8]	; (349c <us_ticker_read+0x18>)
    3492:	6898      	ldr	r0, [r3, #8]
    3494:	bd08      	pop	{r3, pc}
    3496:	bf00      	nop
    3498:	10001aa0 	.word	0x10001aa0
    349c:	40094000 	.word	0x40094000

000034a0 <us_ticker_set_interrupt>:
    34a0:	4b03      	ldr	r3, [pc, #12]	; (34b0 <us_ticker_set_interrupt+0x10>)
    34a2:	6198      	str	r0, [r3, #24]
    34a4:	695a      	ldr	r2, [r3, #20]
    34a6:	f042 0201 	orr.w	r2, r2, #1
    34aa:	615a      	str	r2, [r3, #20]
    34ac:	4770      	bx	lr
    34ae:	bf00      	nop
    34b0:	40094000 	.word	0x40094000

000034b4 <us_ticker_disable_interrupt>:
    34b4:	4a02      	ldr	r2, [pc, #8]	; (34c0 <us_ticker_disable_interrupt+0xc>)
    34b6:	6953      	ldr	r3, [r2, #20]
    34b8:	f023 0301 	bic.w	r3, r3, #1
    34bc:	6153      	str	r3, [r2, #20]
    34be:	4770      	bx	lr
    34c0:	40094000 	.word	0x40094000

000034c4 <us_ticker_clear_interrupt>:
    34c4:	2201      	movs	r2, #1
    34c6:	4b01      	ldr	r3, [pc, #4]	; (34cc <us_ticker_clear_interrupt+0x8>)
    34c8:	601a      	str	r2, [r3, #0]
    34ca:	4770      	bx	lr
    34cc:	40094000 	.word	0x40094000

000034d0 <pin_function>:
    34d0:	b510      	push	{r4, lr}
    34d2:	2403      	movs	r4, #3
    34d4:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
    34d8:	f5a0 201c 	sub.w	r0, r0, #638976	; 0x9c000
    34dc:	0043      	lsls	r3, r0, #1
    34de:	0900      	lsrs	r0, r0, #4
    34e0:	0080      	lsls	r0, r0, #2
    34e2:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
    34e6:	f500 3030 	add.w	r0, r0, #180224	; 0x2c000
    34ea:	6802      	ldr	r2, [r0, #0]
    34ec:	f003 031e 	and.w	r3, r3, #30
    34f0:	409c      	lsls	r4, r3
    34f2:	ea22 0204 	bic.w	r2, r2, r4
    34f6:	6002      	str	r2, [r0, #0]
    34f8:	6802      	ldr	r2, [r0, #0]
    34fa:	4099      	lsls	r1, r3
    34fc:	4311      	orrs	r1, r2
    34fe:	6001      	str	r1, [r0, #0]
    3500:	bd10      	pop	{r4, pc}

00003502 <pin_mode>:
    3502:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
    3506:	f5a0 201c 	sub.w	r0, r0, #638976	; 0x9c000
    350a:	0943      	lsrs	r3, r0, #5
    350c:	009b      	lsls	r3, r3, #2
    350e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    3512:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
    3516:	b530      	push	{r4, r5, lr}
    3518:	f000 021f 	and.w	r2, r0, #31
    351c:	6e9c      	ldr	r4, [r3, #104]	; 0x68
    351e:	f3c1 0580 	ubfx	r5, r1, #2, #1
    3522:	fa05 f202 	lsl.w	r2, r5, r2
    3526:	ea24 0402 	bic.w	r4, r4, r2
    352a:	669c      	str	r4, [r3, #104]	; 0x68
    352c:	6e9c      	ldr	r4, [r3, #104]	; 0x68
    352e:	4322      	orrs	r2, r4
    3530:	669a      	str	r2, [r3, #104]	; 0x68
    3532:	b995      	cbnz	r5, 355a <pin_mode+0x58>
    3534:	2403      	movs	r4, #3
    3536:	0043      	lsls	r3, r0, #1
    3538:	0900      	lsrs	r0, r0, #4
    353a:	0080      	lsls	r0, r0, #2
    353c:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
    3540:	f500 3030 	add.w	r0, r0, #180224	; 0x2c000
    3544:	6c02      	ldr	r2, [r0, #64]	; 0x40
    3546:	f003 031e 	and.w	r3, r3, #30
    354a:	409c      	lsls	r4, r3
    354c:	ea22 0204 	bic.w	r2, r2, r4
    3550:	6402      	str	r2, [r0, #64]	; 0x40
    3552:	6c02      	ldr	r2, [r0, #64]	; 0x40
    3554:	4099      	lsls	r1, r3
    3556:	4311      	orrs	r1, r2
    3558:	6401      	str	r1, [r0, #64]	; 0x40
    355a:	bd30      	pop	{r4, r5, pc}

0000355c <__NVIC_SetVector>:
    355c:	b530      	push	{r4, r5, lr}
    355e:	4c0c      	ldr	r4, [pc, #48]	; (3590 <__NVIC_SetVector+0x34>)
    3560:	68a2      	ldr	r2, [r4, #8]
    3562:	68a4      	ldr	r4, [r4, #8]
    3564:	4613      	mov	r3, r2
    3566:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
    356a:	d20c      	bcs.n	3586 <__NVIC_SetVector+0x2a>
    356c:	1f13      	subs	r3, r2, #4
    356e:	4c09      	ldr	r4, [pc, #36]	; (3594 <__NVIC_SetVector+0x38>)
    3570:	4a09      	ldr	r2, [pc, #36]	; (3598 <__NVIC_SetVector+0x3c>)
    3572:	f853 5f04 	ldr.w	r5, [r3, #4]!
    3576:	f842 5f04 	str.w	r5, [r2, #4]!
    357a:	42a2      	cmp	r2, r4
    357c:	d1f9      	bne.n	3572 <__NVIC_SetVector+0x16>
    357e:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    3582:	4a03      	ldr	r2, [pc, #12]	; (3590 <__NVIC_SetVector+0x34>)
    3584:	6093      	str	r3, [r2, #8]
    3586:	3010      	adds	r0, #16
    3588:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
    358c:	bd30      	pop	{r4, r5, pc}
    358e:	bf00      	nop
    3590:	e000ed00 	.word	0xe000ed00
    3594:	100000c0 	.word	0x100000c0
    3598:	0ffffffc 	.word	0x0ffffffc

0000359c <SystemInit>:
    359c:	2220      	movs	r2, #32
    359e:	4b26      	ldr	r3, [pc, #152]	; (3638 <SystemInit+0x9c>)
    35a0:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
    35a4:	f8d3 21a0 	ldr.w	r2, [r3, #416]	; 0x1a0
    35a8:	0692      	lsls	r2, r2, #26
    35aa:	d503      	bpl.n	35b4 <SystemInit+0x18>
    35ac:	f8d3 21a0 	ldr.w	r2, [r3, #416]	; 0x1a0
    35b0:	0650      	lsls	r0, r2, #25
    35b2:	d5fb      	bpl.n	35ac <SystemInit+0x10>
    35b4:	2202      	movs	r2, #2
    35b6:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
    35ba:	2200      	movs	r2, #0
    35bc:	2001      	movs	r0, #1
    35be:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    35c2:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    35c6:	220b      	movs	r2, #11
    35c8:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
    35cc:	21aa      	movs	r1, #170	; 0xaa
    35ce:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    35d2:	2255      	movs	r2, #85	; 0x55
    35d4:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
    35d8:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    35dc:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
    35e0:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
    35e4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    35e8:	4b13      	ldr	r3, [pc, #76]	; (3638 <SystemInit+0x9c>)
    35ea:	461a      	mov	r2, r3
    35ec:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
    35f0:	0149      	lsls	r1, r1, #5
    35f2:	d5fb      	bpl.n	35ec <SystemInit+0x50>
    35f4:	2103      	movs	r1, #3
    35f6:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
    35fa:	21aa      	movs	r1, #170	; 0xaa
    35fc:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
    3600:	2155      	movs	r1, #85	; 0x55
    3602:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
    3606:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
    360a:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
    360e:	d0fa      	beq.n	3606 <SystemInit+0x6a>
    3610:	2305      	movs	r3, #5
    3612:	f8c2 3108 	str.w	r3, [r2, #264]	; 0x108
    3616:	4b09      	ldr	r3, [pc, #36]	; (363c <SystemInit+0xa0>)
    3618:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
    361c:	2300      	movs	r3, #0
    361e:	f8c2 31c8 	str.w	r3, [r2, #456]	; 0x1c8
    3622:	6813      	ldr	r3, [r2, #0]
    3624:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
    3628:	f023 033a 	bic.w	r3, r3, #58	; 0x3a
    362c:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
    3630:	f043 033a 	orr.w	r3, r3, #58	; 0x3a
    3634:	6013      	str	r3, [r2, #0]
    3636:	4770      	bx	lr
    3638:	400fc000 	.word	0x400fc000
    363c:	042887de 	.word	0x042887de

00003640 <mbed::Ticker::handler()>:
    3640:	b510      	push	{r4, lr}
    3642:	4604      	mov	r4, r0
    3644:	6943      	ldr	r3, [r0, #20]
    3646:	6841      	ldr	r1, [r0, #4]
    3648:	4419      	add	r1, r3
    364a:	f000 f967 	bl	391c <mbed::TimerEvent::insert(unsigned long)>
    364e:	6a63      	ldr	r3, [r4, #36]	; 0x24
    3650:	f104 0018 	add.w	r0, r4, #24
    3654:	681b      	ldr	r3, [r3, #0]
    3656:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    365a:	4718      	bx	r3

0000365c <mbed::Ticker::setup(unsigned long)>:
    365c:	b538      	push	{r3, r4, r5, lr}
    365e:	4604      	mov	r4, r0
    3660:	460d      	mov	r5, r1
    3662:	f7fe f873 	bl	174c <core_util_critical_section_enter>
    3666:	4620      	mov	r0, r4
    3668:	f000 f95e 	bl	3928 <mbed::TimerEvent::remove()>
    366c:	6165      	str	r5, [r4, #20]
    366e:	6920      	ldr	r0, [r4, #16]
    3670:	f7fe f807 	bl	1682 <ticker_read>
    3674:	1829      	adds	r1, r5, r0
    3676:	4620      	mov	r0, r4
    3678:	f000 f950 	bl	391c <mbed::TimerEvent::insert(unsigned long)>
    367c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    3680:	f7fe b87a 	b.w	1778 <core_util_critical_section_exit>

00003684 <mbed::Ticker::detach()>:
    3684:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    3686:	4606      	mov	r6, r0
    3688:	466d      	mov	r5, sp
    368a:	f7fe f85f 	bl	174c <core_util_critical_section_enter>
    368e:	4630      	mov	r0, r6
    3690:	f000 f94a 	bl	3928 <mbed::TimerEvent::remove()>
    3694:	2300      	movs	r3, #0
    3696:	f106 0418 	add.w	r4, r6, #24
    369a:	42ac      	cmp	r4, r5
    369c:	9303      	str	r3, [sp, #12]
    369e:	d00b      	beq.n	36b8 <mbed::Ticker::detach()+0x34>
    36a0:	4620      	mov	r0, r4
    36a2:	f7fc fe58 	bl	356 <mbed::Callback<void ()>::~Callback()>
    36a6:	b13c      	cbz	r4, 36b8 <mbed::Ticker::detach()+0x34>
    36a8:	9b03      	ldr	r3, [sp, #12]
    36aa:	b11b      	cbz	r3, 36b4 <mbed::Ticker::detach()+0x30>
    36ac:	685b      	ldr	r3, [r3, #4]
    36ae:	4669      	mov	r1, sp
    36b0:	4620      	mov	r0, r4
    36b2:	4798      	blx	r3
    36b4:	9b03      	ldr	r3, [sp, #12]
    36b6:	6273      	str	r3, [r6, #36]	; 0x24
    36b8:	4628      	mov	r0, r5
    36ba:	f7fc fe4c 	bl	356 <mbed::Callback<void ()>::~Callback()>
    36be:	f7fe f85b 	bl	1778 <core_util_critical_section_exit>
    36c2:	b004      	add	sp, #16
    36c4:	bd70      	pop	{r4, r5, r6, pc}

000036c6 <mbed::RawSerial::lock()>:
    36c6:	4770      	bx	lr

000036c8 <mbed::RawSerial::~RawSerial()>:
    36c8:	b510      	push	{r4, lr}
    36ca:	4604      	mov	r4, r0
    36cc:	4b02      	ldr	r3, [pc, #8]	; (36d8 <mbed::RawSerial::~RawSerial()+0x10>)
    36ce:	6003      	str	r3, [r0, #0]
    36d0:	f7fd fd88 	bl	11e4 <mbed::SerialBase::~SerialBase()>
    36d4:	4620      	mov	r0, r4
    36d6:	bd10      	pop	{r4, pc}
    36d8:	00005044 	.word	0x00005044

000036dc <mbed::RawSerial::~RawSerial()>:
    36dc:	b510      	push	{r4, lr}
    36de:	4604      	mov	r4, r0
    36e0:	f7ff fff2 	bl	36c8 <mbed::RawSerial::~RawSerial()>
    36e4:	4620      	mov	r0, r4
    36e6:	f000 fa75 	bl	3bd4 <operator delete(void*)>
    36ea:	4620      	mov	r0, r4
    36ec:	bd10      	pop	{r4, pc}
	...

000036f0 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
    36f0:	b510      	push	{r4, lr}
    36f2:	4604      	mov	r4, r0
    36f4:	f000 f886 	bl	3804 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
    36f8:	4b01      	ldr	r3, [pc, #4]	; (3700 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
    36fa:	4620      	mov	r0, r4
    36fc:	6023      	str	r3, [r4, #0]
    36fe:	bd10      	pop	{r4, pc}
    3700:	00005044 	.word	0x00005044

00003704 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
    3704:	4288      	cmp	r0, r1
    3706:	b538      	push	{r3, r4, r5, lr}
    3708:	4604      	mov	r4, r0
    370a:	460d      	mov	r5, r1
    370c:	d00a      	beq.n	3724 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
    370e:	f7fc fe22 	bl	356 <mbed::Callback<void ()>::~Callback()>
    3712:	b13c      	cbz	r4, 3724 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
    3714:	68eb      	ldr	r3, [r5, #12]
    3716:	b11b      	cbz	r3, 3720 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
    3718:	685b      	ldr	r3, [r3, #4]
    371a:	4629      	mov	r1, r5
    371c:	4620      	mov	r0, r4
    371e:	4798      	blx	r3
    3720:	68eb      	ldr	r3, [r5, #12]
    3722:	60e3      	str	r3, [r4, #12]
    3724:	4620      	mov	r0, r4
    3726:	bd38      	pop	{r3, r4, r5, pc}

00003728 <mbed::Timer::start()>:
    3728:	b510      	push	{r4, lr}
    372a:	4604      	mov	r4, r0
    372c:	f7fe f80e 	bl	174c <core_util_critical_section_enter>
    3730:	6823      	ldr	r3, [r4, #0]
    3732:	b92b      	cbnz	r3, 3740 <mbed::Timer::start()+0x18>
    3734:	68e0      	ldr	r0, [r4, #12]
    3736:	f7fd ffa4 	bl	1682 <ticker_read>
    373a:	2301      	movs	r3, #1
    373c:	6060      	str	r0, [r4, #4]
    373e:	6023      	str	r3, [r4, #0]
    3740:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    3744:	f7fe b818 	b.w	1778 <core_util_critical_section_exit>

00003748 <mbed::Timer::slicetime()>:
    3748:	b538      	push	{r3, r4, r5, lr}
    374a:	4605      	mov	r5, r0
    374c:	f7fd fffe 	bl	174c <core_util_critical_section_enter>
    3750:	682c      	ldr	r4, [r5, #0]
    3752:	b124      	cbz	r4, 375e <mbed::Timer::slicetime()+0x16>
    3754:	68e8      	ldr	r0, [r5, #12]
    3756:	f7fd ff94 	bl	1682 <ticker_read>
    375a:	686c      	ldr	r4, [r5, #4]
    375c:	1b04      	subs	r4, r0, r4
    375e:	f7fe f80b 	bl	1778 <core_util_critical_section_exit>
    3762:	4620      	mov	r0, r4
    3764:	bd38      	pop	{r3, r4, r5, pc}

00003766 <mbed::Timer::read_us()>:
    3766:	b538      	push	{r3, r4, r5, lr}
    3768:	4605      	mov	r5, r0
    376a:	f7fd ffef 	bl	174c <core_util_critical_section_enter>
    376e:	4628      	mov	r0, r5
    3770:	68ac      	ldr	r4, [r5, #8]
    3772:	f7ff ffe9 	bl	3748 <mbed::Timer::slicetime()>
    3776:	4404      	add	r4, r0
    3778:	f7fd fffe 	bl	1778 <core_util_critical_section_exit>
    377c:	4620      	mov	r0, r4
    377e:	bd38      	pop	{r3, r4, r5, pc}

00003780 <mbed::Timer::read_ms()>:
    3780:	b508      	push	{r3, lr}
    3782:	f7ff fff0 	bl	3766 <mbed::Timer::read_us()>
    3786:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    378a:	fb90 f0f3 	sdiv	r0, r0, r3
    378e:	bd08      	pop	{r3, pc}

00003790 <mbed::Timer::reset()>:
    3790:	b510      	push	{r4, lr}
    3792:	4604      	mov	r4, r0
    3794:	f7fd ffda 	bl	174c <core_util_critical_section_enter>
    3798:	68e0      	ldr	r0, [r4, #12]
    379a:	f7fd ff72 	bl	1682 <ticker_read>
    379e:	2300      	movs	r3, #0
    37a0:	6060      	str	r0, [r4, #4]
    37a2:	60a3      	str	r3, [r4, #8]
    37a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    37a8:	f7fd bfe6 	b.w	1778 <core_util_critical_section_exit>

000037ac <mbed::Timer::Timer()>:
    37ac:	2300      	movs	r3, #0
    37ae:	b510      	push	{r4, lr}
    37b0:	6003      	str	r3, [r0, #0]
    37b2:	6043      	str	r3, [r0, #4]
    37b4:	6083      	str	r3, [r0, #8]
    37b6:	4604      	mov	r4, r0
    37b8:	f7fd feec 	bl	1594 <get_us_ticker_data>
    37bc:	60e0      	str	r0, [r4, #12]
    37be:	4620      	mov	r0, r4
    37c0:	f7ff ffe6 	bl	3790 <mbed::Timer::reset()>
    37c4:	4620      	mov	r0, r4
    37c6:	bd10      	pop	{r4, pc}

000037c8 <mbed::donothing()>:
    37c8:	4770      	bx	lr

000037ca <mbed::SerialBase::lock()>:
    37ca:	4770      	bx	lr

000037cc <mbed::SerialBase::unlock()>:
    37cc:	4770      	bx	lr

000037ce <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
    37ce:	eb00 1201 	add.w	r2, r0, r1, lsl #4
    37d2:	6993      	ldr	r3, [r2, #24]
    37d4:	f102 000c 	add.w	r0, r2, #12
    37d8:	681b      	ldr	r3, [r3, #0]
    37da:	4718      	bx	r3

000037dc <mbed::SerialBase::baud(int)>:
    37dc:	b570      	push	{r4, r5, r6, lr}
    37de:	4605      	mov	r5, r0
    37e0:	460e      	mov	r6, r1
    37e2:	4604      	mov	r4, r0
    37e4:	f855 3b04 	ldr.w	r3, [r5], #4
    37e8:	681b      	ldr	r3, [r3, #0]
    37ea:	4798      	blx	r3
    37ec:	4628      	mov	r0, r5
    37ee:	4631      	mov	r1, r6
    37f0:	f7ff fba6 	bl	2f40 <serial_baud>
    37f4:	6823      	ldr	r3, [r4, #0]
    37f6:	62e6      	str	r6, [r4, #44]	; 0x2c
    37f8:	4620      	mov	r0, r4
    37fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    37fe:	685b      	ldr	r3, [r3, #4]
    3800:	4718      	bx	r3
	...

00003804 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
    3804:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    3808:	460f      	mov	r7, r1
    380a:	2100      	movs	r1, #0
    380c:	4604      	mov	r4, r0
    380e:	4690      	mov	r8, r2
    3810:	4a17      	ldr	r2, [pc, #92]	; (3870 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x6c>)
    3812:	4e18      	ldr	r6, [pc, #96]	; (3874 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x70>)
    3814:	4d18      	ldr	r5, [pc, #96]	; (3878 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x74>)
    3816:	62c3      	str	r3, [r0, #44]	; 0x2c
    3818:	6002      	str	r2, [r0, #0]
    381a:	6041      	str	r1, [r0, #4]
    381c:	6081      	str	r1, [r0, #8]
    381e:	6181      	str	r1, [r0, #24]
    3820:	6281      	str	r1, [r0, #40]	; 0x28
    3822:	4669      	mov	r1, sp
    3824:	300c      	adds	r0, #12
    3826:	9503      	str	r5, [sp, #12]
    3828:	9600      	str	r6, [sp, #0]
    382a:	f7ff ff6b 	bl	3704 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
    382e:	4668      	mov	r0, sp
    3830:	f7fc fd91 	bl	356 <mbed::Callback<void ()>::~Callback()>
    3834:	4669      	mov	r1, sp
    3836:	f104 001c 	add.w	r0, r4, #28
    383a:	9503      	str	r5, [sp, #12]
    383c:	9600      	str	r6, [sp, #0]
    383e:	1d25      	adds	r5, r4, #4
    3840:	f7ff ff60 	bl	3704 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
    3844:	4668      	mov	r0, sp
    3846:	f7fc fd86 	bl	356 <mbed::Callback<void ()>::~Callback()>
    384a:	4642      	mov	r2, r8
    384c:	4639      	mov	r1, r7
    384e:	4628      	mov	r0, r5
    3850:	f7ff fd46 	bl	32e0 <serial_init>
    3854:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    3856:	4628      	mov	r0, r5
    3858:	f7ff fb72 	bl	2f40 <serial_baud>
    385c:	4628      	mov	r0, r5
    385e:	4622      	mov	r2, r4
    3860:	4906      	ldr	r1, [pc, #24]	; (387c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x78>)
    3862:	f7ff fc41 	bl	30e8 <serial_irq_handler>
    3866:	4620      	mov	r0, r4
    3868:	b004      	add	sp, #16
    386a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    386e:	bf00      	nop
    3870:	0000505c 	.word	0x0000505c
    3874:	000037c9 	.word	0x000037c9
    3878:	00004b4c 	.word	0x00004b4c
    387c:	000037cf 	.word	0x000037cf

00003880 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
    3880:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    3884:	4605      	mov	r5, r0
    3886:	4688      	mov	r8, r1
    3888:	4616      	mov	r6, r2
    388a:	f855 3b04 	ldr.w	r3, [r5], #4
    388e:	4604      	mov	r4, r0
    3890:	681b      	ldr	r3, [r3, #0]
    3892:	4798      	blx	r3
    3894:	f7fd ff5a 	bl	174c <core_util_critical_section_enter>
    3898:	f8d8 700c 	ldr.w	r7, [r8, #12]
    389c:	0130      	lsls	r0, r6, #4
    389e:	b197      	cbz	r7, 38c6 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
    38a0:	300c      	adds	r0, #12
    38a2:	4641      	mov	r1, r8
    38a4:	4420      	add	r0, r4
    38a6:	f7ff ff2d 	bl	3704 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
    38aa:	2201      	movs	r2, #1
    38ac:	4631      	mov	r1, r6
    38ae:	4628      	mov	r0, r5
    38b0:	f7ff fc26 	bl	3100 <serial_irq_set>
    38b4:	f7fd ff60 	bl	1778 <core_util_critical_section_exit>
    38b8:	6823      	ldr	r3, [r4, #0]
    38ba:	4620      	mov	r0, r4
    38bc:	685b      	ldr	r3, [r3, #4]
    38be:	4798      	blx	r3
    38c0:	b004      	add	sp, #16
    38c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    38c6:	4b07      	ldr	r3, [pc, #28]	; (38e4 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
    38c8:	300c      	adds	r0, #12
    38ca:	9300      	str	r3, [sp, #0]
    38cc:	4b06      	ldr	r3, [pc, #24]	; (38e8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
    38ce:	4669      	mov	r1, sp
    38d0:	4420      	add	r0, r4
    38d2:	9303      	str	r3, [sp, #12]
    38d4:	f7ff ff16 	bl	3704 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
    38d8:	4668      	mov	r0, sp
    38da:	f7fc fd3c 	bl	356 <mbed::Callback<void ()>::~Callback()>
    38de:	463a      	mov	r2, r7
    38e0:	e7e4      	b.n	38ac <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
    38e2:	bf00      	nop
    38e4:	000037c9 	.word	0x000037c9
    38e8:	00004b4c 	.word	0x00004b4c

000038ec <mbed::TimerEvent::irq(unsigned long)>:
    38ec:	6803      	ldr	r3, [r0, #0]
    38ee:	689b      	ldr	r3, [r3, #8]
    38f0:	4718      	bx	r3
	...

000038f4 <mbed::TimerEvent::TimerEvent()>:
    38f4:	4b07      	ldr	r3, [pc, #28]	; (3914 <mbed::TimerEvent::TimerEvent()+0x20>)
    38f6:	b510      	push	{r4, lr}
    38f8:	6003      	str	r3, [r0, #0]
    38fa:	2300      	movs	r3, #0
    38fc:	6043      	str	r3, [r0, #4]
    38fe:	6083      	str	r3, [r0, #8]
    3900:	60c3      	str	r3, [r0, #12]
    3902:	4604      	mov	r4, r0
    3904:	f7fd fe46 	bl	1594 <get_us_ticker_data>
    3908:	4903      	ldr	r1, [pc, #12]	; (3918 <mbed::TimerEvent::TimerEvent()+0x24>)
    390a:	6120      	str	r0, [r4, #16]
    390c:	f7fd fe4c 	bl	15a8 <ticker_set_handler>
    3910:	4620      	mov	r0, r4
    3912:	bd10      	pop	{r4, pc}
    3914:	00005074 	.word	0x00005074
    3918:	000038ed 	.word	0x000038ed

0000391c <mbed::TimerEvent::insert(unsigned long)>:
    391c:	4603      	mov	r3, r0
    391e:	460a      	mov	r2, r1
    3920:	1d01      	adds	r1, r0, #4
    3922:	6900      	ldr	r0, [r0, #16]
    3924:	f7fd be6c 	b.w	1600 <ticker_insert_event>

00003928 <mbed::TimerEvent::remove()>:
    3928:	1d01      	adds	r1, r0, #4
    392a:	6900      	ldr	r0, [r0, #16]
    392c:	f7fd be89 	b.w	1642 <ticker_remove_event>

00003930 <mbed::TimerEvent::~TimerEvent()>:
    3930:	b510      	push	{r4, lr}
    3932:	4604      	mov	r4, r0
    3934:	4b02      	ldr	r3, [pc, #8]	; (3940 <mbed::TimerEvent::~TimerEvent()+0x10>)
    3936:	6003      	str	r3, [r0, #0]
    3938:	f7ff fff6 	bl	3928 <mbed::TimerEvent::remove()>
    393c:	4620      	mov	r0, r4
    393e:	bd10      	pop	{r4, pc}
    3940:	00005074 	.word	0x00005074

00003944 <__wrap__malloc_r>:
    3944:	f000 bc58 	b.w	41f8 <_malloc_r>

00003948 <__wrap__realloc_r>:
    3948:	f000 bcb4 	b.w	42b4 <_realloc_r>

0000394c <__wrap__free_r>:
    394c:	f000 bc08 	b.w	4160 <_free_r>

00003950 <wait_us>:
    3950:	b570      	push	{r4, r5, r6, lr}
    3952:	4605      	mov	r5, r0
    3954:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
    3958:	f7ff fd94 	bl	3484 <us_ticker_read>
    395c:	fb95 f4f4 	sdiv	r4, r5, r4
    3960:	2c00      	cmp	r4, #0
    3962:	4606      	mov	r6, r0
    3964:	dd02      	ble.n	396c <wait_us+0x1c>
    3966:	f7fd feea 	bl	173e <core_util_are_interrupts_enabled>
    396a:	b928      	cbnz	r0, 3978 <wait_us+0x28>
    396c:	f7ff fd8a 	bl	3484 <us_ticker_read>
    3970:	1b80      	subs	r0, r0, r6
    3972:	42a8      	cmp	r0, r5
    3974:	d3fa      	bcc.n	396c <wait_us+0x1c>
    3976:	bd70      	pop	{r4, r5, r6, pc}
    3978:	4620      	mov	r0, r4
    397a:	f000 f935 	bl	3be8 <rtos::Thread::wait(unsigned long)>
    397e:	e7f5      	b.n	396c <wait_us+0x1c>

00003980 <wait_ms>:
    3980:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    3984:	4358      	muls	r0, r3
    3986:	f7ff bfe3 	b.w	3950 <wait_us>
	...

0000398c <init_serial()>:
    398c:	b508      	push	{r3, lr}
    398e:	4b08      	ldr	r3, [pc, #32]	; (39b0 <init_serial()+0x24>)
    3990:	681b      	ldr	r3, [r3, #0]
    3992:	b95b      	cbnz	r3, 39ac <init_serial()+0x20>
    3994:	4907      	ldr	r1, [pc, #28]	; (39b4 <init_serial()+0x28>)
    3996:	4808      	ldr	r0, [pc, #32]	; (39b8 <init_serial()+0x2c>)
    3998:	4a08      	ldr	r2, [pc, #32]	; (39bc <init_serial()+0x30>)
    399a:	f7ff fca1 	bl	32e0 <serial_init>
    399e:	f44f 5116 	mov.w	r1, #9600	; 0x2580
    39a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    39a6:	4804      	ldr	r0, [pc, #16]	; (39b8 <init_serial()+0x2c>)
    39a8:	f7ff baca 	b.w	2f40 <serial_baud>
    39ac:	bd08      	pop	{r3, pc}
    39ae:	bf00      	nop
    39b0:	100019bc 	.word	0x100019bc
    39b4:	2009c002 	.word	0x2009c002
    39b8:	10002618 	.word	0x10002618
    39bc:	2009c003 	.word	0x2009c003

000039c0 <mbed_sdk_init>:
    39c0:	4770      	bx	lr
	...

000039c4 <_close>:
    39c4:	2802      	cmp	r0, #2
    39c6:	b510      	push	{r4, lr}
    39c8:	4604      	mov	r4, r0
    39ca:	dc01      	bgt.n	39d0 <_close+0xc>
    39cc:	2000      	movs	r0, #0
    39ce:	bd10      	pop	{r4, pc}
    39d0:	f000 f9c2 	bl	3d58 <__errno>
    39d4:	2309      	movs	r3, #9
    39d6:	2200      	movs	r2, #0
    39d8:	6003      	str	r3, [r0, #0]
    39da:	4b09      	ldr	r3, [pc, #36]	; (3a00 <_close+0x3c>)
    39dc:	3c03      	subs	r4, #3
    39de:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    39e2:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
    39e6:	b140      	cbz	r0, 39fa <_close+0x36>
    39e8:	6803      	ldr	r3, [r0, #0]
    39ea:	691b      	ldr	r3, [r3, #16]
    39ec:	4798      	blx	r3
    39ee:	1e04      	subs	r4, r0, #0
    39f0:	daec      	bge.n	39cc <_close+0x8>
    39f2:	f000 f9b1 	bl	3d58 <__errno>
    39f6:	4264      	negs	r4, r4
    39f8:	6004      	str	r4, [r0, #0]
    39fa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    39fe:	bd10      	pop	{r4, pc}
    3a00:	10001aa4 	.word	0x10001aa4

00003a04 <_write>:
    3a04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3a06:	4605      	mov	r5, r0
    3a08:	460e      	mov	r6, r1
    3a0a:	4614      	mov	r4, r2
    3a0c:	f000 f9a4 	bl	3d58 <__errno>
    3a10:	2309      	movs	r3, #9
    3a12:	2d02      	cmp	r5, #2
    3a14:	6003      	str	r3, [r0, #0]
    3a16:	dc0f      	bgt.n	3a38 <_write+0x34>
    3a18:	4b12      	ldr	r3, [pc, #72]	; (3a64 <_write+0x60>)
    3a1a:	681b      	ldr	r3, [r3, #0]
    3a1c:	b90b      	cbnz	r3, 3a22 <_write+0x1e>
    3a1e:	f7ff ffb5 	bl	398c <init_serial()>
    3a22:	4635      	mov	r5, r6
    3a24:	1937      	adds	r7, r6, r4
    3a26:	4e10      	ldr	r6, [pc, #64]	; (3a68 <_write+0x64>)
    3a28:	42bd      	cmp	r5, r7
    3a2a:	d015      	beq.n	3a58 <_write+0x54>
    3a2c:	f815 1b01 	ldrb.w	r1, [r5], #1
    3a30:	4630      	mov	r0, r6
    3a32:	f7ff fbb9 	bl	31a8 <serial_putc>
    3a36:	e7f7      	b.n	3a28 <_write+0x24>
    3a38:	4b0c      	ldr	r3, [pc, #48]	; (3a6c <_write+0x68>)
    3a3a:	3d03      	subs	r5, #3
    3a3c:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
    3a40:	b160      	cbz	r0, 3a5c <_write+0x58>
    3a42:	6803      	ldr	r3, [r0, #0]
    3a44:	4622      	mov	r2, r4
    3a46:	68db      	ldr	r3, [r3, #12]
    3a48:	4631      	mov	r1, r6
    3a4a:	4798      	blx	r3
    3a4c:	1e04      	subs	r4, r0, #0
    3a4e:	da03      	bge.n	3a58 <_write+0x54>
    3a50:	f000 f982 	bl	3d58 <__errno>
    3a54:	4263      	negs	r3, r4
    3a56:	6003      	str	r3, [r0, #0]
    3a58:	4620      	mov	r0, r4
    3a5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3a5c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
    3a60:	e7fa      	b.n	3a58 <_write+0x54>
    3a62:	bf00      	nop
    3a64:	100019bc 	.word	0x100019bc
    3a68:	10002618 	.word	0x10002618
    3a6c:	10001aa4 	.word	0x10001aa4

00003a70 <_read>:
    3a70:	b570      	push	{r4, r5, r6, lr}
    3a72:	4604      	mov	r4, r0
    3a74:	460d      	mov	r5, r1
    3a76:	4616      	mov	r6, r2
    3a78:	f000 f96e 	bl	3d58 <__errno>
    3a7c:	2309      	movs	r3, #9
    3a7e:	2c02      	cmp	r4, #2
    3a80:	6003      	str	r3, [r0, #0]
    3a82:	dc0b      	bgt.n	3a9c <_read+0x2c>
    3a84:	4b0f      	ldr	r3, [pc, #60]	; (3ac4 <_read+0x54>)
    3a86:	681b      	ldr	r3, [r3, #0]
    3a88:	b90b      	cbnz	r3, 3a8e <_read+0x1e>
    3a8a:	f7ff ff7f 	bl	398c <init_serial()>
    3a8e:	480e      	ldr	r0, [pc, #56]	; (3ac8 <_read+0x58>)
    3a90:	f7ff fb44 	bl	311c <serial_getc>
    3a94:	2401      	movs	r4, #1
    3a96:	7028      	strb	r0, [r5, #0]
    3a98:	4620      	mov	r0, r4
    3a9a:	bd70      	pop	{r4, r5, r6, pc}
    3a9c:	4b0b      	ldr	r3, [pc, #44]	; (3acc <_read+0x5c>)
    3a9e:	3c03      	subs	r4, #3
    3aa0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    3aa4:	b158      	cbz	r0, 3abe <_read+0x4e>
    3aa6:	6803      	ldr	r3, [r0, #0]
    3aa8:	4632      	mov	r2, r6
    3aaa:	689b      	ldr	r3, [r3, #8]
    3aac:	4629      	mov	r1, r5
    3aae:	4798      	blx	r3
    3ab0:	1e04      	subs	r4, r0, #0
    3ab2:	daf1      	bge.n	3a98 <_read+0x28>
    3ab4:	f000 f950 	bl	3d58 <__errno>
    3ab8:	4263      	negs	r3, r4
    3aba:	6003      	str	r3, [r0, #0]
    3abc:	e7ec      	b.n	3a98 <_read+0x28>
    3abe:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
    3ac2:	e7e9      	b.n	3a98 <_read+0x28>
    3ac4:	100019bc 	.word	0x100019bc
    3ac8:	10002618 	.word	0x10002618
    3acc:	10001aa4 	.word	0x10001aa4

00003ad0 <_lseek>:
    3ad0:	b570      	push	{r4, r5, r6, lr}
    3ad2:	4604      	mov	r4, r0
    3ad4:	460d      	mov	r5, r1
    3ad6:	4616      	mov	r6, r2
    3ad8:	f000 f93e 	bl	3d58 <__errno>
    3adc:	2309      	movs	r3, #9
    3ade:	2c02      	cmp	r4, #2
    3ae0:	6003      	str	r3, [r0, #0]
    3ae2:	dd0b      	ble.n	3afc <_lseek+0x2c>
    3ae4:	4b08      	ldr	r3, [pc, #32]	; (3b08 <_lseek+0x38>)
    3ae6:	3c03      	subs	r4, #3
    3ae8:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    3aec:	b140      	cbz	r0, 3b00 <_lseek+0x30>
    3aee:	6803      	ldr	r3, [r0, #0]
    3af0:	4632      	mov	r2, r6
    3af2:	4629      	mov	r1, r5
    3af4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    3af8:	69db      	ldr	r3, [r3, #28]
    3afa:	4718      	bx	r3
    3afc:	2000      	movs	r0, #0
    3afe:	bd70      	pop	{r4, r5, r6, pc}
    3b00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    3b04:	bd70      	pop	{r4, r5, r6, pc}
    3b06:	bf00      	nop
    3b08:	10001aa4 	.word	0x10001aa4

00003b0c <software_init_hook>:
    3b0c:	b508      	push	{r3, lr}
    3b0e:	f7ff ff57 	bl	39c0 <mbed_sdk_init>
    3b12:	f7fd ff09 	bl	1928 <software_init_hook_rtos>
    3b16:	bd08      	pop	{r3, pc}

00003b18 <mbed_main>:
    3b18:	4770      	bx	lr

00003b1a <__wrap_main>:
    3b1a:	b508      	push	{r3, lr}
    3b1c:	f7ff fffc 	bl	3b18 <mbed_main>
    3b20:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    3b24:	f7fd ba64 	b.w	ff0 <main>

00003b28 <_sbrk>:
    3b28:	4a0c      	ldr	r2, [pc, #48]	; (3b5c <_sbrk+0x34>)
    3b2a:	b510      	push	{r4, lr}
    3b2c:	6813      	ldr	r3, [r2, #0]
    3b2e:	4418      	add	r0, r3
    3b30:	f3ef 8108 	mrs	r1, MSP
    3b34:	4288      	cmp	r0, r1
    3b36:	d305      	bcc.n	3b44 <_sbrk+0x1c>
    3b38:	220c      	movs	r2, #12
    3b3a:	4b09      	ldr	r3, [pc, #36]	; (3b60 <_sbrk+0x38>)
    3b3c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    3b40:	601a      	str	r2, [r3, #0]
    3b42:	bd10      	pop	{r4, pc}
    3b44:	4907      	ldr	r1, [pc, #28]	; (3b64 <_sbrk+0x3c>)
    3b46:	680c      	ldr	r4, [r1, #0]
    3b48:	b124      	cbz	r4, 3b54 <_sbrk+0x2c>
    3b4a:	4907      	ldr	r1, [pc, #28]	; (3b68 <_sbrk+0x40>)
    3b4c:	6809      	ldr	r1, [r1, #0]
    3b4e:	4421      	add	r1, r4
    3b50:	4288      	cmp	r0, r1
    3b52:	d2f1      	bcs.n	3b38 <_sbrk+0x10>
    3b54:	6010      	str	r0, [r2, #0]
    3b56:	4618      	mov	r0, r3
    3b58:	bd10      	pop	{r4, pc}
    3b5a:	bf00      	nop
    3b5c:	100000e8 	.word	0x100000e8
    3b60:	10002620 	.word	0x10002620
    3b64:	10001ba4 	.word	0x10001ba4
    3b68:	10001ba8 	.word	0x10001ba8

00003b6c <_exit>:
    3b6c:	4c09      	ldr	r4, [pc, #36]	; (3b94 <_exit+0x28>)
    3b6e:	b508      	push	{r3, lr}
    3b70:	6823      	ldr	r3, [r4, #0]
    3b72:	4605      	mov	r5, r0
    3b74:	6898      	ldr	r0, [r3, #8]
    3b76:	f000 f9a7 	bl	3ec8 <fflush>
    3b7a:	6823      	ldr	r3, [r4, #0]
    3b7c:	68d8      	ldr	r0, [r3, #12]
    3b7e:	f000 f9a3 	bl	3ec8 <fflush>
    3b82:	f7fd fdcb 	bl	171c <mbed_interface_connected>
    3b86:	b108      	cbz	r0, 3b8c <_exit+0x20>
    3b88:	f7fd fe0a 	bl	17a0 <semihost_exit>
    3b8c:	b10d      	cbz	r5, 3b92 <_exit+0x26>
    3b8e:	f7fd fe27 	bl	17e0 <mbed_die>
    3b92:	e7fe      	b.n	3b92 <_exit+0x26>
    3b94:	100000ec 	.word	0x100000ec

00003b98 <__aeabi_atexit>:
    3b98:	2001      	movs	r0, #1
    3b9a:	4770      	bx	lr

00003b9c <__wrap_exit>:
    3b9c:	b508      	push	{r3, lr}
    3b9e:	f7ff ffe5 	bl	3b6c <_exit>

00003ba2 <__malloc_lock>:
    3ba2:	b508      	push	{r3, lr}
    3ba4:	f7fd fece 	bl	1944 <__rtos_malloc_lock>
    3ba8:	bd08      	pop	{r3, pc}

00003baa <__malloc_unlock>:
    3baa:	b508      	push	{r3, lr}
    3bac:	f7fd fed2 	bl	1954 <__rtos_malloc_unlock>
    3bb0:	bd08      	pop	{r3, pc}
	...

00003bb4 <operator new[](unsigned int)>:
    3bb4:	b510      	push	{r4, lr}
    3bb6:	f000 fa87 	bl	40c8 <malloc>
    3bba:	4604      	mov	r4, r0
    3bbc:	b910      	cbnz	r0, 3bc4 <operator new[](unsigned int)+0x10>
    3bbe:	4802      	ldr	r0, [pc, #8]	; (3bc8 <operator new[](unsigned int)+0x14>)
    3bc0:	f7fd fe4a 	bl	1858 <error>
    3bc4:	4620      	mov	r0, r4
    3bc6:	bd10      	pop	{r4, pc}
    3bc8:	00005080 	.word	0x00005080

00003bcc <operator delete[](void*)>:
    3bcc:	b108      	cbz	r0, 3bd2 <operator delete[](void*)+0x6>
    3bce:	f000 ba83 	b.w	40d8 <free>
    3bd2:	4770      	bx	lr

00003bd4 <operator delete(void*)>:
    3bd4:	f7ff bffa 	b.w	3bcc <operator delete[](void*)>

00003bd8 <thread_terminate_hook>:
    3bd8:	4b02      	ldr	r3, [pc, #8]	; (3be4 <thread_terminate_hook+0xc>)
    3bda:	681b      	ldr	r3, [r3, #0]
    3bdc:	b103      	cbz	r3, 3be0 <thread_terminate_hook+0x8>
    3bde:	4718      	bx	r3
    3be0:	4770      	bx	lr
    3be2:	bf00      	nop
    3be4:	10001bac 	.word	0x10001bac

00003be8 <rtos::Thread::wait(unsigned long)>:
    3be8:	f7fe bb72 	b.w	22d0 <osDelay>

00003bec <rt_set_PSP>:
    3bec:	f380 8809 	msr	PSP, r0
    3bf0:	4770      	bx	lr

00003bf2 <rt_get_PSP>:
    3bf2:	f3ef 8009 	mrs	r0, PSP
    3bf6:	4770      	bx	lr

00003bf8 <os_set_env>:
    3bf8:	4668      	mov	r0, sp
    3bfa:	f380 8809 	msr	PSP, r0
    3bfe:	483f      	ldr	r0, [pc, #252]	; (3cfc <OS_Tick_Handler+0xc>)
    3c00:	7800      	ldrb	r0, [r0, #0]
    3c02:	07c0      	lsls	r0, r0, #31
    3c04:	bf14      	ite	ne
    3c06:	2002      	movne	r0, #2
    3c08:	2003      	moveq	r0, #3
    3c0a:	f380 8814 	msr	CONTROL, r0
    3c0e:	4770      	bx	lr

00003c10 <_alloc_box>:
    3c10:	f8df c0ec 	ldr.w	r12, [pc, #236]	; 3d00 <OS_Tick_Handler+0x10>
    3c14:	f3ef 8305 	mrs	r3, IPSR
    3c18:	061b      	lsls	r3, r3, #24
    3c1a:	bf18      	it	ne
    3c1c:	4760      	bxne	r12
    3c1e:	f3ef 8314 	mrs	r3, CONTROL
    3c22:	07db      	lsls	r3, r3, #31
    3c24:	bf08      	it	eq
    3c26:	4760      	bxeq	r12
    3c28:	df00      	svc	0
    3c2a:	4770      	bx	lr

00003c2c <_free_box>:
    3c2c:	f8df c0d4 	ldr.w	r12, [pc, #212]	; 3d04 <OS_Tick_Handler+0x14>
    3c30:	f3ef 8305 	mrs	r3, IPSR
    3c34:	061b      	lsls	r3, r3, #24
    3c36:	bf18      	it	ne
    3c38:	4760      	bxne	r12
    3c3a:	f3ef 8314 	mrs	r3, CONTROL
    3c3e:	07db      	lsls	r3, r3, #31
    3c40:	bf08      	it	eq
    3c42:	4760      	bxeq	r12
    3c44:	df00      	svc	0
    3c46:	4770      	bx	lr

00003c48 <SVC_Handler>:
    3c48:	f3ef 8009 	mrs	r0, PSP
    3c4c:	6981      	ldr	r1, [r0, #24]
    3c4e:	f811 1c02 	ldrb.w	r1, [r1, #-2]
    3c52:	b9f1      	cbnz	r1, 3c92 <SVC_User>
    3c54:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
    3c58:	47e0      	blx	r12
    3c5a:	f3ef 8c09 	mrs	r12, PSP
    3c5e:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
    3c62:	4b29      	ldr	r3, [pc, #164]	; (3d08 <OS_Tick_Handler+0x18>)
    3c64:	e893 0006 	ldmia.w	r3, {r1, r2}
    3c68:	4291      	cmp	r1, r2
    3c6a:	d00f      	beq.n	3c8c <SVC_Exit>
    3c6c:	b139      	cbz	r1, 3c7e <SVC_Next>
    3c6e:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
    3c72:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
    3c76:	b40c      	push	{r2, r3}
    3c78:	f7fd fff0 	bl	1c5c <rt_stk_check>
    3c7c:	bc0c      	pop	{r2, r3}

00003c7e <SVC_Next>:
    3c7e:	601a      	str	r2, [r3, #0]
    3c80:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
    3c84:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
    3c88:	f38c 8809 	msr	PSP, r12

00003c8c <SVC_Exit>:
    3c8c:	f06f 0e02 	mvn.w	lr, #2
    3c90:	4770      	bx	lr

00003c92 <SVC_User>:
    3c92:	b510      	push	{r4, lr}
    3c94:	4a1d      	ldr	r2, [pc, #116]	; (3d0c <OS_Tick_Handler+0x1c>)
    3c96:	6812      	ldr	r2, [r2, #0]
    3c98:	4291      	cmp	r1, r2
    3c9a:	d809      	bhi.n	3cb0 <SVC_Done>
    3c9c:	4c1c      	ldr	r4, [pc, #112]	; (3d10 <OS_Tick_Handler+0x20>)
    3c9e:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
    3ca2:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
    3ca6:	47a0      	blx	r4
    3ca8:	f3ef 8c09 	mrs	r12, PSP
    3cac:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

00003cb0 <SVC_Done>:
    3cb0:	bd10      	pop	{r4, pc}

00003cb2 <PendSV_Handler>:
    3cb2:	f7fd ff5f 	bl	1b74 <rt_pop_req>

00003cb6 <Sys_Switch>:
    3cb6:	4b14      	ldr	r3, [pc, #80]	; (3d08 <OS_Tick_Handler+0x18>)
    3cb8:	e893 0006 	ldmia.w	r3, {r1, r2}
    3cbc:	4291      	cmp	r1, r2
    3cbe:	d010      	beq.n	3ce2 <Sys_Exit>
    3cc0:	f3ef 8c09 	mrs	r12, PSP
    3cc4:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
    3cc8:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
    3ccc:	b40c      	push	{r2, r3}
    3cce:	f7fd ffc5 	bl	1c5c <rt_stk_check>
    3cd2:	bc0c      	pop	{r2, r3}
    3cd4:	601a      	str	r2, [r3, #0]
    3cd6:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
    3cda:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
    3cde:	f38c 8809 	msr	PSP, r12

00003ce2 <Sys_Exit>:
    3ce2:	f06f 0e02 	mvn.w	lr, #2
    3ce6:	4770      	bx	lr

00003ce8 <SysTick_Handler>:
    3ce8:	f7fd ff9a 	bl	1c20 <rt_systick>
    3cec:	f7ff bfe3 	b.w	3cb6 <Sys_Switch>

00003cf0 <OS_Tick_Handler>:
    3cf0:	f7fd ff94 	bl	1c1c <os_tick_irqack>
    3cf4:	f7fd ff94 	bl	1c20 <rt_systick>
    3cf8:	f7ff bfdd 	b.w	3cb6 <Sys_Switch>
    3cfc:	00004eca 	.word	0x00004eca
    3d00:	00001d6d 	.word	0x00001d6d
    3d04:	00001d87 	.word	0x00001d87
    3d08:	100025cc 	.word	0x100025cc
    3d0c:	00000000 	.word	0x00000000
    3d10:	fffffffc 	.word	0xfffffffc

00003d14 <Reset_Handler>:
    3d14:	4906      	ldr	r1, [pc, #24]	; (3d30 <Reset_Handler+0x1c>)
    3d16:	4a07      	ldr	r2, [pc, #28]	; (3d34 <Reset_Handler+0x20>)
    3d18:	4b07      	ldr	r3, [pc, #28]	; (3d38 <Reset_Handler+0x24>)
    3d1a:	429a      	cmp	r2, r3
    3d1c:	bfbe      	ittt	lt
    3d1e:	f851 0b04 	ldrlt.w	r0, [r1], #4
    3d22:	f842 0b04 	strlt.w	r0, [r2], #4
    3d26:	e7f8      	blt.n	3d1a <Reset_Handler+0x6>
    3d28:	4804      	ldr	r0, [pc, #16]	; (3d3c <Reset_Handler+0x28>)
    3d2a:	4780      	blx	r0
    3d2c:	4804      	ldr	r0, [pc, #16]	; (3d40 <Reset_Handler+0x2c>)
    3d2e:	4700      	bx	r0
    3d30:	00005144 	.word	0x00005144
    3d34:	100000c8 	.word	0x100000c8
    3d38:	1000015c 	.word	0x1000015c
    3d3c:	0000359d 	.word	0x0000359d
    3d40:	00001139 	.word	0x00001139

00003d44 <NMI_Handler>:
    3d44:	e7fe      	b.n	3d44 <NMI_Handler>

00003d46 <HardFault_Handler>:
    3d46:	e7fe      	b.n	3d46 <HardFault_Handler>

00003d48 <MemManage_Handler>:
    3d48:	e7fe      	b.n	3d48 <MemManage_Handler>

00003d4a <BusFault_Handler>:
    3d4a:	e7fe      	b.n	3d4a <BusFault_Handler>

00003d4c <UsageFault_Handler>:
    3d4c:	e7fe      	b.n	3d4c <UsageFault_Handler>
    3d4e:	e7fe      	b.n	3d4e <UsageFault_Handler+0x2>

00003d50 <DebugMon_Handler>:
    3d50:	e7fe      	b.n	3d50 <DebugMon_Handler>
    3d52:	e7fe      	b.n	3d52 <DebugMon_Handler+0x2>
    3d54:	e7fe      	b.n	3d54 <DebugMon_Handler+0x4>

00003d56 <ADC_IRQHandler>:
    3d56:	e7fe      	b.n	3d56 <ADC_IRQHandler>

00003d58 <__errno>:
    3d58:	4b01      	ldr	r3, [pc, #4]	; (3d60 <__errno+0x8>)
    3d5a:	6818      	ldr	r0, [r3, #0]
    3d5c:	4770      	bx	lr
    3d5e:	bf00      	nop
    3d60:	100000ec 	.word	0x100000ec

00003d64 <__sflush_r>:
    3d64:	898a      	ldrh	r2, [r1, #12]
    3d66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3d6a:	4605      	mov	r5, r0
    3d6c:	0710      	lsls	r0, r2, #28
    3d6e:	460c      	mov	r4, r1
    3d70:	d45a      	bmi.n	3e28 <__sflush_r+0xc4>
    3d72:	684b      	ldr	r3, [r1, #4]
    3d74:	2b00      	cmp	r3, #0
    3d76:	dc05      	bgt.n	3d84 <__sflush_r+0x20>
    3d78:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    3d7a:	2b00      	cmp	r3, #0
    3d7c:	dc02      	bgt.n	3d84 <__sflush_r+0x20>
    3d7e:	2000      	movs	r0, #0
    3d80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3d84:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    3d86:	2e00      	cmp	r6, #0
    3d88:	d0f9      	beq.n	3d7e <__sflush_r+0x1a>
    3d8a:	2300      	movs	r3, #0
    3d8c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
    3d90:	682f      	ldr	r7, [r5, #0]
    3d92:	602b      	str	r3, [r5, #0]
    3d94:	d033      	beq.n	3dfe <__sflush_r+0x9a>
    3d96:	6d60      	ldr	r0, [r4, #84]	; 0x54
    3d98:	89a3      	ldrh	r3, [r4, #12]
    3d9a:	075a      	lsls	r2, r3, #29
    3d9c:	d505      	bpl.n	3daa <__sflush_r+0x46>
    3d9e:	6863      	ldr	r3, [r4, #4]
    3da0:	1ac0      	subs	r0, r0, r3
    3da2:	6b63      	ldr	r3, [r4, #52]	; 0x34
    3da4:	b10b      	cbz	r3, 3daa <__sflush_r+0x46>
    3da6:	6c23      	ldr	r3, [r4, #64]	; 0x40
    3da8:	1ac0      	subs	r0, r0, r3
    3daa:	2300      	movs	r3, #0
    3dac:	4602      	mov	r2, r0
    3dae:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    3db0:	6a21      	ldr	r1, [r4, #32]
    3db2:	4628      	mov	r0, r5
    3db4:	47b0      	blx	r6
    3db6:	1c43      	adds	r3, r0, #1
    3db8:	89a3      	ldrh	r3, [r4, #12]
    3dba:	d106      	bne.n	3dca <__sflush_r+0x66>
    3dbc:	6829      	ldr	r1, [r5, #0]
    3dbe:	291d      	cmp	r1, #29
    3dc0:	d84b      	bhi.n	3e5a <__sflush_r+0xf6>
    3dc2:	4a2b      	ldr	r2, [pc, #172]	; (3e70 <__sflush_r+0x10c>)
    3dc4:	40ca      	lsrs	r2, r1
    3dc6:	07d6      	lsls	r6, r2, #31
    3dc8:	d547      	bpl.n	3e5a <__sflush_r+0xf6>
    3dca:	2200      	movs	r2, #0
    3dcc:	6062      	str	r2, [r4, #4]
    3dce:	6922      	ldr	r2, [r4, #16]
    3dd0:	04d9      	lsls	r1, r3, #19
    3dd2:	6022      	str	r2, [r4, #0]
    3dd4:	d504      	bpl.n	3de0 <__sflush_r+0x7c>
    3dd6:	1c42      	adds	r2, r0, #1
    3dd8:	d101      	bne.n	3dde <__sflush_r+0x7a>
    3dda:	682b      	ldr	r3, [r5, #0]
    3ddc:	b903      	cbnz	r3, 3de0 <__sflush_r+0x7c>
    3dde:	6560      	str	r0, [r4, #84]	; 0x54
    3de0:	6b61      	ldr	r1, [r4, #52]	; 0x34
    3de2:	602f      	str	r7, [r5, #0]
    3de4:	2900      	cmp	r1, #0
    3de6:	d0ca      	beq.n	3d7e <__sflush_r+0x1a>
    3de8:	f104 0344 	add.w	r3, r4, #68	; 0x44
    3dec:	4299      	cmp	r1, r3
    3dee:	d002      	beq.n	3df6 <__sflush_r+0x92>
    3df0:	4628      	mov	r0, r5
    3df2:	f7ff fdab 	bl	394c <__wrap__free_r>
    3df6:	2000      	movs	r0, #0
    3df8:	6360      	str	r0, [r4, #52]	; 0x34
    3dfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3dfe:	6a21      	ldr	r1, [r4, #32]
    3e00:	2301      	movs	r3, #1
    3e02:	4628      	mov	r0, r5
    3e04:	47b0      	blx	r6
    3e06:	1c41      	adds	r1, r0, #1
    3e08:	d1c6      	bne.n	3d98 <__sflush_r+0x34>
    3e0a:	682b      	ldr	r3, [r5, #0]
    3e0c:	2b00      	cmp	r3, #0
    3e0e:	d0c3      	beq.n	3d98 <__sflush_r+0x34>
    3e10:	2b1d      	cmp	r3, #29
    3e12:	d001      	beq.n	3e18 <__sflush_r+0xb4>
    3e14:	2b16      	cmp	r3, #22
    3e16:	d101      	bne.n	3e1c <__sflush_r+0xb8>
    3e18:	602f      	str	r7, [r5, #0]
    3e1a:	e7b0      	b.n	3d7e <__sflush_r+0x1a>
    3e1c:	89a3      	ldrh	r3, [r4, #12]
    3e1e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    3e22:	81a3      	strh	r3, [r4, #12]
    3e24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3e28:	690f      	ldr	r7, [r1, #16]
    3e2a:	2f00      	cmp	r7, #0
    3e2c:	d0a7      	beq.n	3d7e <__sflush_r+0x1a>
    3e2e:	0793      	lsls	r3, r2, #30
    3e30:	bf18      	it	ne
    3e32:	2300      	movne	r3, #0
    3e34:	680e      	ldr	r6, [r1, #0]
    3e36:	bf08      	it	eq
    3e38:	694b      	ldreq	r3, [r1, #20]
    3e3a:	eba6 0807 	sub.w	r8, r6, r7
    3e3e:	600f      	str	r7, [r1, #0]
    3e40:	608b      	str	r3, [r1, #8]
    3e42:	f1b8 0f00 	cmp.w	r8, #0
    3e46:	dd9a      	ble.n	3d7e <__sflush_r+0x1a>
    3e48:	4643      	mov	r3, r8
    3e4a:	463a      	mov	r2, r7
    3e4c:	6a21      	ldr	r1, [r4, #32]
    3e4e:	4628      	mov	r0, r5
    3e50:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    3e52:	47b0      	blx	r6
    3e54:	2800      	cmp	r0, #0
    3e56:	dc07      	bgt.n	3e68 <__sflush_r+0x104>
    3e58:	89a3      	ldrh	r3, [r4, #12]
    3e5a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    3e5e:	81a3      	strh	r3, [r4, #12]
    3e60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    3e64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3e68:	4407      	add	r7, r0
    3e6a:	eba8 0800 	sub.w	r8, r8, r0
    3e6e:	e7e8      	b.n	3e42 <__sflush_r+0xde>
    3e70:	20400001 	.word	0x20400001

00003e74 <_fflush_r>:
    3e74:	b538      	push	{r3, r4, r5, lr}
    3e76:	690b      	ldr	r3, [r1, #16]
    3e78:	4605      	mov	r5, r0
    3e7a:	460c      	mov	r4, r1
    3e7c:	b1db      	cbz	r3, 3eb6 <_fflush_r+0x42>
    3e7e:	b118      	cbz	r0, 3e88 <_fflush_r+0x14>
    3e80:	6983      	ldr	r3, [r0, #24]
    3e82:	b90b      	cbnz	r3, 3e88 <_fflush_r+0x14>
    3e84:	f000 f872 	bl	3f6c <__sinit>
    3e88:	4b0c      	ldr	r3, [pc, #48]	; (3ebc <_fflush_r+0x48>)
    3e8a:	429c      	cmp	r4, r3
    3e8c:	d109      	bne.n	3ea2 <_fflush_r+0x2e>
    3e8e:	686c      	ldr	r4, [r5, #4]
    3e90:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    3e94:	b17b      	cbz	r3, 3eb6 <_fflush_r+0x42>
    3e96:	4621      	mov	r1, r4
    3e98:	4628      	mov	r0, r5
    3e9a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    3e9e:	f7ff bf61 	b.w	3d64 <__sflush_r>
    3ea2:	4b07      	ldr	r3, [pc, #28]	; (3ec0 <_fflush_r+0x4c>)
    3ea4:	429c      	cmp	r4, r3
    3ea6:	d101      	bne.n	3eac <_fflush_r+0x38>
    3ea8:	68ac      	ldr	r4, [r5, #8]
    3eaa:	e7f1      	b.n	3e90 <_fflush_r+0x1c>
    3eac:	4b05      	ldr	r3, [pc, #20]	; (3ec4 <_fflush_r+0x50>)
    3eae:	429c      	cmp	r4, r3
    3eb0:	bf08      	it	eq
    3eb2:	68ec      	ldreq	r4, [r5, #12]
    3eb4:	e7ec      	b.n	3e90 <_fflush_r+0x1c>
    3eb6:	2000      	movs	r0, #0
    3eb8:	bd38      	pop	{r3, r4, r5, pc}
    3eba:	bf00      	nop
    3ebc:	000050c0 	.word	0x000050c0
    3ec0:	000050e0 	.word	0x000050e0
    3ec4:	000050a0 	.word	0x000050a0

00003ec8 <fflush>:
    3ec8:	4601      	mov	r1, r0
    3eca:	b920      	cbnz	r0, 3ed6 <fflush+0xe>
    3ecc:	4b04      	ldr	r3, [pc, #16]	; (3ee0 <fflush+0x18>)
    3ece:	4905      	ldr	r1, [pc, #20]	; (3ee4 <fflush+0x1c>)
    3ed0:	6818      	ldr	r0, [r3, #0]
    3ed2:	f000 b8b7 	b.w	4044 <_fwalk_reent>
    3ed6:	4b04      	ldr	r3, [pc, #16]	; (3ee8 <fflush+0x20>)
    3ed8:	6818      	ldr	r0, [r3, #0]
    3eda:	f7ff bfcb 	b.w	3e74 <_fflush_r>
    3ede:	bf00      	nop
    3ee0:	00005100 	.word	0x00005100
    3ee4:	00003e75 	.word	0x00003e75
    3ee8:	100000ec 	.word	0x100000ec

00003eec <_cleanup_r>:
    3eec:	4901      	ldr	r1, [pc, #4]	; (3ef4 <_cleanup_r+0x8>)
    3eee:	f000 b8a9 	b.w	4044 <_fwalk_reent>
    3ef2:	bf00      	nop
    3ef4:	00003e75 	.word	0x00003e75

00003ef8 <std.isra.0>:
    3ef8:	2300      	movs	r3, #0
    3efa:	b510      	push	{r4, lr}
    3efc:	4604      	mov	r4, r0
    3efe:	6003      	str	r3, [r0, #0]
    3f00:	6043      	str	r3, [r0, #4]
    3f02:	6083      	str	r3, [r0, #8]
    3f04:	8181      	strh	r1, [r0, #12]
    3f06:	6643      	str	r3, [r0, #100]	; 0x64
    3f08:	81c2      	strh	r2, [r0, #14]
    3f0a:	6103      	str	r3, [r0, #16]
    3f0c:	6143      	str	r3, [r0, #20]
    3f0e:	6183      	str	r3, [r0, #24]
    3f10:	4619      	mov	r1, r3
    3f12:	2208      	movs	r2, #8
    3f14:	305c      	adds	r0, #92	; 0x5c
    3f16:	f000 f91a 	bl	414e <memset>
    3f1a:	4b05      	ldr	r3, [pc, #20]	; (3f30 <std.isra.0+0x38>)
    3f1c:	6224      	str	r4, [r4, #32]
    3f1e:	6263      	str	r3, [r4, #36]	; 0x24
    3f20:	4b04      	ldr	r3, [pc, #16]	; (3f34 <std.isra.0+0x3c>)
    3f22:	62a3      	str	r3, [r4, #40]	; 0x28
    3f24:	4b04      	ldr	r3, [pc, #16]	; (3f38 <std.isra.0+0x40>)
    3f26:	62e3      	str	r3, [r4, #44]	; 0x2c
    3f28:	4b04      	ldr	r3, [pc, #16]	; (3f3c <std.isra.0+0x44>)
    3f2a:	6323      	str	r3, [r4, #48]	; 0x30
    3f2c:	bd10      	pop	{r4, pc}
    3f2e:	bf00      	nop
    3f30:	00004661 	.word	0x00004661
    3f34:	00004683 	.word	0x00004683
    3f38:	000046bb 	.word	0x000046bb
    3f3c:	000046df 	.word	0x000046df

00003f40 <__sfmoreglue>:
    3f40:	b570      	push	{r4, r5, r6, lr}
    3f42:	2568      	movs	r5, #104	; 0x68
    3f44:	1e4a      	subs	r2, r1, #1
    3f46:	4355      	muls	r5, r2
    3f48:	460e      	mov	r6, r1
    3f4a:	f105 0174 	add.w	r1, r5, #116	; 0x74
    3f4e:	f7ff fcf9 	bl	3944 <__wrap__malloc_r>
    3f52:	4604      	mov	r4, r0
    3f54:	b140      	cbz	r0, 3f68 <__sfmoreglue+0x28>
    3f56:	2100      	movs	r1, #0
    3f58:	e880 0042 	stmia.w	r0, {r1, r6}
    3f5c:	300c      	adds	r0, #12
    3f5e:	60a0      	str	r0, [r4, #8]
    3f60:	f105 0268 	add.w	r2, r5, #104	; 0x68
    3f64:	f000 f8f3 	bl	414e <memset>
    3f68:	4620      	mov	r0, r4
    3f6a:	bd70      	pop	{r4, r5, r6, pc}

00003f6c <__sinit>:
    3f6c:	6983      	ldr	r3, [r0, #24]
    3f6e:	b510      	push	{r4, lr}
    3f70:	4604      	mov	r4, r0
    3f72:	bb33      	cbnz	r3, 3fc2 <__sinit+0x56>
    3f74:	6483      	str	r3, [r0, #72]	; 0x48
    3f76:	64c3      	str	r3, [r0, #76]	; 0x4c
    3f78:	6503      	str	r3, [r0, #80]	; 0x50
    3f7a:	4b12      	ldr	r3, [pc, #72]	; (3fc4 <__sinit+0x58>)
    3f7c:	4a12      	ldr	r2, [pc, #72]	; (3fc8 <__sinit+0x5c>)
    3f7e:	681b      	ldr	r3, [r3, #0]
    3f80:	6282      	str	r2, [r0, #40]	; 0x28
    3f82:	4298      	cmp	r0, r3
    3f84:	bf04      	itt	eq
    3f86:	2301      	moveq	r3, #1
    3f88:	6183      	streq	r3, [r0, #24]
    3f8a:	f000 f81f 	bl	3fcc <__sfp>
    3f8e:	6060      	str	r0, [r4, #4]
    3f90:	4620      	mov	r0, r4
    3f92:	f000 f81b 	bl	3fcc <__sfp>
    3f96:	60a0      	str	r0, [r4, #8]
    3f98:	4620      	mov	r0, r4
    3f9a:	f000 f817 	bl	3fcc <__sfp>
    3f9e:	2200      	movs	r2, #0
    3fa0:	60e0      	str	r0, [r4, #12]
    3fa2:	2104      	movs	r1, #4
    3fa4:	6860      	ldr	r0, [r4, #4]
    3fa6:	f7ff ffa7 	bl	3ef8 <std.isra.0>
    3faa:	2201      	movs	r2, #1
    3fac:	2109      	movs	r1, #9
    3fae:	68a0      	ldr	r0, [r4, #8]
    3fb0:	f7ff ffa2 	bl	3ef8 <std.isra.0>
    3fb4:	2202      	movs	r2, #2
    3fb6:	2112      	movs	r1, #18
    3fb8:	68e0      	ldr	r0, [r4, #12]
    3fba:	f7ff ff9d 	bl	3ef8 <std.isra.0>
    3fbe:	2301      	movs	r3, #1
    3fc0:	61a3      	str	r3, [r4, #24]
    3fc2:	bd10      	pop	{r4, pc}
    3fc4:	00005100 	.word	0x00005100
    3fc8:	00003eed 	.word	0x00003eed

00003fcc <__sfp>:
    3fcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3fce:	4b1c      	ldr	r3, [pc, #112]	; (4040 <__sfp+0x74>)
    3fd0:	4607      	mov	r7, r0
    3fd2:	681e      	ldr	r6, [r3, #0]
    3fd4:	69b3      	ldr	r3, [r6, #24]
    3fd6:	b913      	cbnz	r3, 3fde <__sfp+0x12>
    3fd8:	4630      	mov	r0, r6
    3fda:	f7ff ffc7 	bl	3f6c <__sinit>
    3fde:	3648      	adds	r6, #72	; 0x48
    3fe0:	68b4      	ldr	r4, [r6, #8]
    3fe2:	6873      	ldr	r3, [r6, #4]
    3fe4:	3b01      	subs	r3, #1
    3fe6:	d503      	bpl.n	3ff0 <__sfp+0x24>
    3fe8:	6833      	ldr	r3, [r6, #0]
    3fea:	b133      	cbz	r3, 3ffa <__sfp+0x2e>
    3fec:	6836      	ldr	r6, [r6, #0]
    3fee:	e7f7      	b.n	3fe0 <__sfp+0x14>
    3ff0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
    3ff4:	b16d      	cbz	r5, 4012 <__sfp+0x46>
    3ff6:	3468      	adds	r4, #104	; 0x68
    3ff8:	e7f4      	b.n	3fe4 <__sfp+0x18>
    3ffa:	2104      	movs	r1, #4
    3ffc:	4638      	mov	r0, r7
    3ffe:	f7ff ff9f 	bl	3f40 <__sfmoreglue>
    4002:	6030      	str	r0, [r6, #0]
    4004:	2800      	cmp	r0, #0
    4006:	d1f1      	bne.n	3fec <__sfp+0x20>
    4008:	230c      	movs	r3, #12
    400a:	4604      	mov	r4, r0
    400c:	603b      	str	r3, [r7, #0]
    400e:	4620      	mov	r0, r4
    4010:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4012:	f64f 73ff 	movw	r3, #65535	; 0xffff
    4016:	81e3      	strh	r3, [r4, #14]
    4018:	2301      	movs	r3, #1
    401a:	6665      	str	r5, [r4, #100]	; 0x64
    401c:	81a3      	strh	r3, [r4, #12]
    401e:	6025      	str	r5, [r4, #0]
    4020:	60a5      	str	r5, [r4, #8]
    4022:	6065      	str	r5, [r4, #4]
    4024:	6125      	str	r5, [r4, #16]
    4026:	6165      	str	r5, [r4, #20]
    4028:	61a5      	str	r5, [r4, #24]
    402a:	2208      	movs	r2, #8
    402c:	4629      	mov	r1, r5
    402e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
    4032:	f000 f88c 	bl	414e <memset>
    4036:	6365      	str	r5, [r4, #52]	; 0x34
    4038:	63a5      	str	r5, [r4, #56]	; 0x38
    403a:	64a5      	str	r5, [r4, #72]	; 0x48
    403c:	64e5      	str	r5, [r4, #76]	; 0x4c
    403e:	e7e6      	b.n	400e <__sfp+0x42>
    4040:	00005100 	.word	0x00005100

00004044 <_fwalk_reent>:
    4044:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    4048:	4680      	mov	r8, r0
    404a:	4689      	mov	r9, r1
    404c:	2600      	movs	r6, #0
    404e:	f100 0448 	add.w	r4, r0, #72	; 0x48
    4052:	b914      	cbnz	r4, 405a <_fwalk_reent+0x16>
    4054:	4630      	mov	r0, r6
    4056:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    405a:	68a5      	ldr	r5, [r4, #8]
    405c:	6867      	ldr	r7, [r4, #4]
    405e:	3f01      	subs	r7, #1
    4060:	d501      	bpl.n	4066 <_fwalk_reent+0x22>
    4062:	6824      	ldr	r4, [r4, #0]
    4064:	e7f5      	b.n	4052 <_fwalk_reent+0xe>
    4066:	89ab      	ldrh	r3, [r5, #12]
    4068:	2b01      	cmp	r3, #1
    406a:	d907      	bls.n	407c <_fwalk_reent+0x38>
    406c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    4070:	3301      	adds	r3, #1
    4072:	d003      	beq.n	407c <_fwalk_reent+0x38>
    4074:	4629      	mov	r1, r5
    4076:	4640      	mov	r0, r8
    4078:	47c8      	blx	r9
    407a:	4306      	orrs	r6, r0
    407c:	3568      	adds	r5, #104	; 0x68
    407e:	e7ee      	b.n	405e <_fwalk_reent+0x1a>

00004080 <__libc_init_array>:
    4080:	b570      	push	{r4, r5, r6, lr}
    4082:	2500      	movs	r5, #0
    4084:	4e0c      	ldr	r6, [pc, #48]	; (40b8 <__libc_init_array+0x38>)
    4086:	4c0d      	ldr	r4, [pc, #52]	; (40bc <__libc_init_array+0x3c>)
    4088:	1ba4      	subs	r4, r4, r6
    408a:	10a4      	asrs	r4, r4, #2
    408c:	42a5      	cmp	r5, r4
    408e:	d109      	bne.n	40a4 <__libc_init_array+0x24>
    4090:	f000 fcf2 	bl	4a78 <_init>
    4094:	2500      	movs	r5, #0
    4096:	4e0a      	ldr	r6, [pc, #40]	; (40c0 <__libc_init_array+0x40>)
    4098:	4c0a      	ldr	r4, [pc, #40]	; (40c4 <__libc_init_array+0x44>)
    409a:	1ba4      	subs	r4, r4, r6
    409c:	10a4      	asrs	r4, r4, #2
    409e:	42a5      	cmp	r5, r4
    40a0:	d105      	bne.n	40ae <__libc_init_array+0x2e>
    40a2:	bd70      	pop	{r4, r5, r6, pc}
    40a4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
    40a8:	4798      	blx	r3
    40aa:	3501      	adds	r5, #1
    40ac:	e7ee      	b.n	408c <__libc_init_array+0xc>
    40ae:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
    40b2:	4798      	blx	r3
    40b4:	3501      	adds	r5, #1
    40b6:	e7f2      	b.n	409e <__libc_init_array+0x1e>
    40b8:	10000150 	.word	0x10000150
    40bc:	10000150 	.word	0x10000150
    40c0:	10000150 	.word	0x10000150
    40c4:	10000158 	.word	0x10000158

000040c8 <malloc>:
    40c8:	4b02      	ldr	r3, [pc, #8]	; (40d4 <malloc+0xc>)
    40ca:	4601      	mov	r1, r0
    40cc:	6818      	ldr	r0, [r3, #0]
    40ce:	f7ff bc39 	b.w	3944 <__wrap__malloc_r>
    40d2:	bf00      	nop
    40d4:	100000ec 	.word	0x100000ec

000040d8 <free>:
    40d8:	4b02      	ldr	r3, [pc, #8]	; (40e4 <free+0xc>)
    40da:	4601      	mov	r1, r0
    40dc:	6818      	ldr	r0, [r3, #0]
    40de:	f7ff bc35 	b.w	394c <__wrap__free_r>
    40e2:	bf00      	nop
    40e4:	100000ec 	.word	0x100000ec

000040e8 <memchr>:
    40e8:	b510      	push	{r4, lr}
    40ea:	b2c9      	uxtb	r1, r1
    40ec:	4402      	add	r2, r0
    40ee:	4290      	cmp	r0, r2
    40f0:	4603      	mov	r3, r0
    40f2:	d101      	bne.n	40f8 <memchr+0x10>
    40f4:	2000      	movs	r0, #0
    40f6:	bd10      	pop	{r4, pc}
    40f8:	781c      	ldrb	r4, [r3, #0]
    40fa:	3001      	adds	r0, #1
    40fc:	428c      	cmp	r4, r1
    40fe:	d1f6      	bne.n	40ee <memchr+0x6>
    4100:	4618      	mov	r0, r3
    4102:	bd10      	pop	{r4, pc}

00004104 <memcpy>:
    4104:	b510      	push	{r4, lr}
    4106:	1e43      	subs	r3, r0, #1
    4108:	440a      	add	r2, r1
    410a:	4291      	cmp	r1, r2
    410c:	d100      	bne.n	4110 <memcpy+0xc>
    410e:	bd10      	pop	{r4, pc}
    4110:	f811 4b01 	ldrb.w	r4, [r1], #1
    4114:	f803 4f01 	strb.w	r4, [r3, #1]!
    4118:	e7f7      	b.n	410a <memcpy+0x6>

0000411a <memmove>:
    411a:	4288      	cmp	r0, r1
    411c:	b510      	push	{r4, lr}
    411e:	eb01 0302 	add.w	r3, r1, r2
    4122:	d803      	bhi.n	412c <memmove+0x12>
    4124:	1e42      	subs	r2, r0, #1
    4126:	4299      	cmp	r1, r3
    4128:	d10c      	bne.n	4144 <memmove+0x2a>
    412a:	bd10      	pop	{r4, pc}
    412c:	4298      	cmp	r0, r3
    412e:	d2f9      	bcs.n	4124 <memmove+0xa>
    4130:	1881      	adds	r1, r0, r2
    4132:	1ad2      	subs	r2, r2, r3
    4134:	42d3      	cmn	r3, r2
    4136:	d100      	bne.n	413a <memmove+0x20>
    4138:	bd10      	pop	{r4, pc}
    413a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
    413e:	f801 4d01 	strb.w	r4, [r1, #-1]!
    4142:	e7f7      	b.n	4134 <memmove+0x1a>
    4144:	f811 4b01 	ldrb.w	r4, [r1], #1
    4148:	f802 4f01 	strb.w	r4, [r2, #1]!
    414c:	e7eb      	b.n	4126 <memmove+0xc>

0000414e <memset>:
    414e:	4603      	mov	r3, r0
    4150:	4402      	add	r2, r0
    4152:	4293      	cmp	r3, r2
    4154:	d100      	bne.n	4158 <memset+0xa>
    4156:	4770      	bx	lr
    4158:	f803 1b01 	strb.w	r1, [r3], #1
    415c:	e7f9      	b.n	4152 <memset+0x4>
	...

00004160 <_free_r>:
    4160:	b538      	push	{r3, r4, r5, lr}
    4162:	4605      	mov	r5, r0
    4164:	2900      	cmp	r1, #0
    4166:	d043      	beq.n	41f0 <_free_r+0x90>
    4168:	f851 3c04 	ldr.w	r3, [r1, #-4]
    416c:	1f0c      	subs	r4, r1, #4
    416e:	2b00      	cmp	r3, #0
    4170:	bfb8      	it	lt
    4172:	18e4      	addlt	r4, r4, r3
    4174:	f7ff fd15 	bl	3ba2 <__malloc_lock>
    4178:	4a1e      	ldr	r2, [pc, #120]	; (41f4 <_free_r+0x94>)
    417a:	6813      	ldr	r3, [r2, #0]
    417c:	4610      	mov	r0, r2
    417e:	b933      	cbnz	r3, 418e <_free_r+0x2e>
    4180:	6063      	str	r3, [r4, #4]
    4182:	6014      	str	r4, [r2, #0]
    4184:	4628      	mov	r0, r5
    4186:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    418a:	f7ff bd0e 	b.w	3baa <__malloc_unlock>
    418e:	42a3      	cmp	r3, r4
    4190:	d90b      	bls.n	41aa <_free_r+0x4a>
    4192:	6821      	ldr	r1, [r4, #0]
    4194:	1862      	adds	r2, r4, r1
    4196:	4293      	cmp	r3, r2
    4198:	bf01      	itttt	eq
    419a:	681a      	ldreq	r2, [r3, #0]
    419c:	685b      	ldreq	r3, [r3, #4]
    419e:	1852      	addeq	r2, r2, r1
    41a0:	6022      	streq	r2, [r4, #0]
    41a2:	6063      	str	r3, [r4, #4]
    41a4:	6004      	str	r4, [r0, #0]
    41a6:	e7ed      	b.n	4184 <_free_r+0x24>
    41a8:	4613      	mov	r3, r2
    41aa:	685a      	ldr	r2, [r3, #4]
    41ac:	b10a      	cbz	r2, 41b2 <_free_r+0x52>
    41ae:	42a2      	cmp	r2, r4
    41b0:	d9fa      	bls.n	41a8 <_free_r+0x48>
    41b2:	6819      	ldr	r1, [r3, #0]
    41b4:	1858      	adds	r0, r3, r1
    41b6:	42a0      	cmp	r0, r4
    41b8:	d10b      	bne.n	41d2 <_free_r+0x72>
    41ba:	6820      	ldr	r0, [r4, #0]
    41bc:	4401      	add	r1, r0
    41be:	1858      	adds	r0, r3, r1
    41c0:	4282      	cmp	r2, r0
    41c2:	6019      	str	r1, [r3, #0]
    41c4:	d1de      	bne.n	4184 <_free_r+0x24>
    41c6:	6810      	ldr	r0, [r2, #0]
    41c8:	6852      	ldr	r2, [r2, #4]
    41ca:	4401      	add	r1, r0
    41cc:	6019      	str	r1, [r3, #0]
    41ce:	605a      	str	r2, [r3, #4]
    41d0:	e7d8      	b.n	4184 <_free_r+0x24>
    41d2:	d902      	bls.n	41da <_free_r+0x7a>
    41d4:	230c      	movs	r3, #12
    41d6:	602b      	str	r3, [r5, #0]
    41d8:	e7d4      	b.n	4184 <_free_r+0x24>
    41da:	6820      	ldr	r0, [r4, #0]
    41dc:	1821      	adds	r1, r4, r0
    41de:	428a      	cmp	r2, r1
    41e0:	bf01      	itttt	eq
    41e2:	6811      	ldreq	r1, [r2, #0]
    41e4:	6852      	ldreq	r2, [r2, #4]
    41e6:	1809      	addeq	r1, r1, r0
    41e8:	6021      	streq	r1, [r4, #0]
    41ea:	6062      	str	r2, [r4, #4]
    41ec:	605c      	str	r4, [r3, #4]
    41ee:	e7c9      	b.n	4184 <_free_r+0x24>
    41f0:	bd38      	pop	{r3, r4, r5, pc}
    41f2:	bf00      	nop
    41f4:	10001bb0 	.word	0x10001bb0

000041f8 <_malloc_r>:
    41f8:	b570      	push	{r4, r5, r6, lr}
    41fa:	1ccd      	adds	r5, r1, #3
    41fc:	f025 0503 	bic.w	r5, r5, #3
    4200:	3508      	adds	r5, #8
    4202:	2d0c      	cmp	r5, #12
    4204:	bf38      	it	cc
    4206:	250c      	movcc	r5, #12
    4208:	2d00      	cmp	r5, #0
    420a:	4606      	mov	r6, r0
    420c:	db01      	blt.n	4212 <_malloc_r+0x1a>
    420e:	42a9      	cmp	r1, r5
    4210:	d903      	bls.n	421a <_malloc_r+0x22>
    4212:	230c      	movs	r3, #12
    4214:	6033      	str	r3, [r6, #0]
    4216:	2000      	movs	r0, #0
    4218:	bd70      	pop	{r4, r5, r6, pc}
    421a:	f7ff fcc2 	bl	3ba2 <__malloc_lock>
    421e:	4a23      	ldr	r2, [pc, #140]	; (42ac <_malloc_r+0xb4>)
    4220:	6814      	ldr	r4, [r2, #0]
    4222:	4621      	mov	r1, r4
    4224:	b991      	cbnz	r1, 424c <_malloc_r+0x54>
    4226:	4c22      	ldr	r4, [pc, #136]	; (42b0 <_malloc_r+0xb8>)
    4228:	6823      	ldr	r3, [r4, #0]
    422a:	b91b      	cbnz	r3, 4234 <_malloc_r+0x3c>
    422c:	4630      	mov	r0, r6
    422e:	f000 fa07 	bl	4640 <_sbrk_r>
    4232:	6020      	str	r0, [r4, #0]
    4234:	4629      	mov	r1, r5
    4236:	4630      	mov	r0, r6
    4238:	f000 fa02 	bl	4640 <_sbrk_r>
    423c:	1c43      	adds	r3, r0, #1
    423e:	d126      	bne.n	428e <_malloc_r+0x96>
    4240:	230c      	movs	r3, #12
    4242:	4630      	mov	r0, r6
    4244:	6033      	str	r3, [r6, #0]
    4246:	f7ff fcb0 	bl	3baa <__malloc_unlock>
    424a:	e7e4      	b.n	4216 <_malloc_r+0x1e>
    424c:	680b      	ldr	r3, [r1, #0]
    424e:	1b5b      	subs	r3, r3, r5
    4250:	d41a      	bmi.n	4288 <_malloc_r+0x90>
    4252:	2b0b      	cmp	r3, #11
    4254:	d90f      	bls.n	4276 <_malloc_r+0x7e>
    4256:	600b      	str	r3, [r1, #0]
    4258:	18cc      	adds	r4, r1, r3
    425a:	50cd      	str	r5, [r1, r3]
    425c:	4630      	mov	r0, r6
    425e:	f7ff fca4 	bl	3baa <__malloc_unlock>
    4262:	f104 000b 	add.w	r0, r4, #11
    4266:	1d23      	adds	r3, r4, #4
    4268:	f020 0007 	bic.w	r0, r0, #7
    426c:	1ac3      	subs	r3, r0, r3
    426e:	d01b      	beq.n	42a8 <_malloc_r+0xb0>
    4270:	425a      	negs	r2, r3
    4272:	50e2      	str	r2, [r4, r3]
    4274:	bd70      	pop	{r4, r5, r6, pc}
    4276:	428c      	cmp	r4, r1
    4278:	bf0b      	itete	eq
    427a:	6863      	ldreq	r3, [r4, #4]
    427c:	684b      	ldrne	r3, [r1, #4]
    427e:	6013      	streq	r3, [r2, #0]
    4280:	6063      	strne	r3, [r4, #4]
    4282:	bf18      	it	ne
    4284:	460c      	movne	r4, r1
    4286:	e7e9      	b.n	425c <_malloc_r+0x64>
    4288:	460c      	mov	r4, r1
    428a:	6849      	ldr	r1, [r1, #4]
    428c:	e7ca      	b.n	4224 <_malloc_r+0x2c>
    428e:	1cc4      	adds	r4, r0, #3
    4290:	f024 0403 	bic.w	r4, r4, #3
    4294:	42a0      	cmp	r0, r4
    4296:	d005      	beq.n	42a4 <_malloc_r+0xac>
    4298:	1a21      	subs	r1, r4, r0
    429a:	4630      	mov	r0, r6
    429c:	f000 f9d0 	bl	4640 <_sbrk_r>
    42a0:	3001      	adds	r0, #1
    42a2:	d0cd      	beq.n	4240 <_malloc_r+0x48>
    42a4:	6025      	str	r5, [r4, #0]
    42a6:	e7d9      	b.n	425c <_malloc_r+0x64>
    42a8:	bd70      	pop	{r4, r5, r6, pc}
    42aa:	bf00      	nop
    42ac:	10001bb0 	.word	0x10001bb0
    42b0:	10001bb4 	.word	0x10001bb4

000042b4 <_realloc_r>:
    42b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    42b6:	4607      	mov	r7, r0
    42b8:	4614      	mov	r4, r2
    42ba:	460e      	mov	r6, r1
    42bc:	b921      	cbnz	r1, 42c8 <_realloc_r+0x14>
    42be:	4611      	mov	r1, r2
    42c0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    42c4:	f7ff bb3e 	b.w	3944 <__wrap__malloc_r>
    42c8:	b922      	cbnz	r2, 42d4 <_realloc_r+0x20>
    42ca:	f7ff fb3f 	bl	394c <__wrap__free_r>
    42ce:	4625      	mov	r5, r4
    42d0:	4628      	mov	r0, r5
    42d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    42d4:	f000 fa66 	bl	47a4 <_malloc_usable_size_r>
    42d8:	4284      	cmp	r4, r0
    42da:	d90f      	bls.n	42fc <_realloc_r+0x48>
    42dc:	4621      	mov	r1, r4
    42de:	4638      	mov	r0, r7
    42e0:	f7ff fb30 	bl	3944 <__wrap__malloc_r>
    42e4:	4605      	mov	r5, r0
    42e6:	2800      	cmp	r0, #0
    42e8:	d0f2      	beq.n	42d0 <_realloc_r+0x1c>
    42ea:	4631      	mov	r1, r6
    42ec:	4622      	mov	r2, r4
    42ee:	f7ff ff09 	bl	4104 <memcpy>
    42f2:	4631      	mov	r1, r6
    42f4:	4638      	mov	r0, r7
    42f6:	f7ff fb29 	bl	394c <__wrap__free_r>
    42fa:	e7e9      	b.n	42d0 <_realloc_r+0x1c>
    42fc:	4635      	mov	r5, r6
    42fe:	e7e7      	b.n	42d0 <_realloc_r+0x1c>

00004300 <_printf_common>:
    4300:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    4304:	4691      	mov	r9, r2
    4306:	461f      	mov	r7, r3
    4308:	688a      	ldr	r2, [r1, #8]
    430a:	690b      	ldr	r3, [r1, #16]
    430c:	4606      	mov	r6, r0
    430e:	4293      	cmp	r3, r2
    4310:	bfb8      	it	lt
    4312:	4613      	movlt	r3, r2
    4314:	f8c9 3000 	str.w	r3, [r9]
    4318:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
    431c:	460c      	mov	r4, r1
    431e:	f8dd 8020 	ldr.w	r8, [sp, #32]
    4322:	b112      	cbz	r2, 432a <_printf_common+0x2a>
    4324:	3301      	adds	r3, #1
    4326:	f8c9 3000 	str.w	r3, [r9]
    432a:	6823      	ldr	r3, [r4, #0]
    432c:	0699      	lsls	r1, r3, #26
    432e:	bf42      	ittt	mi
    4330:	f8d9 3000 	ldrmi.w	r3, [r9]
    4334:	3302      	addmi	r3, #2
    4336:	f8c9 3000 	strmi.w	r3, [r9]
    433a:	6825      	ldr	r5, [r4, #0]
    433c:	f015 0506 	ands.w	r5, r5, #6
    4340:	d107      	bne.n	4352 <_printf_common+0x52>
    4342:	f104 0a19 	add.w	r10, r4, #25
    4346:	68e3      	ldr	r3, [r4, #12]
    4348:	f8d9 2000 	ldr.w	r2, [r9]
    434c:	1a9b      	subs	r3, r3, r2
    434e:	429d      	cmp	r5, r3
    4350:	db2a      	blt.n	43a8 <_printf_common+0xa8>
    4352:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
    4356:	6822      	ldr	r2, [r4, #0]
    4358:	3300      	adds	r3, #0
    435a:	bf18      	it	ne
    435c:	2301      	movne	r3, #1
    435e:	0692      	lsls	r2, r2, #26
    4360:	d42f      	bmi.n	43c2 <_printf_common+0xc2>
    4362:	f104 0243 	add.w	r2, r4, #67	; 0x43
    4366:	4639      	mov	r1, r7
    4368:	4630      	mov	r0, r6
    436a:	47c0      	blx	r8
    436c:	3001      	adds	r0, #1
    436e:	d022      	beq.n	43b6 <_printf_common+0xb6>
    4370:	6823      	ldr	r3, [r4, #0]
    4372:	68e5      	ldr	r5, [r4, #12]
    4374:	f003 0306 	and.w	r3, r3, #6
    4378:	2b04      	cmp	r3, #4
    437a:	bf18      	it	ne
    437c:	2500      	movne	r5, #0
    437e:	f8d9 2000 	ldr.w	r2, [r9]
    4382:	f04f 0900 	mov.w	r9, #0
    4386:	bf08      	it	eq
    4388:	1aad      	subeq	r5, r5, r2
    438a:	68a3      	ldr	r3, [r4, #8]
    438c:	6922      	ldr	r2, [r4, #16]
    438e:	bf08      	it	eq
    4390:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
    4394:	4293      	cmp	r3, r2
    4396:	bfc4      	itt	gt
    4398:	1a9b      	subgt	r3, r3, r2
    439a:	18ed      	addgt	r5, r5, r3
    439c:	341a      	adds	r4, #26
    439e:	454d      	cmp	r5, r9
    43a0:	d11b      	bne.n	43da <_printf_common+0xda>
    43a2:	2000      	movs	r0, #0
    43a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
    43a8:	2301      	movs	r3, #1
    43aa:	4652      	mov	r2, r10
    43ac:	4639      	mov	r1, r7
    43ae:	4630      	mov	r0, r6
    43b0:	47c0      	blx	r8
    43b2:	3001      	adds	r0, #1
    43b4:	d103      	bne.n	43be <_printf_common+0xbe>
    43b6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    43ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
    43be:	3501      	adds	r5, #1
    43c0:	e7c1      	b.n	4346 <_printf_common+0x46>
    43c2:	2030      	movs	r0, #48	; 0x30
    43c4:	18e1      	adds	r1, r4, r3
    43c6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
    43ca:	1c5a      	adds	r2, r3, #1
    43cc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
    43d0:	4422      	add	r2, r4
    43d2:	3302      	adds	r3, #2
    43d4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
    43d8:	e7c3      	b.n	4362 <_printf_common+0x62>
    43da:	2301      	movs	r3, #1
    43dc:	4622      	mov	r2, r4
    43de:	4639      	mov	r1, r7
    43e0:	4630      	mov	r0, r6
    43e2:	47c0      	blx	r8
    43e4:	3001      	adds	r0, #1
    43e6:	d0e6      	beq.n	43b6 <_printf_common+0xb6>
    43e8:	f109 0901 	add.w	r9, r9, #1
    43ec:	e7d7      	b.n	439e <_printf_common+0x9e>
	...

000043f0 <_printf_i>:
    43f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    43f4:	4617      	mov	r7, r2
    43f6:	7e0a      	ldrb	r2, [r1, #24]
    43f8:	b085      	sub	sp, #20
    43fa:	2a6e      	cmp	r2, #110	; 0x6e
    43fc:	4698      	mov	r8, r3
    43fe:	4606      	mov	r6, r0
    4400:	460c      	mov	r4, r1
    4402:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4404:	f101 0e43 	add.w	lr, r1, #67	; 0x43
    4408:	f000 80bc 	beq.w	4584 <_printf_i+0x194>
    440c:	d81a      	bhi.n	4444 <_printf_i+0x54>
    440e:	2a63      	cmp	r2, #99	; 0x63
    4410:	d02e      	beq.n	4470 <_printf_i+0x80>
    4412:	d80a      	bhi.n	442a <_printf_i+0x3a>
    4414:	2a00      	cmp	r2, #0
    4416:	f000 80c8 	beq.w	45aa <_printf_i+0x1ba>
    441a:	2a58      	cmp	r2, #88	; 0x58
    441c:	f000 808a 	beq.w	4534 <_printf_i+0x144>
    4420:	f104 0542 	add.w	r5, r4, #66	; 0x42
    4424:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    4428:	e02a      	b.n	4480 <_printf_i+0x90>
    442a:	2a64      	cmp	r2, #100	; 0x64
    442c:	d001      	beq.n	4432 <_printf_i+0x42>
    442e:	2a69      	cmp	r2, #105	; 0x69
    4430:	d1f6      	bne.n	4420 <_printf_i+0x30>
    4432:	6821      	ldr	r1, [r4, #0]
    4434:	681a      	ldr	r2, [r3, #0]
    4436:	f011 0f80 	tst.w	r1, #128	; 0x80
    443a:	d023      	beq.n	4484 <_printf_i+0x94>
    443c:	1d11      	adds	r1, r2, #4
    443e:	6019      	str	r1, [r3, #0]
    4440:	6813      	ldr	r3, [r2, #0]
    4442:	e027      	b.n	4494 <_printf_i+0xa4>
    4444:	2a73      	cmp	r2, #115	; 0x73
    4446:	f000 80b4 	beq.w	45b2 <_printf_i+0x1c2>
    444a:	d808      	bhi.n	445e <_printf_i+0x6e>
    444c:	2a6f      	cmp	r2, #111	; 0x6f
    444e:	d02a      	beq.n	44a6 <_printf_i+0xb6>
    4450:	2a70      	cmp	r2, #112	; 0x70
    4452:	d1e5      	bne.n	4420 <_printf_i+0x30>
    4454:	680a      	ldr	r2, [r1, #0]
    4456:	f042 0220 	orr.w	r2, r2, #32
    445a:	600a      	str	r2, [r1, #0]
    445c:	e003      	b.n	4466 <_printf_i+0x76>
    445e:	2a75      	cmp	r2, #117	; 0x75
    4460:	d021      	beq.n	44a6 <_printf_i+0xb6>
    4462:	2a78      	cmp	r2, #120	; 0x78
    4464:	d1dc      	bne.n	4420 <_printf_i+0x30>
    4466:	2278      	movs	r2, #120	; 0x78
    4468:	496f      	ldr	r1, [pc, #444]	; (4628 <_printf_i+0x238>)
    446a:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
    446e:	e064      	b.n	453a <_printf_i+0x14a>
    4470:	681a      	ldr	r2, [r3, #0]
    4472:	f101 0542 	add.w	r5, r1, #66	; 0x42
    4476:	1d11      	adds	r1, r2, #4
    4478:	6019      	str	r1, [r3, #0]
    447a:	6813      	ldr	r3, [r2, #0]
    447c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    4480:	2301      	movs	r3, #1
    4482:	e0a3      	b.n	45cc <_printf_i+0x1dc>
    4484:	f011 0f40 	tst.w	r1, #64	; 0x40
    4488:	f102 0104 	add.w	r1, r2, #4
    448c:	6019      	str	r1, [r3, #0]
    448e:	d0d7      	beq.n	4440 <_printf_i+0x50>
    4490:	f9b2 3000 	ldrsh.w	r3, [r2]
    4494:	2b00      	cmp	r3, #0
    4496:	da03      	bge.n	44a0 <_printf_i+0xb0>
    4498:	222d      	movs	r2, #45	; 0x2d
    449a:	425b      	negs	r3, r3
    449c:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
    44a0:	4962      	ldr	r1, [pc, #392]	; (462c <_printf_i+0x23c>)
    44a2:	220a      	movs	r2, #10
    44a4:	e017      	b.n	44d6 <_printf_i+0xe6>
    44a6:	6820      	ldr	r0, [r4, #0]
    44a8:	6819      	ldr	r1, [r3, #0]
    44aa:	f010 0f80 	tst.w	r0, #128	; 0x80
    44ae:	d003      	beq.n	44b8 <_printf_i+0xc8>
    44b0:	1d08      	adds	r0, r1, #4
    44b2:	6018      	str	r0, [r3, #0]
    44b4:	680b      	ldr	r3, [r1, #0]
    44b6:	e006      	b.n	44c6 <_printf_i+0xd6>
    44b8:	f010 0f40 	tst.w	r0, #64	; 0x40
    44bc:	f101 0004 	add.w	r0, r1, #4
    44c0:	6018      	str	r0, [r3, #0]
    44c2:	d0f7      	beq.n	44b4 <_printf_i+0xc4>
    44c4:	880b      	ldrh	r3, [r1, #0]
    44c6:	2a6f      	cmp	r2, #111	; 0x6f
    44c8:	bf14      	ite	ne
    44ca:	220a      	movne	r2, #10
    44cc:	2208      	moveq	r2, #8
    44ce:	4957      	ldr	r1, [pc, #348]	; (462c <_printf_i+0x23c>)
    44d0:	2000      	movs	r0, #0
    44d2:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
    44d6:	6865      	ldr	r5, [r4, #4]
    44d8:	2d00      	cmp	r5, #0
    44da:	60a5      	str	r5, [r4, #8]
    44dc:	f2c0 809c 	blt.w	4618 <_printf_i+0x228>
    44e0:	6820      	ldr	r0, [r4, #0]
    44e2:	f020 0004 	bic.w	r0, r0, #4
    44e6:	6020      	str	r0, [r4, #0]
    44e8:	2b00      	cmp	r3, #0
    44ea:	d13f      	bne.n	456c <_printf_i+0x17c>
    44ec:	2d00      	cmp	r5, #0
    44ee:	f040 8095 	bne.w	461c <_printf_i+0x22c>
    44f2:	4675      	mov	r5, lr
    44f4:	2a08      	cmp	r2, #8
    44f6:	d10b      	bne.n	4510 <_printf_i+0x120>
    44f8:	6823      	ldr	r3, [r4, #0]
    44fa:	07da      	lsls	r2, r3, #31
    44fc:	d508      	bpl.n	4510 <_printf_i+0x120>
    44fe:	6923      	ldr	r3, [r4, #16]
    4500:	6862      	ldr	r2, [r4, #4]
    4502:	429a      	cmp	r2, r3
    4504:	bfde      	ittt	le
    4506:	2330      	movle	r3, #48	; 0x30
    4508:	f805 3c01 	strble.w	r3, [r5, #-1]
    450c:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
    4510:	ebae 0305 	sub.w	r3, lr, r5
    4514:	6123      	str	r3, [r4, #16]
    4516:	f8cd 8000 	str.w	r8, [sp]
    451a:	463b      	mov	r3, r7
    451c:	aa03      	add	r2, sp, #12
    451e:	4621      	mov	r1, r4
    4520:	4630      	mov	r0, r6
    4522:	f7ff feed 	bl	4300 <_printf_common>
    4526:	3001      	adds	r0, #1
    4528:	d155      	bne.n	45d6 <_printf_i+0x1e6>
    452a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    452e:	b005      	add	sp, #20
    4530:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    4534:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
    4538:	493c      	ldr	r1, [pc, #240]	; (462c <_printf_i+0x23c>)
    453a:	6822      	ldr	r2, [r4, #0]
    453c:	6818      	ldr	r0, [r3, #0]
    453e:	f012 0f80 	tst.w	r2, #128	; 0x80
    4542:	f100 0504 	add.w	r5, r0, #4
    4546:	601d      	str	r5, [r3, #0]
    4548:	d001      	beq.n	454e <_printf_i+0x15e>
    454a:	6803      	ldr	r3, [r0, #0]
    454c:	e002      	b.n	4554 <_printf_i+0x164>
    454e:	0655      	lsls	r5, r2, #25
    4550:	d5fb      	bpl.n	454a <_printf_i+0x15a>
    4552:	8803      	ldrh	r3, [r0, #0]
    4554:	07d0      	lsls	r0, r2, #31
    4556:	bf44      	itt	mi
    4558:	f042 0220 	orrmi.w	r2, r2, #32
    455c:	6022      	strmi	r2, [r4, #0]
    455e:	b91b      	cbnz	r3, 4568 <_printf_i+0x178>
    4560:	6822      	ldr	r2, [r4, #0]
    4562:	f022 0220 	bic.w	r2, r2, #32
    4566:	6022      	str	r2, [r4, #0]
    4568:	2210      	movs	r2, #16
    456a:	e7b1      	b.n	44d0 <_printf_i+0xe0>
    456c:	4675      	mov	r5, lr
    456e:	fbb3 f0f2 	udiv	r0, r3, r2
    4572:	fb02 3310 	mls	r3, r2, r0, r3
    4576:	5ccb      	ldrb	r3, [r1, r3]
    4578:	f805 3d01 	strb.w	r3, [r5, #-1]!
    457c:	4603      	mov	r3, r0
    457e:	2800      	cmp	r0, #0
    4580:	d1f5      	bne.n	456e <_printf_i+0x17e>
    4582:	e7b7      	b.n	44f4 <_printf_i+0x104>
    4584:	6808      	ldr	r0, [r1, #0]
    4586:	681a      	ldr	r2, [r3, #0]
    4588:	f010 0f80 	tst.w	r0, #128	; 0x80
    458c:	6949      	ldr	r1, [r1, #20]
    458e:	d004      	beq.n	459a <_printf_i+0x1aa>
    4590:	1d10      	adds	r0, r2, #4
    4592:	6018      	str	r0, [r3, #0]
    4594:	6813      	ldr	r3, [r2, #0]
    4596:	6019      	str	r1, [r3, #0]
    4598:	e007      	b.n	45aa <_printf_i+0x1ba>
    459a:	f010 0f40 	tst.w	r0, #64	; 0x40
    459e:	f102 0004 	add.w	r0, r2, #4
    45a2:	6018      	str	r0, [r3, #0]
    45a4:	6813      	ldr	r3, [r2, #0]
    45a6:	d0f6      	beq.n	4596 <_printf_i+0x1a6>
    45a8:	8019      	strh	r1, [r3, #0]
    45aa:	2300      	movs	r3, #0
    45ac:	4675      	mov	r5, lr
    45ae:	6123      	str	r3, [r4, #16]
    45b0:	e7b1      	b.n	4516 <_printf_i+0x126>
    45b2:	681a      	ldr	r2, [r3, #0]
    45b4:	1d11      	adds	r1, r2, #4
    45b6:	6019      	str	r1, [r3, #0]
    45b8:	6815      	ldr	r5, [r2, #0]
    45ba:	2100      	movs	r1, #0
    45bc:	6862      	ldr	r2, [r4, #4]
    45be:	4628      	mov	r0, r5
    45c0:	f7ff fd92 	bl	40e8 <memchr>
    45c4:	b108      	cbz	r0, 45ca <_printf_i+0x1da>
    45c6:	1b40      	subs	r0, r0, r5
    45c8:	6060      	str	r0, [r4, #4]
    45ca:	6863      	ldr	r3, [r4, #4]
    45cc:	6123      	str	r3, [r4, #16]
    45ce:	2300      	movs	r3, #0
    45d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    45d4:	e79f      	b.n	4516 <_printf_i+0x126>
    45d6:	6923      	ldr	r3, [r4, #16]
    45d8:	462a      	mov	r2, r5
    45da:	4639      	mov	r1, r7
    45dc:	4630      	mov	r0, r6
    45de:	47c0      	blx	r8
    45e0:	3001      	adds	r0, #1
    45e2:	d0a2      	beq.n	452a <_printf_i+0x13a>
    45e4:	6823      	ldr	r3, [r4, #0]
    45e6:	079b      	lsls	r3, r3, #30
    45e8:	d507      	bpl.n	45fa <_printf_i+0x20a>
    45ea:	2500      	movs	r5, #0
    45ec:	f104 0919 	add.w	r9, r4, #25
    45f0:	68e3      	ldr	r3, [r4, #12]
    45f2:	9a03      	ldr	r2, [sp, #12]
    45f4:	1a9b      	subs	r3, r3, r2
    45f6:	429d      	cmp	r5, r3
    45f8:	db05      	blt.n	4606 <_printf_i+0x216>
    45fa:	68e0      	ldr	r0, [r4, #12]
    45fc:	9b03      	ldr	r3, [sp, #12]
    45fe:	4298      	cmp	r0, r3
    4600:	bfb8      	it	lt
    4602:	4618      	movlt	r0, r3
    4604:	e793      	b.n	452e <_printf_i+0x13e>
    4606:	2301      	movs	r3, #1
    4608:	464a      	mov	r2, r9
    460a:	4639      	mov	r1, r7
    460c:	4630      	mov	r0, r6
    460e:	47c0      	blx	r8
    4610:	3001      	adds	r0, #1
    4612:	d08a      	beq.n	452a <_printf_i+0x13a>
    4614:	3501      	adds	r5, #1
    4616:	e7eb      	b.n	45f0 <_printf_i+0x200>
    4618:	2b00      	cmp	r3, #0
    461a:	d1a7      	bne.n	456c <_printf_i+0x17c>
    461c:	780b      	ldrb	r3, [r1, #0]
    461e:	f104 0542 	add.w	r5, r4, #66	; 0x42
    4622:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    4626:	e765      	b.n	44f4 <_printf_i+0x104>
    4628:	00005115 	.word	0x00005115
    462c:	00005104 	.word	0x00005104

00004630 <realloc>:
    4630:	4b02      	ldr	r3, [pc, #8]	; (463c <realloc+0xc>)
    4632:	460a      	mov	r2, r1
    4634:	4601      	mov	r1, r0
    4636:	6818      	ldr	r0, [r3, #0]
    4638:	f7ff b986 	b.w	3948 <__wrap__realloc_r>
    463c:	100000ec 	.word	0x100000ec

00004640 <_sbrk_r>:
    4640:	b538      	push	{r3, r4, r5, lr}
    4642:	2300      	movs	r3, #0
    4644:	4c05      	ldr	r4, [pc, #20]	; (465c <_sbrk_r+0x1c>)
    4646:	4605      	mov	r5, r0
    4648:	4608      	mov	r0, r1
    464a:	6023      	str	r3, [r4, #0]
    464c:	f7ff fa6c 	bl	3b28 <_sbrk>
    4650:	1c43      	adds	r3, r0, #1
    4652:	d102      	bne.n	465a <_sbrk_r+0x1a>
    4654:	6823      	ldr	r3, [r4, #0]
    4656:	b103      	cbz	r3, 465a <_sbrk_r+0x1a>
    4658:	602b      	str	r3, [r5, #0]
    465a:	bd38      	pop	{r3, r4, r5, pc}
    465c:	10002620 	.word	0x10002620

00004660 <__sread>:
    4660:	b510      	push	{r4, lr}
    4662:	460c      	mov	r4, r1
    4664:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    4668:	f000 f9f4 	bl	4a54 <_read_r>
    466c:	2800      	cmp	r0, #0
    466e:	bfab      	itete	ge
    4670:	6d63      	ldrge	r3, [r4, #84]	; 0x54
    4672:	89a3      	ldrhlt	r3, [r4, #12]
    4674:	181b      	addge	r3, r3, r0
    4676:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
    467a:	bfac      	ite	ge
    467c:	6563      	strge	r3, [r4, #84]	; 0x54
    467e:	81a3      	strhlt	r3, [r4, #12]
    4680:	bd10      	pop	{r4, pc}

00004682 <__swrite>:
    4682:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    4686:	461f      	mov	r7, r3
    4688:	898b      	ldrh	r3, [r1, #12]
    468a:	4605      	mov	r5, r0
    468c:	05db      	lsls	r3, r3, #23
    468e:	460c      	mov	r4, r1
    4690:	4616      	mov	r6, r2
    4692:	d505      	bpl.n	46a0 <__swrite+0x1e>
    4694:	2302      	movs	r3, #2
    4696:	2200      	movs	r2, #0
    4698:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    469c:	f000 f870 	bl	4780 <_lseek_r>
    46a0:	89a3      	ldrh	r3, [r4, #12]
    46a2:	4632      	mov	r2, r6
    46a4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    46a8:	81a3      	strh	r3, [r4, #12]
    46aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    46ae:	463b      	mov	r3, r7
    46b0:	4628      	mov	r0, r5
    46b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    46b6:	f000 b841 	b.w	473c <_write_r>

000046ba <__sseek>:
    46ba:	b510      	push	{r4, lr}
    46bc:	460c      	mov	r4, r1
    46be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    46c2:	f000 f85d 	bl	4780 <_lseek_r>
    46c6:	1c43      	adds	r3, r0, #1
    46c8:	89a3      	ldrh	r3, [r4, #12]
    46ca:	bf15      	itete	ne
    46cc:	6560      	strne	r0, [r4, #84]	; 0x54
    46ce:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    46d2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    46d6:	81a3      	strheq	r3, [r4, #12]
    46d8:	bf18      	it	ne
    46da:	81a3      	strhne	r3, [r4, #12]
    46dc:	bd10      	pop	{r4, pc}

000046de <__sclose>:
    46de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    46e2:	f000 b83d 	b.w	4760 <_close_r>

000046e6 <strlen>:
    46e6:	4603      	mov	r3, r0
    46e8:	f813 2b01 	ldrb.w	r2, [r3], #1
    46ec:	2a00      	cmp	r2, #0
    46ee:	d1fb      	bne.n	46e8 <strlen+0x2>
    46f0:	1a18      	subs	r0, r3, r0
    46f2:	3801      	subs	r0, #1
    46f4:	4770      	bx	lr

000046f6 <_vsiprintf_r>:
    46f6:	b510      	push	{r4, lr}
    46f8:	b09a      	sub	sp, #104	; 0x68
    46fa:	9100      	str	r1, [sp, #0]
    46fc:	9104      	str	r1, [sp, #16]
    46fe:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    4702:	9102      	str	r1, [sp, #8]
    4704:	9105      	str	r1, [sp, #20]
    4706:	f64f 71ff 	movw	r1, #65535	; 0xffff
    470a:	f44f 7402 	mov.w	r4, #520	; 0x208
    470e:	f8ad 100e 	strh.w	r1, [sp, #14]
    4712:	4669      	mov	r1, sp
    4714:	f8ad 400c 	strh.w	r4, [sp, #12]
    4718:	f000 f8a8 	bl	486c <_svfiprintf_r>
    471c:	2200      	movs	r2, #0
    471e:	9b00      	ldr	r3, [sp, #0]
    4720:	701a      	strb	r2, [r3, #0]
    4722:	b01a      	add	sp, #104	; 0x68
    4724:	bd10      	pop	{r4, pc}
	...

00004728 <vsiprintf>:
    4728:	4613      	mov	r3, r2
    472a:	460a      	mov	r2, r1
    472c:	4601      	mov	r1, r0
    472e:	4802      	ldr	r0, [pc, #8]	; (4738 <vsiprintf+0x10>)
    4730:	6800      	ldr	r0, [r0, #0]
    4732:	f7ff bfe0 	b.w	46f6 <_vsiprintf_r>
    4736:	bf00      	nop
    4738:	100000ec 	.word	0x100000ec

0000473c <_write_r>:
    473c:	b538      	push	{r3, r4, r5, lr}
    473e:	4605      	mov	r5, r0
    4740:	4608      	mov	r0, r1
    4742:	4611      	mov	r1, r2
    4744:	2200      	movs	r2, #0
    4746:	4c05      	ldr	r4, [pc, #20]	; (475c <_write_r+0x20>)
    4748:	6022      	str	r2, [r4, #0]
    474a:	461a      	mov	r2, r3
    474c:	f7ff f95a 	bl	3a04 <_write>
    4750:	1c43      	adds	r3, r0, #1
    4752:	d102      	bne.n	475a <_write_r+0x1e>
    4754:	6823      	ldr	r3, [r4, #0]
    4756:	b103      	cbz	r3, 475a <_write_r+0x1e>
    4758:	602b      	str	r3, [r5, #0]
    475a:	bd38      	pop	{r3, r4, r5, pc}
    475c:	10002620 	.word	0x10002620

00004760 <_close_r>:
    4760:	b538      	push	{r3, r4, r5, lr}
    4762:	2300      	movs	r3, #0
    4764:	4c05      	ldr	r4, [pc, #20]	; (477c <_close_r+0x1c>)
    4766:	4605      	mov	r5, r0
    4768:	4608      	mov	r0, r1
    476a:	6023      	str	r3, [r4, #0]
    476c:	f7ff f92a 	bl	39c4 <_close>
    4770:	1c43      	adds	r3, r0, #1
    4772:	d102      	bne.n	477a <_close_r+0x1a>
    4774:	6823      	ldr	r3, [r4, #0]
    4776:	b103      	cbz	r3, 477a <_close_r+0x1a>
    4778:	602b      	str	r3, [r5, #0]
    477a:	bd38      	pop	{r3, r4, r5, pc}
    477c:	10002620 	.word	0x10002620

00004780 <_lseek_r>:
    4780:	b538      	push	{r3, r4, r5, lr}
    4782:	4605      	mov	r5, r0
    4784:	4608      	mov	r0, r1
    4786:	4611      	mov	r1, r2
    4788:	2200      	movs	r2, #0
    478a:	4c05      	ldr	r4, [pc, #20]	; (47a0 <_lseek_r+0x20>)
    478c:	6022      	str	r2, [r4, #0]
    478e:	461a      	mov	r2, r3
    4790:	f7ff f99e 	bl	3ad0 <_lseek>
    4794:	1c43      	adds	r3, r0, #1
    4796:	d102      	bne.n	479e <_lseek_r+0x1e>
    4798:	6823      	ldr	r3, [r4, #0]
    479a:	b103      	cbz	r3, 479e <_lseek_r+0x1e>
    479c:	602b      	str	r3, [r5, #0]
    479e:	bd38      	pop	{r3, r4, r5, pc}
    47a0:	10002620 	.word	0x10002620

000047a4 <_malloc_usable_size_r>:
    47a4:	f851 0c04 	ldr.w	r0, [r1, #-4]
    47a8:	2800      	cmp	r0, #0
    47aa:	f1a0 0004 	sub.w	r0, r0, #4
    47ae:	bfbc      	itt	lt
    47b0:	580b      	ldrlt	r3, [r1, r0]
    47b2:	18c0      	addlt	r0, r0, r3
    47b4:	4770      	bx	lr

000047b6 <__ssputs_r>:
    47b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    47ba:	688e      	ldr	r6, [r1, #8]
    47bc:	4682      	mov	r10, r0
    47be:	429e      	cmp	r6, r3
    47c0:	460c      	mov	r4, r1
    47c2:	4691      	mov	r9, r2
    47c4:	4698      	mov	r8, r3
    47c6:	d835      	bhi.n	4834 <__ssputs_r+0x7e>
    47c8:	898a      	ldrh	r2, [r1, #12]
    47ca:	f412 6f90 	tst.w	r2, #1152	; 0x480
    47ce:	d031      	beq.n	4834 <__ssputs_r+0x7e>
    47d0:	2302      	movs	r3, #2
    47d2:	6825      	ldr	r5, [r4, #0]
    47d4:	6909      	ldr	r1, [r1, #16]
    47d6:	1a6f      	subs	r7, r5, r1
    47d8:	6965      	ldr	r5, [r4, #20]
    47da:	eb05 0545 	add.w	r5, r5, r5, lsl #1
    47de:	fb95 f5f3 	sdiv	r5, r5, r3
    47e2:	f108 0301 	add.w	r3, r8, #1
    47e6:	443b      	add	r3, r7
    47e8:	429d      	cmp	r5, r3
    47ea:	bf38      	it	cc
    47ec:	461d      	movcc	r5, r3
    47ee:	0553      	lsls	r3, r2, #21
    47f0:	d531      	bpl.n	4856 <__ssputs_r+0xa0>
    47f2:	4629      	mov	r1, r5
    47f4:	f7ff f8a6 	bl	3944 <__wrap__malloc_r>
    47f8:	4606      	mov	r6, r0
    47fa:	b950      	cbnz	r0, 4812 <__ssputs_r+0x5c>
    47fc:	230c      	movs	r3, #12
    47fe:	f8ca 3000 	str.w	r3, [r10]
    4802:	89a3      	ldrh	r3, [r4, #12]
    4804:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    4808:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    480c:	81a3      	strh	r3, [r4, #12]
    480e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
    4812:	463a      	mov	r2, r7
    4814:	6921      	ldr	r1, [r4, #16]
    4816:	f7ff fc75 	bl	4104 <memcpy>
    481a:	89a3      	ldrh	r3, [r4, #12]
    481c:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    4820:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    4824:	81a3      	strh	r3, [r4, #12]
    4826:	6126      	str	r6, [r4, #16]
    4828:	443e      	add	r6, r7
    482a:	6026      	str	r6, [r4, #0]
    482c:	4646      	mov	r6, r8
    482e:	6165      	str	r5, [r4, #20]
    4830:	1bed      	subs	r5, r5, r7
    4832:	60a5      	str	r5, [r4, #8]
    4834:	4546      	cmp	r6, r8
    4836:	bf28      	it	cs
    4838:	4646      	movcs	r6, r8
    483a:	4649      	mov	r1, r9
    483c:	4632      	mov	r2, r6
    483e:	6820      	ldr	r0, [r4, #0]
    4840:	f7ff fc6b 	bl	411a <memmove>
    4844:	68a3      	ldr	r3, [r4, #8]
    4846:	2000      	movs	r0, #0
    4848:	1b9b      	subs	r3, r3, r6
    484a:	60a3      	str	r3, [r4, #8]
    484c:	6823      	ldr	r3, [r4, #0]
    484e:	441e      	add	r6, r3
    4850:	6026      	str	r6, [r4, #0]
    4852:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
    4856:	462a      	mov	r2, r5
    4858:	f7ff f876 	bl	3948 <__wrap__realloc_r>
    485c:	4606      	mov	r6, r0
    485e:	2800      	cmp	r0, #0
    4860:	d1e1      	bne.n	4826 <__ssputs_r+0x70>
    4862:	6921      	ldr	r1, [r4, #16]
    4864:	4650      	mov	r0, r10
    4866:	f7ff f871 	bl	394c <__wrap__free_r>
    486a:	e7c7      	b.n	47fc <__ssputs_r+0x46>

0000486c <_svfiprintf_r>:
    486c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4870:	b09d      	sub	sp, #116	; 0x74
    4872:	9303      	str	r3, [sp, #12]
    4874:	898b      	ldrh	r3, [r1, #12]
    4876:	4680      	mov	r8, r0
    4878:	061c      	lsls	r4, r3, #24
    487a:	460d      	mov	r5, r1
    487c:	4616      	mov	r6, r2
    487e:	d50f      	bpl.n	48a0 <_svfiprintf_r+0x34>
    4880:	690b      	ldr	r3, [r1, #16]
    4882:	b96b      	cbnz	r3, 48a0 <_svfiprintf_r+0x34>
    4884:	2140      	movs	r1, #64	; 0x40
    4886:	f7ff f85d 	bl	3944 <__wrap__malloc_r>
    488a:	6028      	str	r0, [r5, #0]
    488c:	6128      	str	r0, [r5, #16]
    488e:	b928      	cbnz	r0, 489c <_svfiprintf_r+0x30>
    4890:	230c      	movs	r3, #12
    4892:	f8c8 3000 	str.w	r3, [r8]
    4896:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    489a:	e0c4      	b.n	4a26 <_svfiprintf_r+0x1ba>
    489c:	2340      	movs	r3, #64	; 0x40
    489e:	616b      	str	r3, [r5, #20]
    48a0:	2300      	movs	r3, #0
    48a2:	9309      	str	r3, [sp, #36]	; 0x24
    48a4:	2320      	movs	r3, #32
    48a6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    48aa:	2330      	movs	r3, #48	; 0x30
    48ac:	f04f 0b01 	mov.w	r11, #1
    48b0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    48b4:	4637      	mov	r7, r6
    48b6:	463c      	mov	r4, r7
    48b8:	f814 3b01 	ldrb.w	r3, [r4], #1
    48bc:	2b00      	cmp	r3, #0
    48be:	d13c      	bne.n	493a <_svfiprintf_r+0xce>
    48c0:	ebb7 0a06 	subs.w	r10, r7, r6
    48c4:	d00b      	beq.n	48de <_svfiprintf_r+0x72>
    48c6:	4653      	mov	r3, r10
    48c8:	4632      	mov	r2, r6
    48ca:	4629      	mov	r1, r5
    48cc:	4640      	mov	r0, r8
    48ce:	f7ff ff72 	bl	47b6 <__ssputs_r>
    48d2:	3001      	adds	r0, #1
    48d4:	f000 80a2 	beq.w	4a1c <_svfiprintf_r+0x1b0>
    48d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    48da:	4453      	add	r3, r10
    48dc:	9309      	str	r3, [sp, #36]	; 0x24
    48de:	783b      	ldrb	r3, [r7, #0]
    48e0:	2b00      	cmp	r3, #0
    48e2:	f000 809b 	beq.w	4a1c <_svfiprintf_r+0x1b0>
    48e6:	2300      	movs	r3, #0
    48e8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    48ec:	9304      	str	r3, [sp, #16]
    48ee:	9307      	str	r3, [sp, #28]
    48f0:	9205      	str	r2, [sp, #20]
    48f2:	9306      	str	r3, [sp, #24]
    48f4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    48f8:	931a      	str	r3, [sp, #104]	; 0x68
    48fa:	2205      	movs	r2, #5
    48fc:	7821      	ldrb	r1, [r4, #0]
    48fe:	4850      	ldr	r0, [pc, #320]	; (4a40 <_svfiprintf_r+0x1d4>)
    4900:	f7ff fbf2 	bl	40e8 <memchr>
    4904:	1c67      	adds	r7, r4, #1
    4906:	9b04      	ldr	r3, [sp, #16]
    4908:	b9d8      	cbnz	r0, 4942 <_svfiprintf_r+0xd6>
    490a:	06d9      	lsls	r1, r3, #27
    490c:	bf44      	itt	mi
    490e:	2220      	movmi	r2, #32
    4910:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    4914:	071a      	lsls	r2, r3, #28
    4916:	bf44      	itt	mi
    4918:	222b      	movmi	r2, #43	; 0x2b
    491a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    491e:	7822      	ldrb	r2, [r4, #0]
    4920:	2a2a      	cmp	r2, #42	; 0x2a
    4922:	d016      	beq.n	4952 <_svfiprintf_r+0xe6>
    4924:	2100      	movs	r1, #0
    4926:	200a      	movs	r0, #10
    4928:	9a07      	ldr	r2, [sp, #28]
    492a:	4627      	mov	r7, r4
    492c:	783b      	ldrb	r3, [r7, #0]
    492e:	3401      	adds	r4, #1
    4930:	3b30      	subs	r3, #48	; 0x30
    4932:	2b09      	cmp	r3, #9
    4934:	d950      	bls.n	49d8 <_svfiprintf_r+0x16c>
    4936:	b1c9      	cbz	r1, 496c <_svfiprintf_r+0x100>
    4938:	e011      	b.n	495e <_svfiprintf_r+0xf2>
    493a:	2b25      	cmp	r3, #37	; 0x25
    493c:	d0c0      	beq.n	48c0 <_svfiprintf_r+0x54>
    493e:	4627      	mov	r7, r4
    4940:	e7b9      	b.n	48b6 <_svfiprintf_r+0x4a>
    4942:	4a3f      	ldr	r2, [pc, #252]	; (4a40 <_svfiprintf_r+0x1d4>)
    4944:	463c      	mov	r4, r7
    4946:	1a80      	subs	r0, r0, r2
    4948:	fa0b f000 	lsl.w	r0, r11, r0
    494c:	4318      	orrs	r0, r3
    494e:	9004      	str	r0, [sp, #16]
    4950:	e7d3      	b.n	48fa <_svfiprintf_r+0x8e>
    4952:	9a03      	ldr	r2, [sp, #12]
    4954:	1d11      	adds	r1, r2, #4
    4956:	6812      	ldr	r2, [r2, #0]
    4958:	9103      	str	r1, [sp, #12]
    495a:	2a00      	cmp	r2, #0
    495c:	db01      	blt.n	4962 <_svfiprintf_r+0xf6>
    495e:	9207      	str	r2, [sp, #28]
    4960:	e004      	b.n	496c <_svfiprintf_r+0x100>
    4962:	4252      	negs	r2, r2
    4964:	f043 0302 	orr.w	r3, r3, #2
    4968:	9207      	str	r2, [sp, #28]
    496a:	9304      	str	r3, [sp, #16]
    496c:	783b      	ldrb	r3, [r7, #0]
    496e:	2b2e      	cmp	r3, #46	; 0x2e
    4970:	d10d      	bne.n	498e <_svfiprintf_r+0x122>
    4972:	787b      	ldrb	r3, [r7, #1]
    4974:	1c79      	adds	r1, r7, #1
    4976:	2b2a      	cmp	r3, #42	; 0x2a
    4978:	d132      	bne.n	49e0 <_svfiprintf_r+0x174>
    497a:	9b03      	ldr	r3, [sp, #12]
    497c:	3702      	adds	r7, #2
    497e:	1d1a      	adds	r2, r3, #4
    4980:	681b      	ldr	r3, [r3, #0]
    4982:	9203      	str	r2, [sp, #12]
    4984:	2b00      	cmp	r3, #0
    4986:	bfb8      	it	lt
    4988:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    498c:	9305      	str	r3, [sp, #20]
    498e:	4c2d      	ldr	r4, [pc, #180]	; (4a44 <_svfiprintf_r+0x1d8>)
    4990:	2203      	movs	r2, #3
    4992:	7839      	ldrb	r1, [r7, #0]
    4994:	4620      	mov	r0, r4
    4996:	f7ff fba7 	bl	40e8 <memchr>
    499a:	b138      	cbz	r0, 49ac <_svfiprintf_r+0x140>
    499c:	2340      	movs	r3, #64	; 0x40
    499e:	1b00      	subs	r0, r0, r4
    49a0:	fa03 f000 	lsl.w	r0, r3, r0
    49a4:	9b04      	ldr	r3, [sp, #16]
    49a6:	3701      	adds	r7, #1
    49a8:	4303      	orrs	r3, r0
    49aa:	9304      	str	r3, [sp, #16]
    49ac:	7839      	ldrb	r1, [r7, #0]
    49ae:	2206      	movs	r2, #6
    49b0:	4825      	ldr	r0, [pc, #148]	; (4a48 <_svfiprintf_r+0x1dc>)
    49b2:	1c7e      	adds	r6, r7, #1
    49b4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    49b8:	f7ff fb96 	bl	40e8 <memchr>
    49bc:	2800      	cmp	r0, #0
    49be:	d035      	beq.n	4a2c <_svfiprintf_r+0x1c0>
    49c0:	4b22      	ldr	r3, [pc, #136]	; (4a4c <_svfiprintf_r+0x1e0>)
    49c2:	b9fb      	cbnz	r3, 4a04 <_svfiprintf_r+0x198>
    49c4:	9b03      	ldr	r3, [sp, #12]
    49c6:	3307      	adds	r3, #7
    49c8:	f023 0307 	bic.w	r3, r3, #7
    49cc:	3308      	adds	r3, #8
    49ce:	9303      	str	r3, [sp, #12]
    49d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    49d2:	444b      	add	r3, r9
    49d4:	9309      	str	r3, [sp, #36]	; 0x24
    49d6:	e76d      	b.n	48b4 <_svfiprintf_r+0x48>
    49d8:	fb00 3202 	mla	r2, r0, r2, r3
    49dc:	2101      	movs	r1, #1
    49de:	e7a4      	b.n	492a <_svfiprintf_r+0xbe>
    49e0:	2300      	movs	r3, #0
    49e2:	240a      	movs	r4, #10
    49e4:	4618      	mov	r0, r3
    49e6:	9305      	str	r3, [sp, #20]
    49e8:	460f      	mov	r7, r1
    49ea:	783a      	ldrb	r2, [r7, #0]
    49ec:	3101      	adds	r1, #1
    49ee:	3a30      	subs	r2, #48	; 0x30
    49f0:	2a09      	cmp	r2, #9
    49f2:	d903      	bls.n	49fc <_svfiprintf_r+0x190>
    49f4:	2b00      	cmp	r3, #0
    49f6:	d0ca      	beq.n	498e <_svfiprintf_r+0x122>
    49f8:	9005      	str	r0, [sp, #20]
    49fa:	e7c8      	b.n	498e <_svfiprintf_r+0x122>
    49fc:	fb04 2000 	mla	r0, r4, r0, r2
    4a00:	2301      	movs	r3, #1
    4a02:	e7f1      	b.n	49e8 <_svfiprintf_r+0x17c>
    4a04:	ab03      	add	r3, sp, #12
    4a06:	9300      	str	r3, [sp, #0]
    4a08:	462a      	mov	r2, r5
    4a0a:	4b11      	ldr	r3, [pc, #68]	; (4a50 <_svfiprintf_r+0x1e4>)
    4a0c:	a904      	add	r1, sp, #16
    4a0e:	4640      	mov	r0, r8
    4a10:	f3af 8000 	nop.w
    4a14:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    4a18:	4681      	mov	r9, r0
    4a1a:	d1d9      	bne.n	49d0 <_svfiprintf_r+0x164>
    4a1c:	89ab      	ldrh	r3, [r5, #12]
    4a1e:	065b      	lsls	r3, r3, #25
    4a20:	f53f af39 	bmi.w	4896 <_svfiprintf_r+0x2a>
    4a24:	9809      	ldr	r0, [sp, #36]	; 0x24
    4a26:	b01d      	add	sp, #116	; 0x74
    4a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    4a2c:	ab03      	add	r3, sp, #12
    4a2e:	9300      	str	r3, [sp, #0]
    4a30:	462a      	mov	r2, r5
    4a32:	4b07      	ldr	r3, [pc, #28]	; (4a50 <_svfiprintf_r+0x1e4>)
    4a34:	a904      	add	r1, sp, #16
    4a36:	4640      	mov	r0, r8
    4a38:	f7ff fcda 	bl	43f0 <_printf_i>
    4a3c:	e7ea      	b.n	4a14 <_svfiprintf_r+0x1a8>
    4a3e:	bf00      	nop
    4a40:	00005126 	.word	0x00005126
    4a44:	0000512c 	.word	0x0000512c
    4a48:	00005130 	.word	0x00005130
    4a4c:	00000000 	.word	0x00000000
    4a50:	000047b7 	.word	0x000047b7

00004a54 <_read_r>:
    4a54:	b538      	push	{r3, r4, r5, lr}
    4a56:	4605      	mov	r5, r0
    4a58:	4608      	mov	r0, r1
    4a5a:	4611      	mov	r1, r2
    4a5c:	2200      	movs	r2, #0
    4a5e:	4c05      	ldr	r4, [pc, #20]	; (4a74 <_read_r+0x20>)
    4a60:	6022      	str	r2, [r4, #0]
    4a62:	461a      	mov	r2, r3
    4a64:	f7ff f804 	bl	3a70 <_read>
    4a68:	1c43      	adds	r3, r0, #1
    4a6a:	d102      	bne.n	4a72 <_read_r+0x1e>
    4a6c:	6823      	ldr	r3, [r4, #0]
    4a6e:	b103      	cbz	r3, 4a72 <_read_r+0x1e>
    4a70:	602b      	str	r3, [r5, #0]
    4a72:	bd38      	pop	{r3, r4, r5, pc}
    4a74:	10002620 	.word	0x10002620

00004a78 <_init>:
    4a78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4a7a:	bf00      	nop
    4a7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    4a7e:	bc08      	pop	{r3}
    4a80:	469e      	mov	lr, r3
    4a82:	4770      	bx	lr

00004a84 <_fini>:
    4a84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4a86:	bf00      	nop
    4a88:	bcf8      	pop	{r3, r4, r5, r6, r7}
    4a8a:	bc08      	pop	{r3}
    4a8c:	469e      	mov	lr, r3
    4a8e:	4770      	bx	lr

00004a90 <vtable for std_msgs::Time>:
	...
    4a98:	0139 0000 0161 0000 019d 0000 01a5 0000     9...a...........

00004aa8 <vtable for rosserial_msgs::TopicInfo>:
	...
    4ab0:	051f 0000 05f9 0000 01ad 0000 01b5 0000     ................

00004ac0 <vtable for rosserial_msgs::Log>:
	...
    4ac8:	04f3 0000 05c3 0000 01bd 0000 01c5 0000     ................

00004ad8 <vtable for rosserial_msgs::RequestParamResponse>:
	...
    4ae0:	0415 0000 06af 0000 01cd 0000 01d5 0000     ................

00004af0 <vtable for std_msgs::MultiArrayDimension>:
	...
    4af8:	03c9 0000 07d7 0000 01dd 0000 01e5 0000     ................

00004b08 <vtable for std_msgs::MultiArrayLayout>:
	...
    4b10:	01ed 0000 0841 0000 0239 0000 0241 0000     ....A...9...A...

00004b20 <vtable for std_msgs::Int32MultiArray>:
	...
    4b28:	0249 0000 08b3 0000 02a1 0000 02a9 0000     I...............

00004b38 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
    4b40:	0d05 0000 0dc5 0000 02bf 0000               ............

00004b4c <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
    4b4c:	02b1 0000 02b5 0000 02bd 0000 6b2f 6961     ............/kai
    4b5c:	5f74 6f72 6f62 2f74 6e65 6f63 6564 5f72     t_robot/encoder_
    4b6c:	6f63 6e75 0074 0000                         count...

00004b74 <encode_table>:
    4b74:	0000 0000 ffff ffff 0001 0000 0000 0000     ................
    4b84:	0001 0000 0000 0000 0000 0000 ffff ffff     ................
    4b94:	ffff ffff 0000 0000 0000 0000 0001 0000     ................
    4ba4:	0000 0000 0001 0000 ffff ffff 0000 0000     ................
    4bb4:	6639 6530 3839 6462 3661 3935 3138 3839     9f0e98bda6598198
    4bc4:	6436 6664 3335 6661 3761 3461 6530 3934     6ddf53afa7a40e49
    4bd4:	3100 6131 6462 3337 6331 3532 3339 3233     .11abd731c259332
    4be4:	3136 6463 3136 3338 6462 3231 3664 3932     61cd6183bd12d629
    4bf4:	0035 6f72 7373 7265 6169 5f6c 736d 7367     5.rosserial_msgs
    4c04:	4c2f 676f 3000 6461 3135 3866 6638 3463     /Log.0ad51f88fc4
    4c14:	3834 3239 3866 3163 3630 3438 3730 3637     4892f8c106840776
    4c24:	3634 3030 0035 6f72 7373 7265 6169 5f6c     46005.rosserial_
    4c34:	736d 7367 542f 706f 6369 6e49 6f66 7200          msgs/TopicInfo.

00004c43 <rosserial_msgs::REQUESTPARAM>:
    4c43:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
    4c53:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
    4c63:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
    4c73:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
    4c83:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
    4c93:	6566 2e72 3100 3964 6639 3937 3866 3362     fer..1d99f79f8b3
    4ca3:	3532 3462 6634 6565 3039 3038 3335 3965     25b44fee908053e9
    4cb3:	3963 3534 0062 7473 5f64 736d 7367 492f     c945b.std_msgs/I
    4cc3:	746e 3233 754d 746c 4169 7272 7961 3000     nt32MultiArray.0
    4cd3:	6566 3264 3161 6331 3331 3165 6331 3535     fed2a11c13e11c55
    4ce3:	3137 3462 3265 3961 3539 3961 6131 0033     71b4e2a995a91a3.
    4cf3:	7473 5f64 736d 7367 4d2f 6c75 6974 7241     std_msgs/MultiAr
    4d03:	6172 4c79 7961 756f 0074 6334 3064 3863     rayLayout.4cd0c8
    4d13:	6133 3638 3338 6564 6561 3034 6365 6164     3a8683deae40ecda
    4d23:	3663 6530 3335 6662 3861 7300 6474 6d5f     c60e53bfa8.std_m
    4d33:	6773 2f73 754d 746c 4169 7272 7961 6944     sgs/MultiArrayDi
    4d43:	656d 736e 6f69 006e 6463 3137 3636 3763     mension.cd7166c7
    4d53:	6334 3535 6332 3133 6631 6362 3263 6566     4c552c311fbcc2fe
    4d63:	6135 6237 3263 3938 7300 6474 6d5f 6773     5a7bc289.std_msg
    4d73:	2f73 6954 656d 0000 cb00                         s/Time...

00004d7c <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
    4d7c:	11cb 0000 11bd 0000 11c9 0000 682f 6d6f     ............/hom
    4d8c:	2f65 6b6b 7472 722f 736f 6c2f 6269 722f     e/kkrt/ros/lib/r
    4d9c:	736f 6c5f 6269 422f 6675 6566 6572 5364     os_lib/BufferedS
    4dac:	7265 6169 2f6c 7542 6666 7265 6465 6553     erial/BufferedSe
    4dbc:	6972 6c61 632e 7070 2500 2073 6425 6220     rial.cpp.%s %d b
    4dcc:	6675 6566 2072 766f 7265 7277 7469 2065     uffer overwrite 
    4ddc:	6d28 7861 625f 6675 735f 7a69 3a65 2520     (max_buf_size: %
    4dec:	2064 7865 6563 6465 6465 203a 6425 2129     d exceeded: %d)!
    4dfc:	0a0d 0000                                   ....

00004e00 <vtable for BufferedSerial>:
	...
    4e08:	36c7 0000 36c7 0000 1221 0000 1279 0000     .6...6..!...y...
    4e18:	118d 0000 1199 0000 119d 0000 13e3 0000     ................
    4e28:	13fb 0000 1475 0000 1439 0000               ....u...9...

00004e34 <us_data>:
    4e34:	4e3c 0000 0930 1000                         <N..0...

00004e3c <us_interface>:
    4e3c:	3429 0000 3485 0000 34b5 0000 34c5 0000     )4...4...4...4..
    4e4c:	34a1 0000 6970 6d6e 7061 6d20 7369 6d2d     .4..pinmap mis-m
    4e5c:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
    4e6c:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
    4e7c:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
    4e8c:	6e69 756f 0074 0000                         inout...

00004e94 <mp_stk_size>:
    4e94:	0210 0000                                   ....

00004e98 <mp_tcb_size>:
    4e98:	03cc                                        ..

00004e9a <mp_tmr_size>:
	...

00004e9c <os_clockrate>:
    4e9c:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
    4eac:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
    4ebc:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

00004ec9 <os_fifo_size>:
    4ec9:	0110                                             .

00004eca <os_flags>:
    4eca:	0001                                        ..

00004ecc <os_maxtaskrun>:
    4ecc:	000f 0000                                   ....

00004ed0 <os_messageQ_def_osTimerMessageQ>:
    4ed0:	0004 0000 0954 1000                         ....T...

00004ed8 <os_mutex_def_env_mutex>:
    4ed8:	0974 1000                                   t...

00004edc <os_mutex_def_malloc_mutex>:
    4edc:	0984 1000                                   ....

00004ee0 <os_mutex_def_singleton_mutex>:
    4ee0:	0994 1000                                   ....

00004ee4 <os_rrobin>:
    4ee4:	0005 0001                                   ....

00004ee8 <os_stackinfo>:
    4ee8:	0200 0100                                   ....

00004eec <os_thread_def_osTimerThread>:
    4eec:	26c5 0000 0002 0000 0001 0000 0320 0000     .&.......... ...
    4efc:	1e90 1000                                   ....

00004f00 <os_trv>:
    4f00:	76ff 0001                                   .v..

00004f04 <os_mutex_def_osThreadMutex>:
    4f04:	19a8 1000                                   ....

00004f08 <PinMap_UART_CTS>:
    4f08:	c011 2009 0000 4001 0001 0000 c042 2009     ... ...@....B.. 
    4f18:	0000 4001 0002 0000 ffff ffff ffff ffff     ...@............
    4f28:	0000 0000                                   ....

00004f2c <PinMap_UART_RTS>:
    4f2c:	c016 2009 0000 4001 0001 0000 c047 2009     ... ...@....G.. 
    4f3c:	0000 4001 0002 0000 ffff ffff ffff ffff     ...@............
    4f4c:	0000 0000                                   ....

00004f50 <PinMap_UART_RX>:
    4f50:	c001 2009 c000 4009 0002 0000 c003 2009     ... ...@....... 
    4f60:	c000 4000 0001 0000 c00b 2009 8000 4009     ...@....... ...@
    4f70:	0001 0000 c010 2009 0000 4001 0001 0000     ....... ...@....
    4f80:	c01a 2009 c000 4009 0003 0000 c041 2009     ... ...@....A.. 
    4f90:	0000 4001 0002 0000 c049 2009 8000 4009     ...@....I.. ...@
    4fa0:	0002 0000 c09d 2009 c000 4009 0003 0000     ....... ...@....
    4fb0:	ffff ffff ffff ffff 0000 0000               ............

00004fbc <PinMap_UART_TX>:
    4fbc:	c000 2009 c000 4009 0002 0000 c002 2009     ... ...@....... 
    4fcc:	c000 4000 0001 0000 c00a 2009 8000 4009     ...@....... ...@
    4fdc:	0001 0000 c00f 2009 0000 4001 0001 0000     ....... ...@....
    4fec:	c019 2009 c000 4009 0003 0000 c040 2009     ... ...@....@.. 
    4ffc:	0000 4001 0002 0000 c048 2009 8000 4009     ...@....H.. ...@
    500c:	0002 0000 c09c 2009 c000 4009 0003 0000     ....... ...@....
    501c:	ffff ffff ffff ffff 0000 0000               ............

00005028 <vtable for mbed::Ticker>:
	...
    5030:	0369 0000 038d 0000 3641 0000               i.......A6..

0000503c <vtable for mbed::RawSerial>:
	...
    5044:	36c7 0000 36c7 0000 36c9 0000 36dd 0000     .6...6...6...6..

00005054 <vtable for mbed::SerialBase>:
	...
    505c:	37cb 0000 37cd 0000 11e5 0000 120d 0000     .7...7..........

0000506c <vtable for mbed::TimerEvent>:
	...
    507c:	1169 0000 704f 7265 7461 726f 6e20 7765     i...Operator new
    508c:	5d5b 6f20 7475 6f20 2066 656d 6f6d 7972     [] out of memory
    509c:	0a0d 0000                                   ....

000050a0 <__sf_fake_stderr>:
	...

000050c0 <__sf_fake_stdin>:
	...

000050e0 <__sf_fake_stdout>:
	...

00005100 <_global_impure_ptr>:
    5100:	00f0 1000 3130 3332 3534 3736 3938 4241     ....0123456789AB
    5110:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
    5120:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
    5130:	6665 4567 4746 0000                         efgEFG..

00005138 <__EH_FRAME_BEGIN__>:
    5138:	0000 0000                                   ....
